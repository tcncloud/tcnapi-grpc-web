// source: services/billing/entities/v1alpha3/matching.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig', null, global);
goog.exportSymbol('proto.services.billing.entities.v1alpha3.MatchingConfig', null, global);
goog.exportSymbol('proto.services.billing.entities.v1alpha3.MatchingConfig.ConfigCase', null, global);
goog.exportSymbol('proto.services.billing.entities.v1alpha3.MatchingConfigType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.billing.entities.v1alpha3.MatchingConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.services.billing.entities.v1alpha3.MatchingConfig.oneofGroups_);
};
goog.inherits(proto.services.billing.entities.v1alpha3.MatchingConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.billing.entities.v1alpha3.MatchingConfig.displayName = 'proto.services.billing.entities.v1alpha3.MatchingConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.repeatedFields_, null);
};
goog.inherits(proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.displayName = 'proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.ConfigCase = {
  CONFIG_NOT_SET: 0,
  COUNTRY_PREFIX: 2
};

/**
 * @return {proto.services.billing.entities.v1alpha3.MatchingConfig.ConfigCase}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.getConfigCase = function() {
  return /** @type {proto.services.billing.entities.v1alpha3.MatchingConfig.ConfigCase} */(jspb.Message.computeOneofCase(this, proto.services.billing.entities.v1alpha3.MatchingConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.services.billing.entities.v1alpha3.MatchingConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.billing.entities.v1alpha3.MatchingConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    countryPrefix: (f = msg.getCountryPrefix()) && proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.billing.entities.v1alpha3.MatchingConfig}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.billing.entities.v1alpha3.MatchingConfig;
  return proto.services.billing.entities.v1alpha3.MatchingConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.billing.entities.v1alpha3.MatchingConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.billing.entities.v1alpha3.MatchingConfig}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.services.billing.entities.v1alpha3.MatchingConfigType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig;
      reader.readMessage(value,proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.deserializeBinaryFromReader);
      msg.setCountryPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.billing.entities.v1alpha3.MatchingConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.billing.entities.v1alpha3.MatchingConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCountryPrefix();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional MatchingConfigType type = 1;
 * @return {!proto.services.billing.entities.v1alpha3.MatchingConfigType}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.getType = function() {
  return /** @type {!proto.services.billing.entities.v1alpha3.MatchingConfigType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.services.billing.entities.v1alpha3.MatchingConfigType} value
 * @return {!proto.services.billing.entities.v1alpha3.MatchingConfig} returns this
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional CountryPrefixMatchingConfig country_prefix = 2;
 * @return {?proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.getCountryPrefix = function() {
  return /** @type{?proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} */ (
    jspb.Message.getWrapperField(this, proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig, 2));
};


/**
 * @param {?proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig|undefined} value
 * @return {!proto.services.billing.entities.v1alpha3.MatchingConfig} returns this
*/
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.setCountryPrefix = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.services.billing.entities.v1alpha3.MatchingConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.billing.entities.v1alpha3.MatchingConfig} returns this
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.clearCountryPrefix = function() {
  return this.setCountryPrefix(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.billing.entities.v1alpha3.MatchingConfig.prototype.hasCountryPrefix = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryCode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    prefixesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig}
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig;
  return proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig}
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountryCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrefixes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPrefixesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional int32 country_code = 1;
 * @return {number}
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.getCountryCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} returns this
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string prefixes = 2;
 * @return {!Array<string>}
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.getPrefixesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} returns this
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.setPrefixesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} returns this
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.addPrefixes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig} returns this
 */
proto.services.billing.entities.v1alpha3.CountryPrefixMatchingConfig.prototype.clearPrefixesList = function() {
  return this.setPrefixesList([]);
};


/**
 * @enum {number}
 */
proto.services.billing.entities.v1alpha3.MatchingConfigType = {
  MATCHING_CONFIG_TYPE_UNSPECIFIED: 0,
  MATCHING_CONFIG_TYPE_COUNTRY_PREFIX: 1
};

goog.object.extend(exports, proto.services.billing.entities.v1alpha3);
