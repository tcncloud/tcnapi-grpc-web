// source: services/pbx/v2/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var annotations_authz_pb = require('../../../annotations/authz_pb.js');
goog.object.extend(proto, annotations_authz_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
goog.exportSymbol('proto.services.pbx.v2.AssignRandomExtensionRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.AssignRandomExtensionResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.CreateRingGroupRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.CreateRingGroupResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.DeleteRingGroupRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.DeleteRingGroupResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetPBXUserRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetPBXUserResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetRingGroupRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetRingGroupResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetSIPAccountByUserIdRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetSIPAccountByUserIdResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetSIPAccountRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.GetSIPAccountResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListPBXUsersRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListPBXUsersResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListRingGroupsBySipIdRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListRingGroupsBySipIdResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListRingGroupsRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListRingGroupsResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListSIPAccountsRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.ListSIPAccountsResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.OrgHuntGroup', null, global);
goog.exportSymbol('proto.services.pbx.v2.OrgPermissionGroup', null, global);
goog.exportSymbol('proto.services.pbx.v2.OrgSkill', null, global);
goog.exportSymbol('proto.services.pbx.v2.PBXUser', null, global);
goog.exportSymbol('proto.services.pbx.v2.RingGroup', null, global);
goog.exportSymbol('proto.services.pbx.v2.RingStrategy', null, global);
goog.exportSymbol('proto.services.pbx.v2.SIPAccount', null, global);
goog.exportSymbol('proto.services.pbx.v2.SIPAccountRingGroup', null, global);
goog.exportSymbol('proto.services.pbx.v2.UpdateRingGroupRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.UpdateRingGroupResponse', null, global);
goog.exportSymbol('proto.services.pbx.v2.UpdateSIPAccountRequest', null, global);
goog.exportSymbol('proto.services.pbx.v2.UpdateSIPAccountResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.PBXUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.PBXUser.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.PBXUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.PBXUser.displayName = 'proto.services.pbx.v2.PBXUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.SIPAccountRingGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.SIPAccountRingGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.SIPAccountRingGroup.displayName = 'proto.services.pbx.v2.SIPAccountRingGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.OrgSkill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.OrgSkill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.OrgSkill.displayName = 'proto.services.pbx.v2.OrgSkill';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.OrgPermissionGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.OrgPermissionGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.OrgPermissionGroup.displayName = 'proto.services.pbx.v2.OrgPermissionGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.OrgHuntGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.OrgHuntGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.OrgHuntGroup.displayName = 'proto.services.pbx.v2.OrgHuntGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.SIPAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.SIPAccount.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.SIPAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.SIPAccount.displayName = 'proto.services.pbx.v2.SIPAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.RingGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.RingGroup.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.RingGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.RingGroup.displayName = 'proto.services.pbx.v2.RingGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListPBXUsersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.ListPBXUsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListPBXUsersRequest.displayName = 'proto.services.pbx.v2.ListPBXUsersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListPBXUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.ListPBXUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.ListPBXUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListPBXUsersResponse.displayName = 'proto.services.pbx.v2.ListPBXUsersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListSIPAccountsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.ListSIPAccountsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListSIPAccountsRequest.displayName = 'proto.services.pbx.v2.ListSIPAccountsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListSIPAccountsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.ListSIPAccountsResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.ListSIPAccountsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListSIPAccountsResponse.displayName = 'proto.services.pbx.v2.ListSIPAccountsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.displayName = 'proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.displayName = 'proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.GetSIPAccountByUserIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetSIPAccountByUserIdRequest.displayName = 'proto.services.pbx.v2.GetSIPAccountByUserIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.GetSIPAccountByUserIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetSIPAccountByUserIdResponse.displayName = 'proto.services.pbx.v2.GetSIPAccountByUserIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetSIPAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.GetSIPAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetSIPAccountRequest.displayName = 'proto.services.pbx.v2.GetSIPAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetSIPAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.GetSIPAccountResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.GetSIPAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetSIPAccountResponse.displayName = 'proto.services.pbx.v2.GetSIPAccountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetPBXUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.GetPBXUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetPBXUserRequest.displayName = 'proto.services.pbx.v2.GetPBXUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetPBXUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.GetPBXUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetPBXUserResponse.displayName = 'proto.services.pbx.v2.GetPBXUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListRingGroupsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.ListRingGroupsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListRingGroupsRequest.displayName = 'proto.services.pbx.v2.ListRingGroupsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListRingGroupsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.ListRingGroupsResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.ListRingGroupsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListRingGroupsResponse.displayName = 'proto.services.pbx.v2.ListRingGroupsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.ListRingGroupsBySipIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListRingGroupsBySipIdRequest.displayName = 'proto.services.pbx.v2.ListRingGroupsBySipIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v2.ListRingGroupsBySipIdResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v2.ListRingGroupsBySipIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.ListRingGroupsBySipIdResponse.displayName = 'proto.services.pbx.v2.ListRingGroupsBySipIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetRingGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.GetRingGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetRingGroupRequest.displayName = 'proto.services.pbx.v2.GetRingGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.GetRingGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.GetRingGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.GetRingGroupResponse.displayName = 'proto.services.pbx.v2.GetRingGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.UpdateSIPAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.UpdateSIPAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.UpdateSIPAccountRequest.displayName = 'proto.services.pbx.v2.UpdateSIPAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.UpdateSIPAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.UpdateSIPAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.UpdateSIPAccountResponse.displayName = 'proto.services.pbx.v2.UpdateSIPAccountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.UpdateRingGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.UpdateRingGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.UpdateRingGroupRequest.displayName = 'proto.services.pbx.v2.UpdateRingGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.UpdateRingGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.UpdateRingGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.UpdateRingGroupResponse.displayName = 'proto.services.pbx.v2.UpdateRingGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.AssignRandomExtensionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.AssignRandomExtensionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.AssignRandomExtensionRequest.displayName = 'proto.services.pbx.v2.AssignRandomExtensionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.AssignRandomExtensionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.AssignRandomExtensionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.AssignRandomExtensionResponse.displayName = 'proto.services.pbx.v2.AssignRandomExtensionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.CreateRingGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.CreateRingGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.CreateRingGroupRequest.displayName = 'proto.services.pbx.v2.CreateRingGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.CreateRingGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.CreateRingGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.CreateRingGroupResponse.displayName = 'proto.services.pbx.v2.CreateRingGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.DeleteRingGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.DeleteRingGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.DeleteRingGroupRequest.displayName = 'proto.services.pbx.v2.DeleteRingGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v2.DeleteRingGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v2.DeleteRingGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v2.DeleteRingGroupResponse.displayName = 'proto.services.pbx.v2.DeleteRingGroupResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.PBXUser.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.PBXUser.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.PBXUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.PBXUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.PBXUser.toObject = function(includeInstance, msg) {
  var f, obj = {
pbxUserId: jspb.Message.getFieldWithDefault(msg, 1, ""),
orgUserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
sipAccountIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.PBXUser}
 */
proto.services.pbx.v2.PBXUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.PBXUser;
  return proto.services.pbx.v2.PBXUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.PBXUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.PBXUser}
 */
proto.services.pbx.v2.PBXUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPbxUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSipAccountIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.PBXUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.PBXUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.PBXUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.PBXUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPbxUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrgUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSipAccountIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string pbx_user_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.PBXUser.prototype.getPbxUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.PBXUser} returns this
 */
proto.services.pbx.v2.PBXUser.prototype.setPbxUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string org_user_id = 2;
 * @return {string}
 */
proto.services.pbx.v2.PBXUser.prototype.getOrgUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.PBXUser} returns this
 */
proto.services.pbx.v2.PBXUser.prototype.setOrgUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string sip_account_ids = 3;
 * @return {!Array<string>}
 */
proto.services.pbx.v2.PBXUser.prototype.getSipAccountIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.pbx.v2.PBXUser} returns this
 */
proto.services.pbx.v2.PBXUser.prototype.setSipAccountIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.PBXUser} returns this
 */
proto.services.pbx.v2.PBXUser.prototype.addSipAccountIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.PBXUser} returns this
 */
proto.services.pbx.v2.PBXUser.prototype.clearSipAccountIdsList = function() {
  return this.setSipAccountIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.SIPAccountRingGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.SIPAccountRingGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.SIPAccountRingGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.SIPAccountRingGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
ringGroupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
ringGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.SIPAccountRingGroup}
 */
proto.services.pbx.v2.SIPAccountRingGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.SIPAccountRingGroup;
  return proto.services.pbx.v2.SIPAccountRingGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.SIPAccountRingGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.SIPAccountRingGroup}
 */
proto.services.pbx.v2.SIPAccountRingGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRingGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRingGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.SIPAccountRingGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.SIPAccountRingGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.SIPAccountRingGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.SIPAccountRingGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRingGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRingGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ring_group_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.SIPAccountRingGroup.prototype.getRingGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.SIPAccountRingGroup} returns this
 */
proto.services.pbx.v2.SIPAccountRingGroup.prototype.setRingGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ring_group_name = 2;
 * @return {string}
 */
proto.services.pbx.v2.SIPAccountRingGroup.prototype.getRingGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.SIPAccountRingGroup} returns this
 */
proto.services.pbx.v2.SIPAccountRingGroup.prototype.setRingGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.OrgSkill.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.OrgSkill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.OrgSkill} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.OrgSkill.toObject = function(includeInstance, msg) {
  var f, obj = {
skillSid: jspb.Message.getFieldWithDefault(msg, 1, ""),
skillName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.OrgSkill}
 */
proto.services.pbx.v2.OrgSkill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.OrgSkill;
  return proto.services.pbx.v2.OrgSkill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.OrgSkill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.OrgSkill}
 */
proto.services.pbx.v2.OrgSkill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkillSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkillName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.OrgSkill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.OrgSkill.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.OrgSkill} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.OrgSkill.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkillSid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSkillName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string skill_sid = 1;
 * @return {string}
 */
proto.services.pbx.v2.OrgSkill.prototype.getSkillSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.OrgSkill} returns this
 */
proto.services.pbx.v2.OrgSkill.prototype.setSkillSid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string skill_name = 2;
 * @return {string}
 */
proto.services.pbx.v2.OrgSkill.prototype.getSkillName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.OrgSkill} returns this
 */
proto.services.pbx.v2.OrgSkill.prototype.setSkillName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.OrgPermissionGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.OrgPermissionGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.OrgPermissionGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.OrgPermissionGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
permissionGroupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
permissionGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.OrgPermissionGroup}
 */
proto.services.pbx.v2.OrgPermissionGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.OrgPermissionGroup;
  return proto.services.pbx.v2.OrgPermissionGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.OrgPermissionGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.OrgPermissionGroup}
 */
proto.services.pbx.v2.OrgPermissionGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermissionGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPermissionGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.OrgPermissionGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.OrgPermissionGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.OrgPermissionGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.OrgPermissionGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissionGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPermissionGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string permission_group_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.OrgPermissionGroup.prototype.getPermissionGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.OrgPermissionGroup} returns this
 */
proto.services.pbx.v2.OrgPermissionGroup.prototype.setPermissionGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string permission_group_name = 2;
 * @return {string}
 */
proto.services.pbx.v2.OrgPermissionGroup.prototype.getPermissionGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.OrgPermissionGroup} returns this
 */
proto.services.pbx.v2.OrgPermissionGroup.prototype.setPermissionGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.OrgHuntGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.OrgHuntGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.OrgHuntGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.OrgHuntGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
huntGroupSid: jspb.Message.getFieldWithDefault(msg, 1, ""),
huntGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.OrgHuntGroup}
 */
proto.services.pbx.v2.OrgHuntGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.OrgHuntGroup;
  return proto.services.pbx.v2.OrgHuntGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.OrgHuntGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.OrgHuntGroup}
 */
proto.services.pbx.v2.OrgHuntGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHuntGroupSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHuntGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.OrgHuntGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.OrgHuntGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.OrgHuntGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.OrgHuntGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHuntGroupSid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHuntGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string hunt_group_sid = 1;
 * @return {string}
 */
proto.services.pbx.v2.OrgHuntGroup.prototype.getHuntGroupSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.OrgHuntGroup} returns this
 */
proto.services.pbx.v2.OrgHuntGroup.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hunt_group_name = 2;
 * @return {string}
 */
proto.services.pbx.v2.OrgHuntGroup.prototype.getHuntGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.OrgHuntGroup} returns this
 */
proto.services.pbx.v2.OrgHuntGroup.prototype.setHuntGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.SIPAccount.repeatedFields_ = [4,6,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.SIPAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.SIPAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.SIPAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.SIPAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
sipId: jspb.Message.getFieldWithDefault(msg, 1, ""),
isActive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
extension: jspb.Message.getFieldWithDefault(msg, 3, ""),
ringGroupIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
orgUserId: jspb.Message.getFieldWithDefault(msg, 5, ""),
ringGroupsList: jspb.Message.toObjectList(msg.getRingGroupsList(),
    proto.services.pbx.v2.SIPAccountRingGroup.toObject, includeInstance),
orgUsername: jspb.Message.getFieldWithDefault(msg, 7, ""),
orgFullName: jspb.Message.getFieldWithDefault(msg, 8, ""),
orgHuntGroup: (f = msg.getOrgHuntGroup()) && proto.services.pbx.v2.OrgHuntGroup.toObject(includeInstance, f),
orgSkillsList: jspb.Message.toObjectList(msg.getOrgSkillsList(),
    proto.services.pbx.v2.OrgSkill.toObject, includeInstance),
orgPermissionGroupsList: jspb.Message.toObjectList(msg.getOrgPermissionGroupsList(),
    proto.services.pbx.v2.OrgPermissionGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.SIPAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.SIPAccount;
  return proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.SIPAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSipId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtension$(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRingGroupIds(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgUserId(value);
      break;
    case 6:
      var value = new proto.services.pbx.v2.SIPAccountRingGroup;
      reader.readMessage(value,proto.services.pbx.v2.SIPAccountRingGroup.deserializeBinaryFromReader);
      msg.addRingGroups(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgUsername(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgFullName(value);
      break;
    case 9:
      var value = new proto.services.pbx.v2.OrgHuntGroup;
      reader.readMessage(value,proto.services.pbx.v2.OrgHuntGroup.deserializeBinaryFromReader);
      msg.setOrgHuntGroup(value);
      break;
    case 10:
      var value = new proto.services.pbx.v2.OrgSkill;
      reader.readMessage(value,proto.services.pbx.v2.OrgSkill.deserializeBinaryFromReader);
      msg.addOrgSkills(value);
      break;
    case 11:
      var value = new proto.services.pbx.v2.OrgPermissionGroup;
      reader.readMessage(value,proto.services.pbx.v2.OrgPermissionGroup.deserializeBinaryFromReader);
      msg.addOrgPermissionGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.SIPAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.SIPAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getExtension$();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRingGroupIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getOrgUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRingGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.services.pbx.v2.SIPAccountRingGroup.serializeBinaryToWriter
    );
  }
  f = message.getOrgUsername();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOrgFullName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOrgHuntGroup();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.services.pbx.v2.OrgHuntGroup.serializeBinaryToWriter
    );
  }
  f = message.getOrgSkillsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.services.pbx.v2.OrgSkill.serializeBinaryToWriter
    );
  }
  f = message.getOrgPermissionGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.services.pbx.v2.OrgPermissionGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sip_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.SIPAccount.prototype.getSipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.setSipId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_active = 2;
 * @return {boolean}
 */
proto.services.pbx.v2.SIPAccount.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string extension = 3;
 * @return {string}
 */
proto.services.pbx.v2.SIPAccount.prototype.getExtension$ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string ring_group_ids = 4;
 * @return {!Array<string>}
 */
proto.services.pbx.v2.SIPAccount.prototype.getRingGroupIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.setRingGroupIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.addRingGroupIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.clearRingGroupIdsList = function() {
  return this.setRingGroupIdsList([]);
};


/**
 * optional string org_user_id = 5;
 * @return {string}
 */
proto.services.pbx.v2.SIPAccount.prototype.getOrgUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.setOrgUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated SIPAccountRingGroup ring_groups = 6;
 * @return {!Array<!proto.services.pbx.v2.SIPAccountRingGroup>}
 */
proto.services.pbx.v2.SIPAccount.prototype.getRingGroupsList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.SIPAccountRingGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.SIPAccountRingGroup, 6));
};


/**
 * @param {!Array<!proto.services.pbx.v2.SIPAccountRingGroup>} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
*/
proto.services.pbx.v2.SIPAccount.prototype.setRingGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.services.pbx.v2.SIPAccountRingGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.SIPAccountRingGroup}
 */
proto.services.pbx.v2.SIPAccount.prototype.addRingGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.services.pbx.v2.SIPAccountRingGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.clearRingGroupsList = function() {
  return this.setRingGroupsList([]);
};


/**
 * optional string org_username = 7;
 * @return {string}
 */
proto.services.pbx.v2.SIPAccount.prototype.getOrgUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.setOrgUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string org_full_name = 8;
 * @return {string}
 */
proto.services.pbx.v2.SIPAccount.prototype.getOrgFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.setOrgFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional OrgHuntGroup org_hunt_group = 9;
 * @return {?proto.services.pbx.v2.OrgHuntGroup}
 */
proto.services.pbx.v2.SIPAccount.prototype.getOrgHuntGroup = function() {
  return /** @type{?proto.services.pbx.v2.OrgHuntGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.OrgHuntGroup, 9));
};


/**
 * @param {?proto.services.pbx.v2.OrgHuntGroup|undefined} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
*/
proto.services.pbx.v2.SIPAccount.prototype.setOrgHuntGroup = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.clearOrgHuntGroup = function() {
  return this.setOrgHuntGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.SIPAccount.prototype.hasOrgHuntGroup = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated OrgSkill org_skills = 10;
 * @return {!Array<!proto.services.pbx.v2.OrgSkill>}
 */
proto.services.pbx.v2.SIPAccount.prototype.getOrgSkillsList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.OrgSkill>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.OrgSkill, 10));
};


/**
 * @param {!Array<!proto.services.pbx.v2.OrgSkill>} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
*/
proto.services.pbx.v2.SIPAccount.prototype.setOrgSkillsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.services.pbx.v2.OrgSkill=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.OrgSkill}
 */
proto.services.pbx.v2.SIPAccount.prototype.addOrgSkills = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.services.pbx.v2.OrgSkill, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.clearOrgSkillsList = function() {
  return this.setOrgSkillsList([]);
};


/**
 * repeated OrgPermissionGroup org_permission_groups = 11;
 * @return {!Array<!proto.services.pbx.v2.OrgPermissionGroup>}
 */
proto.services.pbx.v2.SIPAccount.prototype.getOrgPermissionGroupsList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.OrgPermissionGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.OrgPermissionGroup, 11));
};


/**
 * @param {!Array<!proto.services.pbx.v2.OrgPermissionGroup>} value
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
*/
proto.services.pbx.v2.SIPAccount.prototype.setOrgPermissionGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.services.pbx.v2.OrgPermissionGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.OrgPermissionGroup}
 */
proto.services.pbx.v2.SIPAccount.prototype.addOrgPermissionGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.services.pbx.v2.OrgPermissionGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.SIPAccount} returns this
 */
proto.services.pbx.v2.SIPAccount.prototype.clearOrgPermissionGroupsList = function() {
  return this.setOrgPermissionGroupsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.RingGroup.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.RingGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.RingGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.RingGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.RingGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
extension: jspb.Message.getFieldWithDefault(msg, 4, ""),
ringStrategy: jspb.Message.getFieldWithDefault(msg, 5, 0),
sipAccountIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.RingGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.RingGroup;
  return proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.RingGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtension$(value);
      break;
    case 5:
      var value = /** @type {!proto.services.pbx.v2.RingStrategy} */ (reader.readEnum());
      msg.setRingStrategy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addSipAccountIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.RingGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.RingGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.RingGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.RingGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExtension$();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRingStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSipAccountIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.pbx.v2.RingGroup.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.pbx.v2.RingGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.services.pbx.v2.RingGroup.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string extension = 4;
 * @return {string}
 */
proto.services.pbx.v2.RingGroup.prototype.getExtension$ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional RingStrategy ring_strategy = 5;
 * @return {!proto.services.pbx.v2.RingStrategy}
 */
proto.services.pbx.v2.RingGroup.prototype.getRingStrategy = function() {
  return /** @type {!proto.services.pbx.v2.RingStrategy} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.services.pbx.v2.RingStrategy} value
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.setRingStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated string sip_account_ids = 6;
 * @return {!Array<string>}
 */
proto.services.pbx.v2.RingGroup.prototype.getSipAccountIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.setSipAccountIdsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.addSipAccountIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.RingGroup} returns this
 */
proto.services.pbx.v2.RingGroup.prototype.clearSipAccountIdsList = function() {
  return this.setSipAccountIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListPBXUsersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListPBXUsersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListPBXUsersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListPBXUsersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListPBXUsersRequest}
 */
proto.services.pbx.v2.ListPBXUsersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListPBXUsersRequest;
  return proto.services.pbx.v2.ListPBXUsersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListPBXUsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListPBXUsersRequest}
 */
proto.services.pbx.v2.ListPBXUsersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListPBXUsersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListPBXUsersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListPBXUsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListPBXUsersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.ListPBXUsersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListPBXUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListPBXUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListPBXUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListPBXUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.services.pbx.v2.PBXUser.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListPBXUsersResponse}
 */
proto.services.pbx.v2.ListPBXUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListPBXUsersResponse;
  return proto.services.pbx.v2.ListPBXUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListPBXUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListPBXUsersResponse}
 */
proto.services.pbx.v2.ListPBXUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.PBXUser;
      reader.readMessage(value,proto.services.pbx.v2.PBXUser.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListPBXUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListPBXUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListPBXUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListPBXUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v2.PBXUser.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PBXUser users = 1;
 * @return {!Array<!proto.services.pbx.v2.PBXUser>}
 */
proto.services.pbx.v2.ListPBXUsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.PBXUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.PBXUser, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v2.PBXUser>} value
 * @return {!proto.services.pbx.v2.ListPBXUsersResponse} returns this
*/
proto.services.pbx.v2.ListPBXUsersResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v2.PBXUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.PBXUser}
 */
proto.services.pbx.v2.ListPBXUsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v2.PBXUser, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.ListPBXUsersResponse} returns this
 */
proto.services.pbx.v2.ListPBXUsersResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListSIPAccountsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListSIPAccountsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListSIPAccountsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListSIPAccountsRequest}
 */
proto.services.pbx.v2.ListSIPAccountsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListSIPAccountsRequest;
  return proto.services.pbx.v2.ListSIPAccountsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListSIPAccountsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListSIPAccountsRequest}
 */
proto.services.pbx.v2.ListSIPAccountsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListSIPAccountsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListSIPAccountsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListSIPAccountsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.ListSIPAccountsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListSIPAccountsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListSIPAccountsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListSIPAccountsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccountsList: jspb.Message.toObjectList(msg.getSipAccountsList(),
    proto.services.pbx.v2.SIPAccount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListSIPAccountsResponse}
 */
proto.services.pbx.v2.ListSIPAccountsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListSIPAccountsResponse;
  return proto.services.pbx.v2.ListSIPAccountsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListSIPAccountsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListSIPAccountsResponse}
 */
proto.services.pbx.v2.ListSIPAccountsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.SIPAccount;
      reader.readMessage(value,proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader);
      msg.addSipAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListSIPAccountsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListSIPAccountsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListSIPAccountsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SIPAccount sip_accounts = 1;
 * @return {!Array<!proto.services.pbx.v2.SIPAccount>}
 */
proto.services.pbx.v2.ListSIPAccountsResponse.prototype.getSipAccountsList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.SIPAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.SIPAccount, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v2.SIPAccount>} value
 * @return {!proto.services.pbx.v2.ListSIPAccountsResponse} returns this
*/
proto.services.pbx.v2.ListSIPAccountsResponse.prototype.setSipAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v2.SIPAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.ListSIPAccountsResponse.prototype.addSipAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v2.SIPAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.ListSIPAccountsResponse} returns this
 */
proto.services.pbx.v2.ListSIPAccountsResponse.prototype.clearSipAccountsList = function() {
  return this.setSipAccountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
ringGroupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest;
  return proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRingGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRingGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ring_group_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.prototype.getRingGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest} returns this
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdRequest.prototype.setRingGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccountsList: jspb.Message.toObjectList(msg.getSipAccountsList(),
    proto.services.pbx.v2.SIPAccount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse;
  return proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.SIPAccount;
      reader.readMessage(value,proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader);
      msg.addSipAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SIPAccount sip_accounts = 1;
 * @return {!Array<!proto.services.pbx.v2.SIPAccount>}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.prototype.getSipAccountsList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.SIPAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.SIPAccount, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v2.SIPAccount>} value
 * @return {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse} returns this
*/
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.prototype.setSipAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v2.SIPAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.prototype.addSipAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v2.SIPAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse} returns this
 */
proto.services.pbx.v2.ListSIPAccountsByRingGroupIdResponse.prototype.clearSipAccountsList = function() {
  return this.setSipAccountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetSIPAccountByUserIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetSIPAccountByUserIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orgUserId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetSIPAccountByUserIdRequest}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetSIPAccountByUserIdRequest;
  return proto.services.pbx.v2.GetSIPAccountByUserIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetSIPAccountByUserIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetSIPAccountByUserIdRequest}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetSIPAccountByUserIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetSIPAccountByUserIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string org_user_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.prototype.getOrgUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.GetSIPAccountByUserIdRequest} returns this
 */
proto.services.pbx.v2.GetSIPAccountByUserIdRequest.prototype.setOrgUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetSIPAccountByUserIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetSIPAccountByUserIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccount: (f = msg.getSipAccount()) && proto.services.pbx.v2.SIPAccount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetSIPAccountByUserIdResponse}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetSIPAccountByUserIdResponse;
  return proto.services.pbx.v2.GetSIPAccountByUserIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetSIPAccountByUserIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetSIPAccountByUserIdResponse}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.SIPAccount;
      reader.readMessage(value,proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader);
      msg.setSipAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetSIPAccountByUserIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetSIPAccountByUserIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter
    );
  }
};


/**
 * optional SIPAccount sip_account = 1;
 * @return {?proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.prototype.getSipAccount = function() {
  return /** @type{?proto.services.pbx.v2.SIPAccount} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.SIPAccount, 1));
};


/**
 * @param {?proto.services.pbx.v2.SIPAccount|undefined} value
 * @return {!proto.services.pbx.v2.GetSIPAccountByUserIdResponse} returns this
*/
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.prototype.setSipAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.GetSIPAccountByUserIdResponse} returns this
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.prototype.clearSipAccount = function() {
  return this.setSipAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.GetSIPAccountByUserIdResponse.prototype.hasSipAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetSIPAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetSIPAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetSIPAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccountId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetSIPAccountRequest}
 */
proto.services.pbx.v2.GetSIPAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetSIPAccountRequest;
  return proto.services.pbx.v2.GetSIPAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetSIPAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetSIPAccountRequest}
 */
proto.services.pbx.v2.GetSIPAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSipAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetSIPAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetSIPAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetSIPAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sip_account_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.GetSIPAccountRequest.prototype.getSipAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.GetSIPAccountRequest} returns this
 */
proto.services.pbx.v2.GetSIPAccountRequest.prototype.setSipAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.GetSIPAccountResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetSIPAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetSIPAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetSIPAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccountList: jspb.Message.toObjectList(msg.getSipAccountList(),
    proto.services.pbx.v2.SIPAccount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetSIPAccountResponse}
 */
proto.services.pbx.v2.GetSIPAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetSIPAccountResponse;
  return proto.services.pbx.v2.GetSIPAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetSIPAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetSIPAccountResponse}
 */
proto.services.pbx.v2.GetSIPAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.SIPAccount;
      reader.readMessage(value,proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader);
      msg.addSipAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetSIPAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetSIPAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetSIPAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetSIPAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SIPAccount sip_account = 1;
 * @return {!Array<!proto.services.pbx.v2.SIPAccount>}
 */
proto.services.pbx.v2.GetSIPAccountResponse.prototype.getSipAccountList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.SIPAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.SIPAccount, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v2.SIPAccount>} value
 * @return {!proto.services.pbx.v2.GetSIPAccountResponse} returns this
*/
proto.services.pbx.v2.GetSIPAccountResponse.prototype.setSipAccountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v2.SIPAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.GetSIPAccountResponse.prototype.addSipAccount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v2.SIPAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.GetSIPAccountResponse} returns this
 */
proto.services.pbx.v2.GetSIPAccountResponse.prototype.clearSipAccountList = function() {
  return this.setSipAccountList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetPBXUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetPBXUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetPBXUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetPBXUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
pbxUserId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetPBXUserRequest}
 */
proto.services.pbx.v2.GetPBXUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetPBXUserRequest;
  return proto.services.pbx.v2.GetPBXUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetPBXUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetPBXUserRequest}
 */
proto.services.pbx.v2.GetPBXUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPbxUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetPBXUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetPBXUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetPBXUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetPBXUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPbxUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string pbx_user_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.GetPBXUserRequest.prototype.getPbxUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.GetPBXUserRequest} returns this
 */
proto.services.pbx.v2.GetPBXUserRequest.prototype.setPbxUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetPBXUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetPBXUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetPBXUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetPBXUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
user: (f = msg.getUser()) && proto.services.pbx.v2.PBXUser.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetPBXUserResponse}
 */
proto.services.pbx.v2.GetPBXUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetPBXUserResponse;
  return proto.services.pbx.v2.GetPBXUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetPBXUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetPBXUserResponse}
 */
proto.services.pbx.v2.GetPBXUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.PBXUser;
      reader.readMessage(value,proto.services.pbx.v2.PBXUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetPBXUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetPBXUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetPBXUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetPBXUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.PBXUser.serializeBinaryToWriter
    );
  }
};


/**
 * optional PBXUser user = 1;
 * @return {?proto.services.pbx.v2.PBXUser}
 */
proto.services.pbx.v2.GetPBXUserResponse.prototype.getUser = function() {
  return /** @type{?proto.services.pbx.v2.PBXUser} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.PBXUser, 1));
};


/**
 * @param {?proto.services.pbx.v2.PBXUser|undefined} value
 * @return {!proto.services.pbx.v2.GetPBXUserResponse} returns this
*/
proto.services.pbx.v2.GetPBXUserResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.GetPBXUserResponse} returns this
 */
proto.services.pbx.v2.GetPBXUserResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.GetPBXUserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListRingGroupsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListRingGroupsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListRingGroupsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListRingGroupsRequest}
 */
proto.services.pbx.v2.ListRingGroupsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListRingGroupsRequest;
  return proto.services.pbx.v2.ListRingGroupsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListRingGroupsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListRingGroupsRequest}
 */
proto.services.pbx.v2.ListRingGroupsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListRingGroupsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListRingGroupsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListRingGroupsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.ListRingGroupsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListRingGroupsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListRingGroupsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListRingGroupsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.services.pbx.v2.RingGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListRingGroupsResponse}
 */
proto.services.pbx.v2.ListRingGroupsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListRingGroupsResponse;
  return proto.services.pbx.v2.ListRingGroupsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListRingGroupsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListRingGroupsResponse}
 */
proto.services.pbx.v2.ListRingGroupsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.RingGroup;
      reader.readMessage(value,proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListRingGroupsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListRingGroupsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListRingGroupsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v2.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RingGroup groups = 1;
 * @return {!Array<!proto.services.pbx.v2.RingGroup>}
 */
proto.services.pbx.v2.ListRingGroupsResponse.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.RingGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.RingGroup, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v2.RingGroup>} value
 * @return {!proto.services.pbx.v2.ListRingGroupsResponse} returns this
*/
proto.services.pbx.v2.ListRingGroupsResponse.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v2.RingGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.ListRingGroupsResponse.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v2.RingGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.ListRingGroupsResponse} returns this
 */
proto.services.pbx.v2.ListRingGroupsResponse.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListRingGroupsBySipIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListRingGroupsBySipIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccountId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListRingGroupsBySipIdRequest}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListRingGroupsBySipIdRequest;
  return proto.services.pbx.v2.ListRingGroupsBySipIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListRingGroupsBySipIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListRingGroupsBySipIdRequest}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSipAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListRingGroupsBySipIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListRingGroupsBySipIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string sip_account_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.prototype.getSipAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.ListRingGroupsBySipIdRequest} returns this
 */
proto.services.pbx.v2.ListRingGroupsBySipIdRequest.prototype.setSipAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.ListRingGroupsBySipIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.ListRingGroupsBySipIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.services.pbx.v2.RingGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.ListRingGroupsBySipIdResponse}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.ListRingGroupsBySipIdResponse;
  return proto.services.pbx.v2.ListRingGroupsBySipIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.ListRingGroupsBySipIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.ListRingGroupsBySipIdResponse}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.RingGroup;
      reader.readMessage(value,proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.ListRingGroupsBySipIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.ListRingGroupsBySipIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v2.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RingGroup groups = 1;
 * @return {!Array<!proto.services.pbx.v2.RingGroup>}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.services.pbx.v2.RingGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v2.RingGroup, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v2.RingGroup>} value
 * @return {!proto.services.pbx.v2.ListRingGroupsBySipIdResponse} returns this
*/
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v2.RingGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v2.RingGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v2.ListRingGroupsBySipIdResponse} returns this
 */
proto.services.pbx.v2.ListRingGroupsBySipIdResponse.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetRingGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetRingGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetRingGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetRingGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
ringGroupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetRingGroupRequest}
 */
proto.services.pbx.v2.GetRingGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetRingGroupRequest;
  return proto.services.pbx.v2.GetRingGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetRingGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetRingGroupRequest}
 */
proto.services.pbx.v2.GetRingGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRingGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetRingGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetRingGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetRingGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetRingGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRingGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ring_group_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.GetRingGroupRequest.prototype.getRingGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.GetRingGroupRequest} returns this
 */
proto.services.pbx.v2.GetRingGroupRequest.prototype.setRingGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.GetRingGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.GetRingGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.GetRingGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetRingGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
group: (f = msg.getGroup()) && proto.services.pbx.v2.RingGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.GetRingGroupResponse}
 */
proto.services.pbx.v2.GetRingGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.GetRingGroupResponse;
  return proto.services.pbx.v2.GetRingGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.GetRingGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.GetRingGroupResponse}
 */
proto.services.pbx.v2.GetRingGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.RingGroup;
      reader.readMessage(value,proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.GetRingGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.GetRingGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.GetRingGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.GetRingGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.GetRingGroupResponse.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v2.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v2.RingGroup|undefined} value
 * @return {!proto.services.pbx.v2.GetRingGroupResponse} returns this
*/
proto.services.pbx.v2.GetRingGroupResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.GetRingGroupResponse} returns this
 */
proto.services.pbx.v2.GetRingGroupResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.GetRingGroupResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.UpdateSIPAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.UpdateSIPAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccount: (f = msg.getSipAccount()) && proto.services.pbx.v2.SIPAccount.toObject(includeInstance, f),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.UpdateSIPAccountRequest}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.UpdateSIPAccountRequest;
  return proto.services.pbx.v2.UpdateSIPAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.UpdateSIPAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.UpdateSIPAccountRequest}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.SIPAccount;
      reader.readMessage(value,proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader);
      msg.setSipAccount(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.UpdateSIPAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.UpdateSIPAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional SIPAccount sip_account = 1;
 * @return {?proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.getSipAccount = function() {
  return /** @type{?proto.services.pbx.v2.SIPAccount} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.SIPAccount, 1));
};


/**
 * @param {?proto.services.pbx.v2.SIPAccount|undefined} value
 * @return {!proto.services.pbx.v2.UpdateSIPAccountRequest} returns this
*/
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.setSipAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.UpdateSIPAccountRequest} returns this
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.clearSipAccount = function() {
  return this.setSipAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.hasSipAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.pbx.v2.UpdateSIPAccountRequest} returns this
*/
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.UpdateSIPAccountRequest} returns this
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.UpdateSIPAccountRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.UpdateSIPAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.UpdateSIPAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sipAccount: (f = msg.getSipAccount()) && proto.services.pbx.v2.SIPAccount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.UpdateSIPAccountResponse}
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.UpdateSIPAccountResponse;
  return proto.services.pbx.v2.UpdateSIPAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.UpdateSIPAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.UpdateSIPAccountResponse}
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.SIPAccount;
      reader.readMessage(value,proto.services.pbx.v2.SIPAccount.deserializeBinaryFromReader);
      msg.setSipAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.UpdateSIPAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.UpdateSIPAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.SIPAccount.serializeBinaryToWriter
    );
  }
};


/**
 * optional SIPAccount sip_account = 1;
 * @return {?proto.services.pbx.v2.SIPAccount}
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.prototype.getSipAccount = function() {
  return /** @type{?proto.services.pbx.v2.SIPAccount} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.SIPAccount, 1));
};


/**
 * @param {?proto.services.pbx.v2.SIPAccount|undefined} value
 * @return {!proto.services.pbx.v2.UpdateSIPAccountResponse} returns this
*/
proto.services.pbx.v2.UpdateSIPAccountResponse.prototype.setSipAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.UpdateSIPAccountResponse} returns this
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.prototype.clearSipAccount = function() {
  return this.setSipAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.UpdateSIPAccountResponse.prototype.hasSipAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.UpdateRingGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.UpdateRingGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateRingGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
group: (f = msg.getGroup()) && proto.services.pbx.v2.RingGroup.toObject(includeInstance, f),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.UpdateRingGroupRequest}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.UpdateRingGroupRequest;
  return proto.services.pbx.v2.UpdateRingGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.UpdateRingGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.UpdateRingGroupRequest}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.RingGroup;
      reader.readMessage(value,proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.UpdateRingGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.UpdateRingGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateRingGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.RingGroup.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v2.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v2.RingGroup|undefined} value
 * @return {!proto.services.pbx.v2.UpdateRingGroupRequest} returns this
*/
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.UpdateRingGroupRequest} returns this
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.pbx.v2.UpdateRingGroupRequest} returns this
*/
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.UpdateRingGroupRequest} returns this
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.UpdateRingGroupRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.UpdateRingGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.UpdateRingGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.UpdateRingGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateRingGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
group: (f = msg.getGroup()) && proto.services.pbx.v2.RingGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.UpdateRingGroupResponse}
 */
proto.services.pbx.v2.UpdateRingGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.UpdateRingGroupResponse;
  return proto.services.pbx.v2.UpdateRingGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.UpdateRingGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.UpdateRingGroupResponse}
 */
proto.services.pbx.v2.UpdateRingGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.RingGroup;
      reader.readMessage(value,proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.UpdateRingGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.UpdateRingGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.UpdateRingGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.UpdateRingGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.UpdateRingGroupResponse.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v2.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v2.RingGroup|undefined} value
 * @return {!proto.services.pbx.v2.UpdateRingGroupResponse} returns this
*/
proto.services.pbx.v2.UpdateRingGroupResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.UpdateRingGroupResponse} returns this
 */
proto.services.pbx.v2.UpdateRingGroupResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.UpdateRingGroupResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.AssignRandomExtensionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.AssignRandomExtensionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.AssignRandomExtensionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.AssignRandomExtensionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.AssignRandomExtensionRequest}
 */
proto.services.pbx.v2.AssignRandomExtensionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.AssignRandomExtensionRequest;
  return proto.services.pbx.v2.AssignRandomExtensionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.AssignRandomExtensionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.AssignRandomExtensionRequest}
 */
proto.services.pbx.v2.AssignRandomExtensionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.AssignRandomExtensionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.AssignRandomExtensionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.AssignRandomExtensionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.AssignRandomExtensionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.AssignRandomExtensionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.AssignRandomExtensionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
extension: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.AssignRandomExtensionResponse}
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.AssignRandomExtensionResponse;
  return proto.services.pbx.v2.AssignRandomExtensionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.AssignRandomExtensionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.AssignRandomExtensionResponse}
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.AssignRandomExtensionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.AssignRandomExtensionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtension$();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string extension = 1;
 * @return {string}
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.prototype.getExtension$ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.AssignRandomExtensionResponse} returns this
 */
proto.services.pbx.v2.AssignRandomExtensionResponse.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.CreateRingGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.CreateRingGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.CreateRingGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.CreateRingGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
group: (f = msg.getGroup()) && proto.services.pbx.v2.RingGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.CreateRingGroupRequest}
 */
proto.services.pbx.v2.CreateRingGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.CreateRingGroupRequest;
  return proto.services.pbx.v2.CreateRingGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.CreateRingGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.CreateRingGroupRequest}
 */
proto.services.pbx.v2.CreateRingGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.RingGroup;
      reader.readMessage(value,proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.CreateRingGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.CreateRingGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.CreateRingGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.CreateRingGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.CreateRingGroupRequest.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v2.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v2.RingGroup|undefined} value
 * @return {!proto.services.pbx.v2.CreateRingGroupRequest} returns this
*/
proto.services.pbx.v2.CreateRingGroupRequest.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.CreateRingGroupRequest} returns this
 */
proto.services.pbx.v2.CreateRingGroupRequest.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.CreateRingGroupRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.CreateRingGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.CreateRingGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.CreateRingGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.CreateRingGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
group: (f = msg.getGroup()) && proto.services.pbx.v2.RingGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.CreateRingGroupResponse}
 */
proto.services.pbx.v2.CreateRingGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.CreateRingGroupResponse;
  return proto.services.pbx.v2.CreateRingGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.CreateRingGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.CreateRingGroupResponse}
 */
proto.services.pbx.v2.CreateRingGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v2.RingGroup;
      reader.readMessage(value,proto.services.pbx.v2.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.CreateRingGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.CreateRingGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.CreateRingGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.CreateRingGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v2.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v2.RingGroup}
 */
proto.services.pbx.v2.CreateRingGroupResponse.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v2.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v2.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v2.RingGroup|undefined} value
 * @return {!proto.services.pbx.v2.CreateRingGroupResponse} returns this
*/
proto.services.pbx.v2.CreateRingGroupResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v2.CreateRingGroupResponse} returns this
 */
proto.services.pbx.v2.CreateRingGroupResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v2.CreateRingGroupResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.DeleteRingGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.DeleteRingGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.DeleteRingGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.DeleteRingGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
groupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.DeleteRingGroupRequest}
 */
proto.services.pbx.v2.DeleteRingGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.DeleteRingGroupRequest;
  return proto.services.pbx.v2.DeleteRingGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.DeleteRingGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.DeleteRingGroupRequest}
 */
proto.services.pbx.v2.DeleteRingGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.DeleteRingGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.DeleteRingGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.DeleteRingGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.DeleteRingGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.services.pbx.v2.DeleteRingGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v2.DeleteRingGroupRequest} returns this
 */
proto.services.pbx.v2.DeleteRingGroupRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v2.DeleteRingGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v2.DeleteRingGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v2.DeleteRingGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.DeleteRingGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v2.DeleteRingGroupResponse}
 */
proto.services.pbx.v2.DeleteRingGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v2.DeleteRingGroupResponse;
  return proto.services.pbx.v2.DeleteRingGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v2.DeleteRingGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v2.DeleteRingGroupResponse}
 */
proto.services.pbx.v2.DeleteRingGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v2.DeleteRingGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v2.DeleteRingGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v2.DeleteRingGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v2.DeleteRingGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.services.pbx.v2.RingStrategy = {
  RING_STRATEGY_UNSPECIFIED: 0,
  RING_STRATEGY_RING_ALL: 1,
  RING_STRATEGY_ROUND_ROBIN: 2,
  RING_STRATEGY_RANDOM: 3,
  RING_STRATEGY_ORDERED: 4
};

goog.object.extend(exports, proto.services.pbx.v2);
