// source: services/pbx/v1/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var annotations_authz_pb = require('../../../annotations/authz_pb.js');
goog.object.extend(proto, annotations_authz_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
goog.exportSymbol('proto.services.pbx.v1.AssignRandomExtensionRequest', null, global);
goog.exportSymbol('proto.services.pbx.v1.AssignRandomExtensionResponse', null, global);
goog.exportSymbol('proto.services.pbx.v1.CreateRingGroupRequest', null, global);
goog.exportSymbol('proto.services.pbx.v1.CreateRingGroupResponse', null, global);
goog.exportSymbol('proto.services.pbx.v1.DeleteRingGroupRequest', null, global);
goog.exportSymbol('proto.services.pbx.v1.DeleteRingGroupResponse', null, global);
goog.exportSymbol('proto.services.pbx.v1.PBXUser', null, global);
goog.exportSymbol('proto.services.pbx.v1.QueryPbxUsersRequest', null, global);
goog.exportSymbol('proto.services.pbx.v1.QueryPbxUsersResponse', null, global);
goog.exportSymbol('proto.services.pbx.v1.QueryRingGroupsRequest', null, global);
goog.exportSymbol('proto.services.pbx.v1.QueryRingGroupsResponse', null, global);
goog.exportSymbol('proto.services.pbx.v1.RingGroup', null, global);
goog.exportSymbol('proto.services.pbx.v1.RingStrategy', null, global);
goog.exportSymbol('proto.services.pbx.v1.SIPAccount', null, global);
goog.exportSymbol('proto.services.pbx.v1.UpdatePbxUserRequest', null, global);
goog.exportSymbol('proto.services.pbx.v1.UpdatePbxUserResponse', null, global);
goog.exportSymbol('proto.services.pbx.v1.UpdateRingGroupRequest', null, global);
goog.exportSymbol('proto.services.pbx.v1.UpdateRingGroupResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.PBXUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v1.PBXUser.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v1.PBXUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.PBXUser.displayName = 'proto.services.pbx.v1.PBXUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.SIPAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v1.SIPAccount.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v1.SIPAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.SIPAccount.displayName = 'proto.services.pbx.v1.SIPAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.RingGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v1.RingGroup.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v1.RingGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.RingGroup.displayName = 'proto.services.pbx.v1.RingGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.QueryPbxUsersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.QueryPbxUsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.QueryPbxUsersRequest.displayName = 'proto.services.pbx.v1.QueryPbxUsersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.QueryPbxUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v1.QueryPbxUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v1.QueryPbxUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.QueryPbxUsersResponse.displayName = 'proto.services.pbx.v1.QueryPbxUsersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.QueryRingGroupsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.QueryRingGroupsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.QueryRingGroupsRequest.displayName = 'proto.services.pbx.v1.QueryRingGroupsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.QueryRingGroupsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v1.QueryRingGroupsResponse.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v1.QueryRingGroupsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.QueryRingGroupsResponse.displayName = 'proto.services.pbx.v1.QueryRingGroupsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.UpdatePbxUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.UpdatePbxUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.UpdatePbxUserRequest.displayName = 'proto.services.pbx.v1.UpdatePbxUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.UpdatePbxUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.UpdatePbxUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.UpdatePbxUserResponse.displayName = 'proto.services.pbx.v1.UpdatePbxUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.UpdateRingGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.UpdateRingGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.UpdateRingGroupRequest.displayName = 'proto.services.pbx.v1.UpdateRingGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.UpdateRingGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.UpdateRingGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.UpdateRingGroupResponse.displayName = 'proto.services.pbx.v1.UpdateRingGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.AssignRandomExtensionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.AssignRandomExtensionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.AssignRandomExtensionRequest.displayName = 'proto.services.pbx.v1.AssignRandomExtensionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.AssignRandomExtensionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.AssignRandomExtensionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.AssignRandomExtensionResponse.displayName = 'proto.services.pbx.v1.AssignRandomExtensionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.CreateRingGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.pbx.v1.CreateRingGroupRequest.repeatedFields_, null);
};
goog.inherits(proto.services.pbx.v1.CreateRingGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.CreateRingGroupRequest.displayName = 'proto.services.pbx.v1.CreateRingGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.CreateRingGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.CreateRingGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.CreateRingGroupResponse.displayName = 'proto.services.pbx.v1.CreateRingGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.DeleteRingGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.DeleteRingGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.DeleteRingGroupRequest.displayName = 'proto.services.pbx.v1.DeleteRingGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.pbx.v1.DeleteRingGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.pbx.v1.DeleteRingGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.pbx.v1.DeleteRingGroupResponse.displayName = 'proto.services.pbx.v1.DeleteRingGroupResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v1.PBXUser.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.PBXUser.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.PBXUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.PBXUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.PBXUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    pbxUserId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orgUserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sipAccountsList: jspb.Message.toObjectList(msg.getSipAccountsList(),
    proto.services.pbx.v1.SIPAccount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.PBXUser}
 */
proto.services.pbx.v1.PBXUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.PBXUser;
  return proto.services.pbx.v1.PBXUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.PBXUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.PBXUser}
 */
proto.services.pbx.v1.PBXUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPbxUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgUserId(value);
      break;
    case 3:
      var value = new proto.services.pbx.v1.SIPAccount;
      reader.readMessage(value,proto.services.pbx.v1.SIPAccount.deserializeBinaryFromReader);
      msg.addSipAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.PBXUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.PBXUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.PBXUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.PBXUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPbxUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrgUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSipAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.services.pbx.v1.SIPAccount.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pbx_user_id = 1;
 * @return {string}
 */
proto.services.pbx.v1.PBXUser.prototype.getPbxUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.PBXUser} returns this
 */
proto.services.pbx.v1.PBXUser.prototype.setPbxUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string org_user_id = 2;
 * @return {string}
 */
proto.services.pbx.v1.PBXUser.prototype.getOrgUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.PBXUser} returns this
 */
proto.services.pbx.v1.PBXUser.prototype.setOrgUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SIPAccount sip_accounts = 3;
 * @return {!Array<!proto.services.pbx.v1.SIPAccount>}
 */
proto.services.pbx.v1.PBXUser.prototype.getSipAccountsList = function() {
  return /** @type{!Array<!proto.services.pbx.v1.SIPAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v1.SIPAccount, 3));
};


/**
 * @param {!Array<!proto.services.pbx.v1.SIPAccount>} value
 * @return {!proto.services.pbx.v1.PBXUser} returns this
*/
proto.services.pbx.v1.PBXUser.prototype.setSipAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.services.pbx.v1.SIPAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v1.SIPAccount}
 */
proto.services.pbx.v1.PBXUser.prototype.addSipAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.services.pbx.v1.SIPAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v1.PBXUser} returns this
 */
proto.services.pbx.v1.PBXUser.prototype.clearSipAccountsList = function() {
  return this.setSipAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v1.SIPAccount.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.SIPAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.SIPAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.SIPAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.SIPAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    sipId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    extension: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ringGroupsList: jspb.Message.toObjectList(msg.getRingGroupsList(),
    proto.services.pbx.v1.RingGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.SIPAccount}
 */
proto.services.pbx.v1.SIPAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.SIPAccount;
  return proto.services.pbx.v1.SIPAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.SIPAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.SIPAccount}
 */
proto.services.pbx.v1.SIPAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSipId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExtension$(value);
      break;
    case 4:
      var value = new proto.services.pbx.v1.RingGroup;
      reader.readMessage(value,proto.services.pbx.v1.RingGroup.deserializeBinaryFromReader);
      msg.addRingGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.SIPAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.SIPAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.SIPAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.SIPAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSipId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getExtension$();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRingGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.services.pbx.v1.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sip_id = 1;
 * @return {string}
 */
proto.services.pbx.v1.SIPAccount.prototype.getSipId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.SIPAccount} returns this
 */
proto.services.pbx.v1.SIPAccount.prototype.setSipId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_active = 2;
 * @return {boolean}
 */
proto.services.pbx.v1.SIPAccount.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.pbx.v1.SIPAccount} returns this
 */
proto.services.pbx.v1.SIPAccount.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 extension = 3;
 * @return {number}
 */
proto.services.pbx.v1.SIPAccount.prototype.getExtension$ = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.pbx.v1.SIPAccount} returns this
 */
proto.services.pbx.v1.SIPAccount.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated RingGroup ring_groups = 4;
 * @return {!Array<!proto.services.pbx.v1.RingGroup>}
 */
proto.services.pbx.v1.SIPAccount.prototype.getRingGroupsList = function() {
  return /** @type{!Array<!proto.services.pbx.v1.RingGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v1.RingGroup, 4));
};


/**
 * @param {!Array<!proto.services.pbx.v1.RingGroup>} value
 * @return {!proto.services.pbx.v1.SIPAccount} returns this
*/
proto.services.pbx.v1.SIPAccount.prototype.setRingGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.services.pbx.v1.RingGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v1.RingGroup}
 */
proto.services.pbx.v1.SIPAccount.prototype.addRingGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.services.pbx.v1.RingGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v1.SIPAccount} returns this
 */
proto.services.pbx.v1.SIPAccount.prototype.clearRingGroupsList = function() {
  return this.setRingGroupsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v1.RingGroup.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.RingGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.RingGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.RingGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.RingGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    extension: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ringStrategy: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pbxUsersList: jspb.Message.toObjectList(msg.getPbxUsersList(),
    proto.services.pbx.v1.PBXUser.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.RingGroup}
 */
proto.services.pbx.v1.RingGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.RingGroup;
  return proto.services.pbx.v1.RingGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.RingGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.RingGroup}
 */
proto.services.pbx.v1.RingGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExtension$(value);
      break;
    case 5:
      var value = /** @type {!proto.services.pbx.v1.RingStrategy} */ (reader.readEnum());
      msg.setRingStrategy(value);
      break;
    case 6:
      var value = new proto.services.pbx.v1.PBXUser;
      reader.readMessage(value,proto.services.pbx.v1.PBXUser.deserializeBinaryFromReader);
      msg.addPbxUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.RingGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.RingGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.RingGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.RingGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExtension$();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRingStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPbxUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.services.pbx.v1.PBXUser.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.pbx.v1.RingGroup.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.RingGroup} returns this
 */
proto.services.pbx.v1.RingGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.services.pbx.v1.RingGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.RingGroup} returns this
 */
proto.services.pbx.v1.RingGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.services.pbx.v1.RingGroup.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.RingGroup} returns this
 */
proto.services.pbx.v1.RingGroup.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 extension = 4;
 * @return {number}
 */
proto.services.pbx.v1.RingGroup.prototype.getExtension$ = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.pbx.v1.RingGroup} returns this
 */
proto.services.pbx.v1.RingGroup.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional RingStrategy ring_strategy = 5;
 * @return {!proto.services.pbx.v1.RingStrategy}
 */
proto.services.pbx.v1.RingGroup.prototype.getRingStrategy = function() {
  return /** @type {!proto.services.pbx.v1.RingStrategy} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.services.pbx.v1.RingStrategy} value
 * @return {!proto.services.pbx.v1.RingGroup} returns this
 */
proto.services.pbx.v1.RingGroup.prototype.setRingStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated PBXUser pbx_users = 6;
 * @return {!Array<!proto.services.pbx.v1.PBXUser>}
 */
proto.services.pbx.v1.RingGroup.prototype.getPbxUsersList = function() {
  return /** @type{!Array<!proto.services.pbx.v1.PBXUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v1.PBXUser, 6));
};


/**
 * @param {!Array<!proto.services.pbx.v1.PBXUser>} value
 * @return {!proto.services.pbx.v1.RingGroup} returns this
*/
proto.services.pbx.v1.RingGroup.prototype.setPbxUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.services.pbx.v1.PBXUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v1.PBXUser}
 */
proto.services.pbx.v1.RingGroup.prototype.addPbxUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.services.pbx.v1.PBXUser, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v1.RingGroup} returns this
 */
proto.services.pbx.v1.RingGroup.prototype.clearPbxUsersList = function() {
  return this.setPbxUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.QueryPbxUsersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.QueryPbxUsersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryPbxUsersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pbxUserId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responseMask: (f = msg.getResponseMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.QueryPbxUsersRequest}
 */
proto.services.pbx.v1.QueryPbxUsersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.QueryPbxUsersRequest;
  return proto.services.pbx.v1.QueryPbxUsersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.QueryPbxUsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.QueryPbxUsersRequest}
 */
proto.services.pbx.v1.QueryPbxUsersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPbxUserId(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setResponseMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.QueryPbxUsersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.QueryPbxUsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryPbxUsersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPbxUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponseMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pbx_user_id = 1;
 * @return {string}
 */
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.getPbxUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.QueryPbxUsersRequest} returns this
 */
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.setPbxUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask response_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.getResponseMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.pbx.v1.QueryPbxUsersRequest} returns this
*/
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.setResponseMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.QueryPbxUsersRequest} returns this
 */
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.clearResponseMask = function() {
  return this.setResponseMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.QueryPbxUsersRequest.prototype.hasResponseMask = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v1.QueryPbxUsersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.QueryPbxUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.QueryPbxUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.QueryPbxUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryPbxUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.services.pbx.v1.PBXUser.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.QueryPbxUsersResponse}
 */
proto.services.pbx.v1.QueryPbxUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.QueryPbxUsersResponse;
  return proto.services.pbx.v1.QueryPbxUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.QueryPbxUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.QueryPbxUsersResponse}
 */
proto.services.pbx.v1.QueryPbxUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v1.PBXUser;
      reader.readMessage(value,proto.services.pbx.v1.PBXUser.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.QueryPbxUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.QueryPbxUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.QueryPbxUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryPbxUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v1.PBXUser.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PBXUser users = 1;
 * @return {!Array<!proto.services.pbx.v1.PBXUser>}
 */
proto.services.pbx.v1.QueryPbxUsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.services.pbx.v1.PBXUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v1.PBXUser, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v1.PBXUser>} value
 * @return {!proto.services.pbx.v1.QueryPbxUsersResponse} returns this
*/
proto.services.pbx.v1.QueryPbxUsersResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v1.PBXUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v1.PBXUser}
 */
proto.services.pbx.v1.QueryPbxUsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v1.PBXUser, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v1.QueryPbxUsersResponse} returns this
 */
proto.services.pbx.v1.QueryPbxUsersResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.QueryRingGroupsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.QueryRingGroupsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryRingGroupsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    responseMask: (f = msg.getResponseMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.QueryRingGroupsRequest}
 */
proto.services.pbx.v1.QueryRingGroupsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.QueryRingGroupsRequest;
  return proto.services.pbx.v1.QueryRingGroupsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.QueryRingGroupsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.QueryRingGroupsRequest}
 */
proto.services.pbx.v1.QueryRingGroupsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setResponseMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.QueryRingGroupsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.QueryRingGroupsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryRingGroupsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponseMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.QueryRingGroupsRequest} returns this
 */
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask response_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.getResponseMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.pbx.v1.QueryRingGroupsRequest} returns this
*/
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.setResponseMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.QueryRingGroupsRequest} returns this
 */
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.clearResponseMask = function() {
  return this.setResponseMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.QueryRingGroupsRequest.prototype.hasResponseMask = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v1.QueryRingGroupsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.QueryRingGroupsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.QueryRingGroupsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.QueryRingGroupsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryRingGroupsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.services.pbx.v1.RingGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.QueryRingGroupsResponse}
 */
proto.services.pbx.v1.QueryRingGroupsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.QueryRingGroupsResponse;
  return proto.services.pbx.v1.QueryRingGroupsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.QueryRingGroupsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.QueryRingGroupsResponse}
 */
proto.services.pbx.v1.QueryRingGroupsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v1.RingGroup;
      reader.readMessage(value,proto.services.pbx.v1.RingGroup.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.QueryRingGroupsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.QueryRingGroupsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.QueryRingGroupsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.QueryRingGroupsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.pbx.v1.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RingGroup groups = 1;
 * @return {!Array<!proto.services.pbx.v1.RingGroup>}
 */
proto.services.pbx.v1.QueryRingGroupsResponse.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.services.pbx.v1.RingGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.pbx.v1.RingGroup, 1));
};


/**
 * @param {!Array<!proto.services.pbx.v1.RingGroup>} value
 * @return {!proto.services.pbx.v1.QueryRingGroupsResponse} returns this
*/
proto.services.pbx.v1.QueryRingGroupsResponse.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.pbx.v1.RingGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v1.RingGroup}
 */
proto.services.pbx.v1.QueryRingGroupsResponse.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.pbx.v1.RingGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v1.QueryRingGroupsResponse} returns this
 */
proto.services.pbx.v1.QueryRingGroupsResponse.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.UpdatePbxUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.UpdatePbxUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdatePbxUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.services.pbx.v1.PBXUser.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.UpdatePbxUserRequest}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.UpdatePbxUserRequest;
  return proto.services.pbx.v1.UpdatePbxUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.UpdatePbxUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.UpdatePbxUserRequest}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v1.PBXUser;
      reader.readMessage(value,proto.services.pbx.v1.PBXUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.UpdatePbxUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.UpdatePbxUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdatePbxUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v1.PBXUser.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional PBXUser user = 1;
 * @return {?proto.services.pbx.v1.PBXUser}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.getUser = function() {
  return /** @type{?proto.services.pbx.v1.PBXUser} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v1.PBXUser, 1));
};


/**
 * @param {?proto.services.pbx.v1.PBXUser|undefined} value
 * @return {!proto.services.pbx.v1.UpdatePbxUserRequest} returns this
*/
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.UpdatePbxUserRequest} returns this
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.pbx.v1.UpdatePbxUserRequest} returns this
*/
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.UpdatePbxUserRequest} returns this
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.UpdatePbxUserRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.UpdatePbxUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.UpdatePbxUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.UpdatePbxUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdatePbxUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.services.pbx.v1.PBXUser.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.UpdatePbxUserResponse}
 */
proto.services.pbx.v1.UpdatePbxUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.UpdatePbxUserResponse;
  return proto.services.pbx.v1.UpdatePbxUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.UpdatePbxUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.UpdatePbxUserResponse}
 */
proto.services.pbx.v1.UpdatePbxUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v1.PBXUser;
      reader.readMessage(value,proto.services.pbx.v1.PBXUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.UpdatePbxUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.UpdatePbxUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.UpdatePbxUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdatePbxUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v1.PBXUser.serializeBinaryToWriter
    );
  }
};


/**
 * optional PBXUser user = 1;
 * @return {?proto.services.pbx.v1.PBXUser}
 */
proto.services.pbx.v1.UpdatePbxUserResponse.prototype.getUser = function() {
  return /** @type{?proto.services.pbx.v1.PBXUser} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v1.PBXUser, 1));
};


/**
 * @param {?proto.services.pbx.v1.PBXUser|undefined} value
 * @return {!proto.services.pbx.v1.UpdatePbxUserResponse} returns this
*/
proto.services.pbx.v1.UpdatePbxUserResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.UpdatePbxUserResponse} returns this
 */
proto.services.pbx.v1.UpdatePbxUserResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.UpdatePbxUserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.UpdateRingGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.UpdateRingGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdateRingGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && proto.services.pbx.v1.RingGroup.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.UpdateRingGroupRequest}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.UpdateRingGroupRequest;
  return proto.services.pbx.v1.UpdateRingGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.UpdateRingGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.UpdateRingGroupRequest}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v1.RingGroup;
      reader.readMessage(value,proto.services.pbx.v1.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.UpdateRingGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.UpdateRingGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdateRingGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v1.RingGroup.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v1.RingGroup}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v1.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v1.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v1.RingGroup|undefined} value
 * @return {!proto.services.pbx.v1.UpdateRingGroupRequest} returns this
*/
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.UpdateRingGroupRequest} returns this
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.pbx.v1.UpdateRingGroupRequest} returns this
*/
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.UpdateRingGroupRequest} returns this
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.UpdateRingGroupRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.UpdateRingGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.UpdateRingGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.UpdateRingGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdateRingGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && proto.services.pbx.v1.RingGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.UpdateRingGroupResponse}
 */
proto.services.pbx.v1.UpdateRingGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.UpdateRingGroupResponse;
  return proto.services.pbx.v1.UpdateRingGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.UpdateRingGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.UpdateRingGroupResponse}
 */
proto.services.pbx.v1.UpdateRingGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v1.RingGroup;
      reader.readMessage(value,proto.services.pbx.v1.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.UpdateRingGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.UpdateRingGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.UpdateRingGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.UpdateRingGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v1.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v1.RingGroup}
 */
proto.services.pbx.v1.UpdateRingGroupResponse.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v1.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v1.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v1.RingGroup|undefined} value
 * @return {!proto.services.pbx.v1.UpdateRingGroupResponse} returns this
*/
proto.services.pbx.v1.UpdateRingGroupResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.UpdateRingGroupResponse} returns this
 */
proto.services.pbx.v1.UpdateRingGroupResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.UpdateRingGroupResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.AssignRandomExtensionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.AssignRandomExtensionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.AssignRandomExtensionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.AssignRandomExtensionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.AssignRandomExtensionRequest}
 */
proto.services.pbx.v1.AssignRandomExtensionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.AssignRandomExtensionRequest;
  return proto.services.pbx.v1.AssignRandomExtensionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.AssignRandomExtensionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.AssignRandomExtensionRequest}
 */
proto.services.pbx.v1.AssignRandomExtensionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.AssignRandomExtensionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.AssignRandomExtensionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.AssignRandomExtensionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.AssignRandomExtensionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.AssignRandomExtensionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.AssignRandomExtensionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    extension: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.AssignRandomExtensionResponse}
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.AssignRandomExtensionResponse;
  return proto.services.pbx.v1.AssignRandomExtensionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.AssignRandomExtensionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.AssignRandomExtensionResponse}
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExtension$(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.AssignRandomExtensionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.AssignRandomExtensionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtension$();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 extension = 1;
 * @return {number}
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.prototype.getExtension$ = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.pbx.v1.AssignRandomExtensionResponse} returns this
 */
proto.services.pbx.v1.AssignRandomExtensionResponse.prototype.setExtension$ = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.pbx.v1.CreateRingGroupRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.CreateRingGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.CreateRingGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.CreateRingGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ringStrategy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pbxUserIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest}
 */
proto.services.pbx.v1.CreateRingGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.CreateRingGroupRequest;
  return proto.services.pbx.v1.CreateRingGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.CreateRingGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest}
 */
proto.services.pbx.v1.CreateRingGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.services.pbx.v1.RingStrategy} */ (reader.readEnum());
      msg.setRingStrategy(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPbxUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.CreateRingGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.CreateRingGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.CreateRingGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRingStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPbxUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest} returns this
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest} returns this
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RingStrategy ring_strategy = 3;
 * @return {!proto.services.pbx.v1.RingStrategy}
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.getRingStrategy = function() {
  return /** @type {!proto.services.pbx.v1.RingStrategy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.services.pbx.v1.RingStrategy} value
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest} returns this
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.setRingStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated string pbx_user_ids = 4;
 * @return {!Array<string>}
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.getPbxUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest} returns this
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.setPbxUserIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest} returns this
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.addPbxUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.pbx.v1.CreateRingGroupRequest} returns this
 */
proto.services.pbx.v1.CreateRingGroupRequest.prototype.clearPbxUserIdsList = function() {
  return this.setPbxUserIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.CreateRingGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.CreateRingGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.CreateRingGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.CreateRingGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && proto.services.pbx.v1.RingGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.CreateRingGroupResponse}
 */
proto.services.pbx.v1.CreateRingGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.CreateRingGroupResponse;
  return proto.services.pbx.v1.CreateRingGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.CreateRingGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.CreateRingGroupResponse}
 */
proto.services.pbx.v1.CreateRingGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.pbx.v1.RingGroup;
      reader.readMessage(value,proto.services.pbx.v1.RingGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.CreateRingGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.CreateRingGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.CreateRingGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.CreateRingGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.pbx.v1.RingGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional RingGroup group = 1;
 * @return {?proto.services.pbx.v1.RingGroup}
 */
proto.services.pbx.v1.CreateRingGroupResponse.prototype.getGroup = function() {
  return /** @type{?proto.services.pbx.v1.RingGroup} */ (
    jspb.Message.getWrapperField(this, proto.services.pbx.v1.RingGroup, 1));
};


/**
 * @param {?proto.services.pbx.v1.RingGroup|undefined} value
 * @return {!proto.services.pbx.v1.CreateRingGroupResponse} returns this
*/
proto.services.pbx.v1.CreateRingGroupResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.pbx.v1.CreateRingGroupResponse} returns this
 */
proto.services.pbx.v1.CreateRingGroupResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.pbx.v1.CreateRingGroupResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.DeleteRingGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.DeleteRingGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.DeleteRingGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.DeleteRingGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.DeleteRingGroupRequest}
 */
proto.services.pbx.v1.DeleteRingGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.DeleteRingGroupRequest;
  return proto.services.pbx.v1.DeleteRingGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.DeleteRingGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.DeleteRingGroupRequest}
 */
proto.services.pbx.v1.DeleteRingGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.DeleteRingGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.DeleteRingGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.DeleteRingGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.DeleteRingGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.services.pbx.v1.DeleteRingGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.pbx.v1.DeleteRingGroupRequest} returns this
 */
proto.services.pbx.v1.DeleteRingGroupRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.pbx.v1.DeleteRingGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.pbx.v1.DeleteRingGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.pbx.v1.DeleteRingGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.DeleteRingGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.pbx.v1.DeleteRingGroupResponse}
 */
proto.services.pbx.v1.DeleteRingGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.pbx.v1.DeleteRingGroupResponse;
  return proto.services.pbx.v1.DeleteRingGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.pbx.v1.DeleteRingGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.pbx.v1.DeleteRingGroupResponse}
 */
proto.services.pbx.v1.DeleteRingGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.pbx.v1.DeleteRingGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.pbx.v1.DeleteRingGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.pbx.v1.DeleteRingGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.pbx.v1.DeleteRingGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.services.pbx.v1.RingStrategy = {
  RING_STRATEGY_UNSPECIFIED: 0,
  RING_STRATEGY_RING_ALL: 1,
  RING_STRATEGY_ROUND_ROBIN: 2,
  RING_STRATEGY_RANDOM: 3
};

goog.object.extend(exports, proto.services.pbx.v1);
