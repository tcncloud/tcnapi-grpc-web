// source: services/org/users/v1alpha1/preferences.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_org_preferences_pb = require('../../../../api/commons/org_preferences_pb.js');
goog.object.extend(proto, api_commons_org_preferences_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
goog.exportSymbol('proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest', null, global);
goog.exportSymbol('proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse', null, global);
goog.exportSymbol('proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest', null, global);
goog.exportSymbol('proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse', null, global);
goog.exportSymbol('proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest', null, global);
goog.exportSymbol('proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse', null, global);
goog.exportSymbol('proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest', null, global);
goog.exportSymbol('proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.displayName = 'proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.displayName = 'proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.displayName = 'proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.displayName = 'proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.displayName = 'proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.displayName = 'proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.displayName = 'proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.displayName = 'proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
fieldMask: (f = msg.getFieldMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest;
  return proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask field_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.getFieldMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest} returns this
*/
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.setFieldMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.clearFieldMask = function() {
  return this.setFieldMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesRequest.prototype.hasFieldMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
localePreferences: (f = msg.getLocalePreferences()) && api_commons_org_preferences_pb.LocalePreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse;
  return proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_org_preferences_pb.LocalePreferences;
      reader.readMessage(value,api_commons_org_preferences_pb.LocalePreferences.deserializeBinaryFromReader);
      msg.setLocalePreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalePreferences();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_org_preferences_pb.LocalePreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.LocalePreferences locale_preferences = 1;
 * @return {?proto.api.commons.LocalePreferences}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.prototype.getLocalePreferences = function() {
  return /** @type{?proto.api.commons.LocalePreferences} */ (
    jspb.Message.getWrapperField(this, api_commons_org_preferences_pb.LocalePreferences, 1));
};


/**
 * @param {?proto.api.commons.LocalePreferences|undefined} value
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse} returns this
*/
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.prototype.setLocalePreferences = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse} returns this
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.prototype.clearLocalePreferences = function() {
  return this.setLocalePreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.GetUserLocalePreferencesResponse.prototype.hasLocalePreferences = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
localePreferences: (f = msg.getLocalePreferences()) && api_commons_org_preferences_pb.LocalePreferences.toObject(includeInstance, f),
fieldMask: (f = msg.getFieldMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest;
  return proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new api_commons_org_preferences_pb.LocalePreferences;
      reader.readMessage(value,api_commons_org_preferences_pb.LocalePreferences.deserializeBinaryFromReader);
      msg.setLocalePreferences(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocalePreferences();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_commons_org_preferences_pb.LocalePreferences.serializeBinaryToWriter
    );
  }
  f = message.getFieldMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional api.commons.LocalePreferences locale_preferences = 2;
 * @return {?proto.api.commons.LocalePreferences}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.getLocalePreferences = function() {
  return /** @type{?proto.api.commons.LocalePreferences} */ (
    jspb.Message.getWrapperField(this, api_commons_org_preferences_pb.LocalePreferences, 2));
};


/**
 * @param {?proto.api.commons.LocalePreferences|undefined} value
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} returns this
*/
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.setLocalePreferences = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.clearLocalePreferences = function() {
  return this.setLocalePreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.hasLocalePreferences = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask field_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.getFieldMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} returns this
*/
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.setFieldMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.clearFieldMask = function() {
  return this.setFieldMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesRequest.prototype.hasFieldMask = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
localePreferences: (f = msg.getLocalePreferences()) && api_commons_org_preferences_pb.LocalePreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse;
  return proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_org_preferences_pb.LocalePreferences;
      reader.readMessage(value,api_commons_org_preferences_pb.LocalePreferences.deserializeBinaryFromReader);
      msg.setLocalePreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalePreferences();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_org_preferences_pb.LocalePreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.LocalePreferences locale_preferences = 1;
 * @return {?proto.api.commons.LocalePreferences}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.prototype.getLocalePreferences = function() {
  return /** @type{?proto.api.commons.LocalePreferences} */ (
    jspb.Message.getWrapperField(this, api_commons_org_preferences_pb.LocalePreferences, 1));
};


/**
 * @param {?proto.api.commons.LocalePreferences|undefined} value
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse} returns this
*/
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.prototype.setLocalePreferences = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse} returns this
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.prototype.clearLocalePreferences = function() {
  return this.setLocalePreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.UpdateUserLocalePreferencesResponse.prototype.hasLocalePreferences = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldMask: (f = msg.getFieldMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest;
  return proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldMask();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.FieldMask field_mask = 1;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.prototype.getFieldMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 1));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest} returns this
*/
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.prototype.setFieldMask = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.prototype.clearFieldMask = function() {
  return this.setFieldMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesRequest.prototype.hasFieldMask = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
localePreferences: (f = msg.getLocalePreferences()) && api_commons_org_preferences_pb.LocalePreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse;
  return proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_org_preferences_pb.LocalePreferences;
      reader.readMessage(value,api_commons_org_preferences_pb.LocalePreferences.deserializeBinaryFromReader);
      msg.setLocalePreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalePreferences();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_org_preferences_pb.LocalePreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.LocalePreferences locale_preferences = 1;
 * @return {?proto.api.commons.LocalePreferences}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.prototype.getLocalePreferences = function() {
  return /** @type{?proto.api.commons.LocalePreferences} */ (
    jspb.Message.getWrapperField(this, api_commons_org_preferences_pb.LocalePreferences, 1));
};


/**
 * @param {?proto.api.commons.LocalePreferences|undefined} value
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse} returns this
*/
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.prototype.setLocalePreferences = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse} returns this
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.prototype.clearLocalePreferences = function() {
  return this.setLocalePreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.GetMyUserLocalePreferencesResponse.prototype.hasLocalePreferences = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
localePreferences: (f = msg.getLocalePreferences()) && api_commons_org_preferences_pb.LocalePreferences.toObject(includeInstance, f),
fieldMask: (f = msg.getFieldMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest;
  return proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_org_preferences_pb.LocalePreferences;
      reader.readMessage(value,api_commons_org_preferences_pb.LocalePreferences.deserializeBinaryFromReader);
      msg.setLocalePreferences(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalePreferences();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_org_preferences_pb.LocalePreferences.serializeBinaryToWriter
    );
  }
  f = message.getFieldMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.LocalePreferences locale_preferences = 1;
 * @return {?proto.api.commons.LocalePreferences}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.getLocalePreferences = function() {
  return /** @type{?proto.api.commons.LocalePreferences} */ (
    jspb.Message.getWrapperField(this, api_commons_org_preferences_pb.LocalePreferences, 1));
};


/**
 * @param {?proto.api.commons.LocalePreferences|undefined} value
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest} returns this
*/
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.setLocalePreferences = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.clearLocalePreferences = function() {
  return this.setLocalePreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.hasLocalePreferences = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask field_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.getFieldMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest} returns this
*/
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.setFieldMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest} returns this
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.clearFieldMask = function() {
  return this.setFieldMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesRequest.prototype.hasFieldMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
localePreferences: (f = msg.getLocalePreferences()) && api_commons_org_preferences_pb.LocalePreferences.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse;
  return proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_org_preferences_pb.LocalePreferences;
      reader.readMessage(value,api_commons_org_preferences_pb.LocalePreferences.deserializeBinaryFromReader);
      msg.setLocalePreferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalePreferences();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_org_preferences_pb.LocalePreferences.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.LocalePreferences locale_preferences = 1;
 * @return {?proto.api.commons.LocalePreferences}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.prototype.getLocalePreferences = function() {
  return /** @type{?proto.api.commons.LocalePreferences} */ (
    jspb.Message.getWrapperField(this, api_commons_org_preferences_pb.LocalePreferences, 1));
};


/**
 * @param {?proto.api.commons.LocalePreferences|undefined} value
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse} returns this
*/
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.prototype.setLocalePreferences = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse} returns this
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.prototype.clearLocalePreferences = function() {
  return this.setLocalePreferences(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.org.users.v1alpha1.UpdateMyUserLocalePreferencesResponse.prototype.hasLocalePreferences = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.services.org.users.v1alpha1);
