// source: services/omnichannel/asm/v1alpha1/entities.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_omnichannel_pb = require('../../../../api/commons/omnichannel_pb.js');
goog.object.extend(proto, api_commons_omnichannel_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.AsmSession', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.CreateSessionReq', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.CreateSessionRes', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.EndSessionReq', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.EndSessionRes', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.VoiceRegistration', null, global);
goog.exportSymbol('proto.services.omnichannel.asm.v1alpha1.VoiceSession', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.CreateSessionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.displayName = 'proto.services.omnichannel.asm.v1alpha1.CreateSessionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.CreateSessionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.displayName = 'proto.services.omnichannel.asm.v1alpha1.CreateSessionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.VoiceRegistration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.displayName = 'proto.services.omnichannel.asm.v1alpha1.VoiceRegistration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.VoiceSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.VoiceSession.displayName = 'proto.services.omnichannel.asm.v1alpha1.VoiceSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EndSessionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EndSessionReq.displayName = 'proto.services.omnichannel.asm.v1alpha1.EndSessionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EndSessionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EndSessionRes.displayName = 'proto.services.omnichannel.asm.v1alpha1.EndSessionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.displayName = 'proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.displayName = 'proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.AsmSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.AsmSession.displayName = 'proto.services.omnichannel.asm.v1alpha1.AsmSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.displayName = 'proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.displayName = 'proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.displayName = 'proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.displayName = 'proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.displayName = 'proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.repeatedFields_, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.displayName = 'proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.displayName = 'proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionReq}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.CreateSessionReq;
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionReq}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    asmSession: (f = msg.getAsmSession()) && proto.services.omnichannel.asm.v1alpha1.AsmSession.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRes}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.CreateSessionRes;
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRes}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.omnichannel.asm.v1alpha1.AsmSession;
      reader.readMessage(value,proto.services.omnichannel.asm.v1alpha1.AsmSession.deserializeBinaryFromReader);
      msg.setAsmSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.omnichannel.asm.v1alpha1.AsmSession.serializeBinaryToWriter
    );
  }
};


/**
 * optional AsmSession asm_session = 1;
 * @return {?proto.services.omnichannel.asm.v1alpha1.AsmSession}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.prototype.getAsmSession = function() {
  return /** @type{?proto.services.omnichannel.asm.v1alpha1.AsmSession} */ (
    jspb.Message.getWrapperField(this, proto.services.omnichannel.asm.v1alpha1.AsmSession, 1));
};


/**
 * @param {?proto.services.omnichannel.asm.v1alpha1.AsmSession|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRes} returns this
*/
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.prototype.setAsmSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRes} returns this
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.prototype.clearAsmSession = function() {
  return this.setAsmSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRes.prototype.hasAsmSession = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dialUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pstnPhone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    defaultTimeZone: jspb.Message.getFieldWithDefault(msg, 6, ""),
    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.VoiceRegistration;
  return proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDialUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPstnPhone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultTimeZone(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpirationTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDialUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPstnPhone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDefaultTimeZone();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExpirationTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dial_url = 4;
 * @return {string}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.getDialUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.setDialUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string pstn_phone = 5;
 * @return {string}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.getPstnPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.setPstnPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string default_time_zone = 6;
 * @return {string}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.getDefaultTimeZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.setDefaultTimeZone = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 expiration_timestamp = 7;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.getExpirationTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.prototype.setExpirationTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.VoiceSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.toObject = function(includeInstance, msg) {
  var f, obj = {
    voiceSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    voiceSessionStart: (f = msg.getVoiceSessionStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    voiceSessionEnd: (f = msg.getVoiceSessionEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceSession}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.VoiceSession;
  return proto.services.omnichannel.asm.v1alpha1.VoiceSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceSession}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVoiceSessionSid(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setVoiceSessionStart(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setVoiceSessionEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.VoiceSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoiceSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getVoiceSessionStart();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVoiceSessionEnd();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 voice_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.getVoiceSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.setVoiceSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp voice_session_start = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.getVoiceSessionStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} returns this
*/
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.setVoiceSessionStart = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.clearVoiceSessionStart = function() {
  return this.setVoiceSessionStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.hasVoiceSessionStart = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp voice_session_end = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.getVoiceSessionEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} returns this
*/
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.setVoiceSessionEnd = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.VoiceSession} returns this
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.clearVoiceSessionEnd = function() {
  return this.setVoiceSessionEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.VoiceSession.prototype.hasVoiceSessionEnd = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EndSessionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    asmSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionReq}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EndSessionReq;
  return proto.services.omnichannel.asm.v1alpha1.EndSessionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionReq}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EndSessionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 asm_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionReq} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionReq} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionReq.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EndSessionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionRes}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EndSessionRes;
  return proto.services.omnichannel.asm.v1alpha1.EndSessionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionRes}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EndSessionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq;
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    asmSession: (f = msg.getAsmSession()) && proto.services.omnichannel.asm.v1alpha1.AsmSession.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes;
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.omnichannel.asm.v1alpha1.AsmSession;
      reader.readMessage(value,proto.services.omnichannel.asm.v1alpha1.AsmSession.deserializeBinaryFromReader);
      msg.setAsmSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.omnichannel.asm.v1alpha1.AsmSession.serializeBinaryToWriter
    );
  }
};


/**
 * optional AsmSession asm_session = 1;
 * @return {?proto.services.omnichannel.asm.v1alpha1.AsmSession}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.prototype.getAsmSession = function() {
  return /** @type{?proto.services.omnichannel.asm.v1alpha1.AsmSession} */ (
    jspb.Message.getWrapperField(this, proto.services.omnichannel.asm.v1alpha1.AsmSession, 1));
};


/**
 * @param {?proto.services.omnichannel.asm.v1alpha1.AsmSession|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes} returns this
*/
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.prototype.setAsmSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes} returns this
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.prototype.clearAsmSession = function() {
  return this.setAsmSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRes.prototype.hasAsmSession = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.AsmSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.AsmSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.toObject = function(includeInstance, msg) {
  var f, obj = {
    asmSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    asmSessionStart: (f = msg.getAsmSessionStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    asmSessionEnd: (f = msg.getAsmSessionEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    voiceSession: (f = msg.getVoiceSession()) && proto.services.omnichannel.asm.v1alpha1.VoiceSession.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.AsmSession;
  return proto.services.omnichannel.asm.v1alpha1.AsmSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.AsmSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAsmSessionStart(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAsmSessionEnd(value);
      break;
    case 6:
      var value = new proto.services.omnichannel.asm.v1alpha1.VoiceSession;
      reader.readMessage(value,proto.services.omnichannel.asm.v1alpha1.VoiceSession.deserializeBinaryFromReader);
      msg.setVoiceSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.AsmSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.AsmSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAsmSessionStart();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAsmSessionEnd();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVoiceSession();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.services.omnichannel.asm.v1alpha1.VoiceSession.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 asm_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession} returns this
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp asm_session_start = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.getAsmSessionStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession} returns this
*/
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.setAsmSessionStart = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession} returns this
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.clearAsmSessionStart = function() {
  return this.setAsmSessionStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.hasAsmSessionStart = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp asm_session_end = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.getAsmSessionEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession} returns this
*/
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.setAsmSessionEnd = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession} returns this
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.clearAsmSessionEnd = function() {
  return this.setAsmSessionEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.hasAsmSessionEnd = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional VoiceSession voice_session = 6;
 * @return {?proto.services.omnichannel.asm.v1alpha1.VoiceSession}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.getVoiceSession = function() {
  return /** @type{?proto.services.omnichannel.asm.v1alpha1.VoiceSession} */ (
    jspb.Message.getWrapperField(this, proto.services.omnichannel.asm.v1alpha1.VoiceSession, 6));
};


/**
 * @param {?proto.services.omnichannel.asm.v1alpha1.VoiceSession|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession} returns this
*/
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.setVoiceSession = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.AsmSession} returns this
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.clearVoiceSession = function() {
  return this.setVoiceSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.AsmSession.prototype.hasVoiceSession = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    asmSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    huntGroupSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    skillsMap: (f = msg.getSkillsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq;
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    case 3:
      var value = msg.getSkillsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSkillsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * optional int64 asm_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 hunt_group_sid = 2;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<string, int64> skills = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.getSkillsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceReq.prototype.clearSkillsMap = function() {
  this.getSkillsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    voiceSession: (f = msg.getVoiceSession()) && proto.services.omnichannel.asm.v1alpha1.VoiceSession.toObject(includeInstance, f),
    voiceRegistration: (f = msg.getVoiceRegistration()) && proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes;
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.omnichannel.asm.v1alpha1.VoiceSession;
      reader.readMessage(value,proto.services.omnichannel.asm.v1alpha1.VoiceSession.deserializeBinaryFromReader);
      msg.setVoiceSession(value);
      break;
    case 2:
      var value = new proto.services.omnichannel.asm.v1alpha1.VoiceRegistration;
      reader.readMessage(value,proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.deserializeBinaryFromReader);
      msg.setVoiceRegistration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoiceSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.services.omnichannel.asm.v1alpha1.VoiceSession.serializeBinaryToWriter
    );
  }
  f = message.getVoiceRegistration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.services.omnichannel.asm.v1alpha1.VoiceRegistration.serializeBinaryToWriter
    );
  }
};


/**
 * optional VoiceSession voice_session = 1;
 * @return {?proto.services.omnichannel.asm.v1alpha1.VoiceSession}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.getVoiceSession = function() {
  return /** @type{?proto.services.omnichannel.asm.v1alpha1.VoiceSession} */ (
    jspb.Message.getWrapperField(this, proto.services.omnichannel.asm.v1alpha1.VoiceSession, 1));
};


/**
 * @param {?proto.services.omnichannel.asm.v1alpha1.VoiceSession|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes} returns this
*/
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.setVoiceSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.clearVoiceSession = function() {
  return this.setVoiceSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.hasVoiceSession = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional VoiceRegistration voice_registration = 2;
 * @return {?proto.services.omnichannel.asm.v1alpha1.VoiceRegistration}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.getVoiceRegistration = function() {
  return /** @type{?proto.services.omnichannel.asm.v1alpha1.VoiceRegistration} */ (
    jspb.Message.getWrapperField(this, proto.services.omnichannel.asm.v1alpha1.VoiceRegistration, 2));
};


/**
 * @param {?proto.services.omnichannel.asm.v1alpha1.VoiceRegistration|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes} returns this
*/
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.setVoiceRegistration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.clearVoiceRegistration = function() {
  return this.setVoiceRegistration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRes.prototype.hasVoiceRegistration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    asmSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq;
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 asm_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq} returns this
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceReq.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes;
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq;
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionsList: jspb.Message.toObjectList(msg.getSessionsList(),
    proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes;
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails;
      reader.readMessage(value,proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.deserializeBinaryFromReader);
      msg.addSessions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListAsmUserDetails sessions = 1;
 * @return {!Array<!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails>}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.prototype.getSessionsList = function() {
  return /** @type{!Array<!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails, 1));
};


/**
 * @param {!Array<!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails>} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes} returns this
*/
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.prototype.setSessionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.prototype.addSessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes} returns this
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRes.prototype.clearSessionsList = function() {
  return this.setSessionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails;
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.services.omnichannel.asm.v1alpha1);
