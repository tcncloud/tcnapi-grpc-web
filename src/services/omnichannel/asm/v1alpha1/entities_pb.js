// source: services/omnichannel/asm/v1alpha1/entities.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var proto = {};

var api_commons_event_pb = require('../../../../api/commons/event_pb.js');
goog.object.extend(proto, api_commons_event_pb);
var services_omnichannel_asm_entities_v1alpha1_session_pb = require('../../../../services/omnichannel/asm/entities/v1alpha1/session_pb.js');
goog.object.extend(proto, services_omnichannel_asm_entities_v1alpha1_session_pb);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.CreateSessionRequest', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.CreateSessionResponse', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.DisableVoiceRequest', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.DisableVoiceResponse', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.EnableVoiceRequest', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.EnableVoiceResponse', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.EndSessionRequest', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.EndSessionResponse', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.PushEventResponse', null, proto);
goog.exportSymbol('services.omnichannel.asm.v1alpha1.PushEventsRequest', null, proto);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.displayName = 'proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.displayName = 'proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EndSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.displayName = 'proto.services.omnichannel.asm.v1alpha1.EndSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EndSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.displayName = 'proto.services.omnichannel.asm.v1alpha1.EndSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.displayName = 'proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.displayName = 'proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.displayName = 'proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.displayName = 'proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.displayName = 'proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.displayName = 'proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.displayName = 'proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.displayName = 'proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.PushEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.displayName = 'proto.services.omnichannel.asm.v1alpha1.PushEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.omnichannel.asm.v1alpha1.PushEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.omnichannel.asm.v1alpha1.PushEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.omnichannel.asm.v1alpha1.PushEventResponse.displayName = 'proto.services.omnichannel.asm.v1alpha1.PushEventResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest;
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
asmSession: (f = msg.getAsmSession()) && services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse;
  return proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession;
      reader.readMessage(value,services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession.deserializeBinaryFromReader);
      msg.setAsmSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession.serializeBinaryToWriter
    );
  }
};


/**
 * optional services.omnichannel.asm.entities.v1alpha1.AsmSession asm_session = 1;
 * @return {?proto.services.omnichannel.asm.entities.v1alpha1.AsmSession}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.prototype.getAsmSession = function() {
  return /** @type{?proto.services.omnichannel.asm.entities.v1alpha1.AsmSession} */ (
    jspb.Message.getWrapperField(this, services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession, 1));
};


/**
 * @param {?proto.services.omnichannel.asm.entities.v1alpha1.AsmSession|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse} returns this
*/
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.prototype.setAsmSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse} returns this
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.prototype.clearAsmSession = function() {
  return this.setAsmSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.CreateSessionResponse.prototype.hasAsmSession = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
asmSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionRequest}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EndSessionRequest;
  return proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionRequest}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 asm_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionResponse}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EndSessionResponse;
  return proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EndSessionResponse}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EndSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EndSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest;
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
asmSession: (f = msg.getAsmSession()) && services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse;
  return proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession;
      reader.readMessage(value,services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession.deserializeBinaryFromReader);
      msg.setAsmSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession.serializeBinaryToWriter
    );
  }
};


/**
 * optional services.omnichannel.asm.entities.v1alpha1.AsmSession asm_session = 1;
 * @return {?proto.services.omnichannel.asm.entities.v1alpha1.AsmSession}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.prototype.getAsmSession = function() {
  return /** @type{?proto.services.omnichannel.asm.entities.v1alpha1.AsmSession} */ (
    jspb.Message.getWrapperField(this, services_omnichannel_asm_entities_v1alpha1_session_pb.AsmSession, 1));
};


/**
 * @param {?proto.services.omnichannel.asm.entities.v1alpha1.AsmSession|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse} returns this
*/
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.prototype.setAsmSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse} returns this
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.prototype.clearAsmSession = function() {
  return this.setAsmSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.GetCurrentSessionResponse.prototype.hasAsmSession = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
asmSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
huntGroupSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
skillsMap: (f = msg.getSkillsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest;
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    case 3:
      var value = msg.getSkillsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSkillsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * optional int64 asm_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 hunt_group_sid = 2;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<string, int64> skills = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.getSkillsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceRequest.prototype.clearSkillsMap = function() {
  this.getSkillsMap().clear();
  return this;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
voiceSession: (f = msg.getVoiceSession()) && services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceSession.toObject(includeInstance, f),
voiceRegistration: (f = msg.getVoiceRegistration()) && services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceRegistration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse;
  return proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceSession;
      reader.readMessage(value,services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceSession.deserializeBinaryFromReader);
      msg.setVoiceSession(value);
      break;
    case 2:
      var value = new services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceRegistration;
      reader.readMessage(value,services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceRegistration.deserializeBinaryFromReader);
      msg.setVoiceRegistration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoiceSession();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceSession.serializeBinaryToWriter
    );
  }
  f = message.getVoiceRegistration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceRegistration.serializeBinaryToWriter
    );
  }
};


/**
 * optional services.omnichannel.asm.entities.v1alpha1.VoiceSession voice_session = 1;
 * @return {?proto.services.omnichannel.asm.entities.v1alpha1.VoiceSession}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.getVoiceSession = function() {
  return /** @type{?proto.services.omnichannel.asm.entities.v1alpha1.VoiceSession} */ (
    jspb.Message.getWrapperField(this, services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceSession, 1));
};


/**
 * @param {?proto.services.omnichannel.asm.entities.v1alpha1.VoiceSession|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse} returns this
*/
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.setVoiceSession = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.clearVoiceSession = function() {
  return this.setVoiceSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.hasVoiceSession = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional services.omnichannel.asm.entities.v1alpha1.VoiceRegistration voice_registration = 2;
 * @return {?proto.services.omnichannel.asm.entities.v1alpha1.VoiceRegistration}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.getVoiceRegistration = function() {
  return /** @type{?proto.services.omnichannel.asm.entities.v1alpha1.VoiceRegistration} */ (
    jspb.Message.getWrapperField(this, services_omnichannel_asm_entities_v1alpha1_session_pb.VoiceRegistration, 2));
};


/**
 * @param {?proto.services.omnichannel.asm.entities.v1alpha1.VoiceRegistration|undefined} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse} returns this
*/
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.setVoiceRegistration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse} returns this
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.clearVoiceRegistration = function() {
  return this.setVoiceRegistration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.services.omnichannel.asm.v1alpha1.EnableVoiceResponse.prototype.hasVoiceRegistration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
asmSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest;
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 asm_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceRequest.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse;
  return proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.DisableVoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest;
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
sessionsList: jspb.Message.toObjectList(msg.getSessionsList(),
    services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails.toObject, includeInstance),
asmUserDetailsList: jspb.Message.toObjectList(msg.getAsmUserDetailsList(),
    services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse;
  return proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails;
      reader.readMessage(value,services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails.deserializeBinaryFromReader);
      msg.addSessions(value);
      break;
    case 2:
      var value = new services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails;
      reader.readMessage(value,services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails.deserializeBinaryFromReader);
      msg.addAsmUserDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails.serializeBinaryToWriter
    );
  }
  f = message.getAsmUserDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated services.omnichannel.asm.entities.v1alpha1.AsmUserDetails sessions = 1;
 * @return {!Array<!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails>}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.getSessionsList = function() {
  return /** @type{!Array<!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails, 1));
};


/**
 * @param {!Array<!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails>} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse} returns this
*/
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.setSessionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.addSessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse} returns this
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.clearSessionsList = function() {
  return this.setSessionsList([]);
};


/**
 * repeated services.omnichannel.asm.entities.v1alpha1.AsmUserDetails asm_user_details = 2;
 * @return {!Array<!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails>}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.getAsmUserDetailsList = function() {
  return /** @type{!Array<!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, services_omnichannel_asm_entities_v1alpha1_session_pb.AsmUserDetails, 2));
};


/**
 * @param {!Array<!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails>} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse} returns this
*/
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.setAsmUserDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails}
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.addAsmUserDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.services.omnichannel.asm.entities.v1alpha1.AsmUserDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse} returns this
 */
proto.services.omnichannel.asm.v1alpha1.ListAsmUserDetailsResponse.prototype.clearAsmUserDetailsList = function() {
  return this.setAsmUserDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
amsSessionSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
asmEventsList: jspb.Message.toObjectList(msg.getAsmEventsList(),
    api_commons_event_pb.AsmEvent.toObject, includeInstance),
asmSessionSid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.PushEventsRequest;
  return proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmsSessionSid(value);
      break;
    case 2:
      var value = new api_commons_event_pb.AsmEvent;
      reader.readMessage(value,api_commons_event_pb.AsmEvent.deserializeBinaryFromReader);
      msg.addAsmEvents(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmsSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAsmEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      api_commons_event_pb.AsmEvent.serializeBinaryToWriter
    );
  }
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 ams_session_sid = 1;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.getAmsSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.setAmsSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated api.commons.AsmEvent asm_events = 2;
 * @return {!Array<!proto.api.commons.AsmEvent>}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.getAsmEventsList = function() {
  return /** @type{!Array<!proto.api.commons.AsmEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, api_commons_event_pb.AsmEvent, 2));
};


/**
 * @param {!Array<!proto.api.commons.AsmEvent>} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest} returns this
*/
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.setAsmEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.commons.AsmEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AsmEvent}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.addAsmEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.commons.AsmEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.clearAsmEventsList = function() {
  return this.setAsmEventsList([]);
};


/**
 * optional int64 asm_session_sid = 3;
 * @return {number}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventsRequest} returns this
 */
proto.services.omnichannel.asm.v1alpha1.PushEventsRequest.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.omnichannel.asm.v1alpha1.PushEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.omnichannel.asm.v1alpha1.PushEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.PushEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventResponse}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.omnichannel.asm.v1alpha1.PushEventResponse;
  return proto.services.omnichannel.asm.v1alpha1.PushEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.omnichannel.asm.v1alpha1.PushEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.omnichannel.asm.v1alpha1.PushEventResponse}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.omnichannel.asm.v1alpha1.PushEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.omnichannel.asm.v1alpha1.PushEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.omnichannel.asm.v1alpha1.PushEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.omnichannel.asm.v1alpha1.PushEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto);
