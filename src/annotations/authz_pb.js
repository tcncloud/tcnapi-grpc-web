// source: annotations/authz.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_auth_perms_pb = require('../api/commons/auth/perms_pb.js');
goog.object.extend(proto, api_commons_auth_perms_pb);
var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
goog.exportSymbol('proto.annotations.PermissionSet', null, global);
goog.exportSymbol('proto.annotations.Permissions', null, global);
goog.exportSymbol('proto.annotations.authz', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.annotations.Permissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.annotations.Permissions.repeatedFields_, null);
};
goog.inherits(proto.annotations.Permissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.annotations.Permissions.displayName = 'proto.annotations.Permissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.annotations.PermissionSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.annotations.PermissionSet.repeatedFields_, null);
};
goog.inherits(proto.annotations.PermissionSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.annotations.PermissionSet.displayName = 'proto.annotations.PermissionSet';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.annotations.Permissions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.annotations.Permissions.prototype.toObject = function(opt_includeInstance) {
  return proto.annotations.Permissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.annotations.Permissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.annotations.Permissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    setsList: jspb.Message.toObjectList(msg.getSetsList(),
    proto.annotations.PermissionSet.toObject, includeInstance),
    wip: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    noPermissions: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.annotations.Permissions}
 */
proto.annotations.Permissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.annotations.Permissions;
  return proto.annotations.Permissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.annotations.Permissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.annotations.Permissions}
 */
proto.annotations.Permissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.annotations.PermissionSet;
      reader.readMessage(value,proto.annotations.PermissionSet.deserializeBinaryFromReader);
      msg.addSets(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWip(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.annotations.Permissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.annotations.Permissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.annotations.Permissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.annotations.Permissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.annotations.PermissionSet.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated PermissionSet sets = 1;
 * @return {!Array<!proto.annotations.PermissionSet>}
 */
proto.annotations.Permissions.prototype.getSetsList = function() {
  return /** @type{!Array<!proto.annotations.PermissionSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.annotations.PermissionSet, 1));
};


/**
 * @param {!Array<!proto.annotations.PermissionSet>} value
 * @return {!proto.annotations.Permissions} returns this
*/
proto.annotations.Permissions.prototype.setSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.annotations.PermissionSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.annotations.PermissionSet}
 */
proto.annotations.Permissions.prototype.addSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.annotations.PermissionSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.annotations.Permissions} returns this
 */
proto.annotations.Permissions.prototype.clearSetsList = function() {
  return this.setSetsList([]);
};


/**
 * optional bool wip = 2;
 * @return {boolean}
 */
proto.annotations.Permissions.prototype.getWip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.annotations.Permissions} returns this
 */
proto.annotations.Permissions.prototype.setWip = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.annotations.Permissions} returns this
 */
proto.annotations.Permissions.prototype.clearWip = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.annotations.Permissions.prototype.hasWip = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool no_permissions = 3;
 * @return {boolean}
 */
proto.annotations.Permissions.prototype.getNoPermissions = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.annotations.Permissions} returns this
 */
proto.annotations.Permissions.prototype.setNoPermissions = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.annotations.Permissions} returns this
 */
proto.annotations.Permissions.prototype.clearNoPermissions = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.annotations.Permissions.prototype.hasNoPermissions = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.annotations.PermissionSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.annotations.PermissionSet.prototype.toObject = function(opt_includeInstance) {
  return proto.annotations.PermissionSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.annotations.PermissionSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.annotations.PermissionSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.annotations.PermissionSet}
 */
proto.annotations.PermissionSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.annotations.PermissionSet;
  return proto.annotations.PermissionSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.annotations.PermissionSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.annotations.PermissionSet}
 */
proto.annotations.PermissionSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.api.commons.auth.Permission>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPermissions(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.annotations.PermissionSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.annotations.PermissionSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.annotations.PermissionSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.annotations.PermissionSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      1,
      f
    );
  }
};


/**
 * repeated api.commons.auth.Permission permissions = 1;
 * @return {!Array<!proto.api.commons.auth.Permission>}
 */
proto.annotations.PermissionSet.prototype.getPermissionsList = function() {
  return /** @type {!Array<!proto.api.commons.auth.Permission>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.api.commons.auth.Permission>} value
 * @return {!proto.annotations.PermissionSet} returns this
 */
proto.annotations.PermissionSet.prototype.setPermissionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.api.commons.auth.Permission} value
 * @param {number=} opt_index
 * @return {!proto.annotations.PermissionSet} returns this
 */
proto.annotations.PermissionSet.prototype.addPermissions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.annotations.PermissionSet} returns this
 */
proto.annotations.PermissionSet.prototype.clearPermissionsList = function() {
  return this.setPermissionsList([]);
};



/**
 * A tuple of {field number, class constructor} for the extension
 * field named `authz`.
 * @type {!jspb.ExtensionFieldInfo<!proto.annotations.Permissions>}
 */
proto.annotations.authz = new jspb.ExtensionFieldInfo(
    560007,
    {authz: 0},
    proto.annotations.Permissions,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         proto.annotations.Permissions.toObject),
    0);

google_protobuf_descriptor_pb.MethodOptions.extensionsBinary[560007] = new jspb.ExtensionFieldBinaryInfo(
    proto.annotations.authz,
    jspb.BinaryReader.prototype.readMessage,
    jspb.BinaryWriter.prototype.writeMessage,
    proto.annotations.Permissions.serializeBinaryToWriter,
    proto.annotations.Permissions.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
google_protobuf_descriptor_pb.MethodOptions.extensions[560007] = proto.annotations.authz;

goog.object.extend(exports, proto.annotations);
