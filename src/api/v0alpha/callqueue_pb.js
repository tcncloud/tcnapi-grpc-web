// source: api/v0alpha/callqueue.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var annotations_authz_pb = require('../../annotations/authz_pb.js');
goog.object.extend(proto, annotations_authz_pb);
var api_commons_call_pb = require('../../api/commons/call_pb.js');
goog.object.extend(proto, api_commons_call_pb);
var api_commons_sms_pb = require('../../api/commons/sms_pb.js');
goog.object.extend(proto, api_commons_sms_pb);
var api_v0alpha_p3api_pb = require('../../api/v0alpha/p3api_pb.js');
goog.object.extend(proto, api_v0alpha_p3api_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.api.v0alpha.ClearManualDialQueueReq', null, global);
goog.exportSymbol('proto.api.v0alpha.ClearManualDialQueueRes', null, global);
goog.exportSymbol('proto.api.v0alpha.ClearPreviewRecordReturnQueueReq', null, global);
goog.exportSymbol('proto.api.v0alpha.ClearPreviewRecordReturnQueueRes', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeueCallForManualApprovalReq', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeueCallForManualApprovalRes', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeuePreviewRecordOrCallReq', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeuePreviewRecordOrCallRes', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeueSmsMamForManualApprovalReq', null, global);
goog.exportSymbol('proto.api.v0alpha.DequeueSmsMamForManualApprovalRes', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyApprovedCallReq', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyApprovedCallRes', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyApprovedSmsReq', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyApprovedSmsRes', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyRejectedCallReq', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyRejectedCallRes', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyRejectedSmsReq', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueueManuallyRejectedSmsRes', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueuePreviewDialCallReq', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueuePreviewDialCallRes', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueuePreviewRecordReq', null, global);
goog.exportSymbol('proto.api.v0alpha.EnqueuePreviewRecordRes', null, global);
goog.exportSymbol('proto.api.v0alpha.ProcessManualDialCallReq', null, global);
goog.exportSymbol('proto.api.v0alpha.ProcessManualDialCallRes', null, global);
goog.exportSymbol('proto.api.v0alpha.RequeueManuallyApprovedCallReq', null, global);
goog.exportSymbol('proto.api.v0alpha.RequeueManuallyApprovedCallRes', null, global);
goog.exportSymbol('proto.api.v0alpha.RequeueManuallyApprovedSmsReq', null, global);
goog.exportSymbol('proto.api.v0alpha.RequeueManuallyApprovedSmsRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeuePreviewRecordOrCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeuePreviewRecordOrCallReq.displayName = 'proto.api.v0alpha.DequeuePreviewRecordOrCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeuePreviewRecordOrCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeuePreviewRecordOrCallRes.displayName = 'proto.api.v0alpha.DequeuePreviewRecordOrCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueuePreviewRecordReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueuePreviewRecordReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueuePreviewRecordReq.displayName = 'proto.api.v0alpha.EnqueuePreviewRecordReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueuePreviewRecordRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueuePreviewRecordRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueuePreviewRecordRes.displayName = 'proto.api.v0alpha.EnqueuePreviewRecordRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.displayName = 'proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.displayName = 'proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ClearPreviewRecordReturnQueueReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.displayName = 'proto.api.v0alpha.ClearPreviewRecordReturnQueueReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ClearPreviewRecordReturnQueueRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.displayName = 'proto.api.v0alpha.ClearPreviewRecordReturnQueueRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueuePreviewDialCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueuePreviewDialCallReq.displayName = 'proto.api.v0alpha.EnqueuePreviewDialCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueuePreviewDialCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueuePreviewDialCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueuePreviewDialCallRes.displayName = 'proto.api.v0alpha.EnqueuePreviewDialCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ClearManualDialQueueReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ClearManualDialQueueReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ClearManualDialQueueReq.displayName = 'proto.api.v0alpha.ClearManualDialQueueReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ClearManualDialQueueRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ClearManualDialQueueRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ClearManualDialQueueRes.displayName = 'proto.api.v0alpha.ClearManualDialQueueRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ProcessManualDialCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ProcessManualDialCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ProcessManualDialCallReq.displayName = 'proto.api.v0alpha.ProcessManualDialCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ProcessManualDialCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ProcessManualDialCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ProcessManualDialCallRes.displayName = 'proto.api.v0alpha.ProcessManualDialCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeueCallForManualApprovalReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeueCallForManualApprovalReq.displayName = 'proto.api.v0alpha.DequeueCallForManualApprovalReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeueCallForManualApprovalRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeueCallForManualApprovalRes.displayName = 'proto.api.v0alpha.DequeueCallForManualApprovalRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyApprovedCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyApprovedCallReq.displayName = 'proto.api.v0alpha.EnqueueManuallyApprovedCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyApprovedCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyApprovedCallRes.displayName = 'proto.api.v0alpha.EnqueueManuallyApprovedCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyRejectedCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyRejectedCallReq.displayName = 'proto.api.v0alpha.EnqueueManuallyRejectedCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyRejectedCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyRejectedCallRes.displayName = 'proto.api.v0alpha.EnqueueManuallyRejectedCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.RequeueManuallyApprovedCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.RequeueManuallyApprovedCallReq.displayName = 'proto.api.v0alpha.RequeueManuallyApprovedCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.RequeueManuallyApprovedCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.RequeueManuallyApprovedCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.RequeueManuallyApprovedCallRes.displayName = 'proto.api.v0alpha.RequeueManuallyApprovedCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyApprovedSmsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.displayName = 'proto.api.v0alpha.EnqueueManuallyApprovedSmsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyApprovedSmsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.displayName = 'proto.api.v0alpha.EnqueueManuallyApprovedSmsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyRejectedSmsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.displayName = 'proto.api.v0alpha.EnqueueManuallyRejectedSmsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.EnqueueManuallyRejectedSmsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.displayName = 'proto.api.v0alpha.EnqueueManuallyRejectedSmsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.RequeueManuallyApprovedSmsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.RequeueManuallyApprovedSmsReq.displayName = 'proto.api.v0alpha.RequeueManuallyApprovedSmsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.RequeueManuallyApprovedSmsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.RequeueManuallyApprovedSmsRes.displayName = 'proto.api.v0alpha.RequeueManuallyApprovedSmsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeueSmsMamForManualApprovalReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.displayName = 'proto.api.v0alpha.DequeueSmsMamForManualApprovalReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DequeueSmsMamForManualApprovalRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.displayName = 'proto.api.v0alpha.DequeueSmsMamForManualApprovalRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeuePreviewRecordOrCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeuePreviewRecordOrCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
timeoutMinutes: jspb.Message.getFieldWithDefault(msg, 1, 0),
agentSessionSid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallReq}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeuePreviewRecordOrCallReq;
  return proto.api.v0alpha.DequeuePreviewRecordOrCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeuePreviewRecordOrCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallReq}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeoutMinutes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSessionSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeuePreviewRecordOrCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeuePreviewRecordOrCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeoutMinutes();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAgentSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 timeout_minutes = 1;
 * @return {number}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.prototype.getTimeoutMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallReq} returns this
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.prototype.setTimeoutMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 agent_session_sid = 2;
 * @return {number}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.prototype.getAgentSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallReq} returns this
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallReq.prototype.setAgentSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeuePreviewRecordOrCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {
queueName: jspb.Message.getFieldWithDefault(msg, 1, ""),
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
record: (f = msg.getRecord()) && api_commons_call_pb.SimpleRecordData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeuePreviewRecordOrCallRes;
  return proto.api.v0alpha.DequeuePreviewRecordOrCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    case 2:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 3:
      var value = new api_commons_call_pb.SimpleRecordData;
      reader.readMessage(value,api_commons_call_pb.SimpleRecordData.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeuePreviewRecordOrCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      api_commons_call_pb.SimpleRecordData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string queue_name = 1;
 * @return {string}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} returns this
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional api.commons.SimpleCallData call = 2;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 2));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} returns this
*/
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} returns this
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.hasCall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional api.commons.SimpleRecordData record = 3;
 * @return {?proto.api.commons.SimpleRecordData}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.getRecord = function() {
  return /** @type{?proto.api.commons.SimpleRecordData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleRecordData, 3));
};


/**
 * @param {?proto.api.commons.SimpleRecordData|undefined} value
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} returns this
*/
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.setRecord = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DequeuePreviewRecordOrCallRes} returns this
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DequeuePreviewRecordOrCallRes.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueuePreviewRecordReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueuePreviewRecordReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.toObject = function(includeInstance, msg) {
  var f, obj = {
record: (f = msg.getRecord()) && api_commons_call_pb.SimpleRecordData.toObject(includeInstance, f),
queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueuePreviewRecordReq}
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueuePreviewRecordReq;
  return proto.api.v0alpha.EnqueuePreviewRecordReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueuePreviewRecordReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueuePreviewRecordReq}
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleRecordData;
      reader.readMessage(value,api_commons_call_pb.SimpleRecordData.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueuePreviewRecordReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueuePreviewRecordReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleRecordData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleRecordData record = 1;
 * @return {?proto.api.commons.SimpleRecordData}
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.getRecord = function() {
  return /** @type{?proto.api.commons.SimpleRecordData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleRecordData, 1));
};


/**
 * @param {?proto.api.commons.SimpleRecordData|undefined} value
 * @return {!proto.api.v0alpha.EnqueuePreviewRecordReq} returns this
*/
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.setRecord = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.EnqueuePreviewRecordReq} returns this
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.EnqueuePreviewRecordReq} returns this
 */
proto.api.v0alpha.EnqueuePreviewRecordReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueuePreviewRecordRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueuePreviewRecordRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueuePreviewRecordRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewRecordRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueuePreviewRecordRes}
 */
proto.api.v0alpha.EnqueuePreviewRecordRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueuePreviewRecordRes;
  return proto.api.v0alpha.EnqueuePreviewRecordRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueuePreviewRecordRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueuePreviewRecordRes}
 */
proto.api.v0alpha.EnqueuePreviewRecordRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueuePreviewRecordRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueuePreviewRecordRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueuePreviewRecordRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewRecordRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.toObject = function(includeInstance, msg) {
  var f, obj = {
huntGroupSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
phoneNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
phoneNumIndex: jspb.Message.getFieldWithDefault(msg, 3, 0),
taskGroupSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
taskSid: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq;
  return proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhoneNumIndex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskGroupSid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhoneNumIndex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTaskGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTaskSid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int64 hunt_group_sid = 1;
 * @return {number}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string phone_number = 2;
 * @return {string}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 phone_num_index = 3;
 * @return {number}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.getPhoneNumIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.setPhoneNumIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 task_group_sid = 4;
 * @return {number}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.getTaskGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.setTaskGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 task_sid = 5;
 * @return {number}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.getTaskSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordReq.prototype.setTaskSid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.toObject = function(includeInstance, msg) {
  var f, obj = {
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes;
  return proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes} returns this
*/
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes} returns this
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DequeueScrubbedCallForPreviewRecordRes.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ClearPreviewRecordReturnQueueReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ClearPreviewRecordReturnQueueReq}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ClearPreviewRecordReturnQueueReq;
  return proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ClearPreviewRecordReturnQueueReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ClearPreviewRecordReturnQueueReq}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ClearPreviewRecordReturnQueueReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ClearPreviewRecordReturnQueueRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ClearPreviewRecordReturnQueueRes}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ClearPreviewRecordReturnQueueRes;
  return proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ClearPreviewRecordReturnQueueRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ClearPreviewRecordReturnQueueRes}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ClearPreviewRecordReturnQueueRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearPreviewRecordReturnQueueRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueuePreviewDialCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueuePreviewDialCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueuePreviewDialCallReq}
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueuePreviewDialCallReq;
  return proto.api.v0alpha.EnqueuePreviewDialCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueuePreviewDialCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueuePreviewDialCallReq}
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueuePreviewDialCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueuePreviewDialCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.EnqueuePreviewDialCallReq} returns this
*/
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.EnqueuePreviewDialCallReq} returns this
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.EnqueuePreviewDialCallReq} returns this
 */
proto.api.v0alpha.EnqueuePreviewDialCallReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueuePreviewDialCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueuePreviewDialCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueuePreviewDialCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewDialCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueuePreviewDialCallRes}
 */
proto.api.v0alpha.EnqueuePreviewDialCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueuePreviewDialCallRes;
  return proto.api.v0alpha.EnqueuePreviewDialCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueuePreviewDialCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueuePreviewDialCallRes}
 */
proto.api.v0alpha.EnqueuePreviewDialCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueuePreviewDialCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueuePreviewDialCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueuePreviewDialCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueuePreviewDialCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ClearManualDialQueueReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ClearManualDialQueueReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ClearManualDialQueueReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearManualDialQueueReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ClearManualDialQueueReq}
 */
proto.api.v0alpha.ClearManualDialQueueReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ClearManualDialQueueReq;
  return proto.api.v0alpha.ClearManualDialQueueReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ClearManualDialQueueReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ClearManualDialQueueReq}
 */
proto.api.v0alpha.ClearManualDialQueueReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ClearManualDialQueueReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ClearManualDialQueueReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ClearManualDialQueueReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearManualDialQueueReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ClearManualDialQueueRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ClearManualDialQueueRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ClearManualDialQueueRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearManualDialQueueRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ClearManualDialQueueRes}
 */
proto.api.v0alpha.ClearManualDialQueueRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ClearManualDialQueueRes;
  return proto.api.v0alpha.ClearManualDialQueueRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ClearManualDialQueueRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ClearManualDialQueueRes}
 */
proto.api.v0alpha.ClearManualDialQueueRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ClearManualDialQueueRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ClearManualDialQueueRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ClearManualDialQueueRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ClearManualDialQueueRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ProcessManualDialCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ProcessManualDialCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ProcessManualDialCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ProcessManualDialCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ProcessManualDialCallReq}
 */
proto.api.v0alpha.ProcessManualDialCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ProcessManualDialCallReq;
  return proto.api.v0alpha.ProcessManualDialCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ProcessManualDialCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ProcessManualDialCallReq}
 */
proto.api.v0alpha.ProcessManualDialCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ProcessManualDialCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ProcessManualDialCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ProcessManualDialCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ProcessManualDialCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.ProcessManualDialCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.ProcessManualDialCallReq} returns this
*/
proto.api.v0alpha.ProcessManualDialCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.ProcessManualDialCallReq} returns this
 */
proto.api.v0alpha.ProcessManualDialCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.ProcessManualDialCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ProcessManualDialCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ProcessManualDialCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ProcessManualDialCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ProcessManualDialCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {
scrubbedCall: (f = msg.getScrubbedCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ProcessManualDialCallRes}
 */
proto.api.v0alpha.ProcessManualDialCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ProcessManualDialCallRes;
  return proto.api.v0alpha.ProcessManualDialCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ProcessManualDialCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ProcessManualDialCallRes}
 */
proto.api.v0alpha.ProcessManualDialCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setScrubbedCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ProcessManualDialCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ProcessManualDialCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ProcessManualDialCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ProcessManualDialCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScrubbedCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData scrubbed_call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.ProcessManualDialCallRes.prototype.getScrubbedCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.ProcessManualDialCallRes} returns this
*/
proto.api.v0alpha.ProcessManualDialCallRes.prototype.setScrubbedCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.ProcessManualDialCallRes} returns this
 */
proto.api.v0alpha.ProcessManualDialCallRes.prototype.clearScrubbedCall = function() {
  return this.setScrubbedCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.ProcessManualDialCallRes.prototype.hasScrubbedCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeueCallForManualApprovalReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeueCallForManualApprovalReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.toObject = function(includeInstance, msg) {
  var f, obj = {
huntGroupSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
agentSessionSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
timeoutMinutes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalReq}
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeueCallForManualApprovalReq;
  return proto.api.v0alpha.DequeueCallForManualApprovalReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeueCallForManualApprovalReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalReq}
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSessionSid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeoutMinutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeueCallForManualApprovalReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeueCallForManualApprovalReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAgentSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTimeoutMinutes();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 hunt_group_sid = 1;
 * @return {number}
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalReq} returns this
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 agent_session_sid = 2;
 * @return {number}
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.getAgentSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalReq} returns this
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.setAgentSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 timeout_minutes = 3;
 * @return {number}
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.getTimeoutMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalReq} returns this
 */
proto.api.v0alpha.DequeueCallForManualApprovalReq.prototype.setTimeoutMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeueCallForManualApprovalRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeueCallForManualApprovalRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.toObject = function(includeInstance, msg) {
  var f, obj = {
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
queue: jspb.Message.getFieldWithDefault(msg, 2, ""),
clientInfo: (f = msg.getClientInfo()) && api_v0alpha_p3api_pb.GetClientInfoDataRes.toObject(includeInstance, f),
clientInfoTemplate: (f = msg.getClientInfoTemplate()) && api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeueCallForManualApprovalRes;
  return proto.api.v0alpha.DequeueCallForManualApprovalRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeueCallForManualApprovalRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    case 3:
      var value = new api_v0alpha_p3api_pb.GetClientInfoDataRes;
      reader.readMessage(value,api_v0alpha_p3api_pb.GetClientInfoDataRes.deserializeBinaryFromReader);
      msg.setClientInfo(value);
      break;
    case 4:
      var value = new api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes;
      reader.readMessage(value,api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes.deserializeBinaryFromReader);
      msg.setClientInfoTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeueCallForManualApprovalRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeueCallForManualApprovalRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getQueue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      api_v0alpha_p3api_pb.GetClientInfoDataRes.serializeBinaryToWriter
    );
  }
  f = message.getClientInfoTemplate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes} returns this
*/
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue = 2;
 * @return {string}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.setQueue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional GetClientInfoDataRes client_info = 3;
 * @return {?proto.api.v0alpha.GetClientInfoDataRes}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.getClientInfo = function() {
  return /** @type{?proto.api.v0alpha.GetClientInfoDataRes} */ (
    jspb.Message.getWrapperField(this, api_v0alpha_p3api_pb.GetClientInfoDataRes, 3));
};


/**
 * @param {?proto.api.v0alpha.GetClientInfoDataRes|undefined} value
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes} returns this
*/
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.setClientInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.clearClientInfo = function() {
  return this.setClientInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.hasClientInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GetClientInfoDisplayTemplateRes client_info_template = 4;
 * @return {?proto.api.v0alpha.GetClientInfoDisplayTemplateRes}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.getClientInfoTemplate = function() {
  return /** @type{?proto.api.v0alpha.GetClientInfoDisplayTemplateRes} */ (
    jspb.Message.getWrapperField(this, api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes, 4));
};


/**
 * @param {?proto.api.v0alpha.GetClientInfoDisplayTemplateRes|undefined} value
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes} returns this
*/
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.setClientInfoTemplate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.clearClientInfoTemplate = function() {
  return this.setClientInfoTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DequeueCallForManualApprovalRes.prototype.hasClientInfoTemplate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyApprovedCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedCallReq}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyApprovedCallReq;
  return proto.api.v0alpha.EnqueueManuallyApprovedCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedCallReq}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyApprovedCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedCallReq} returns this
*/
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedCallReq} returns this
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyApprovedCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedCallRes}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyApprovedCallRes;
  return proto.api.v0alpha.EnqueueManuallyApprovedCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedCallRes}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyApprovedCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyRejectedCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedCallReq}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyRejectedCallReq;
  return proto.api.v0alpha.EnqueueManuallyRejectedCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedCallReq}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyRejectedCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedCallReq} returns this
*/
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedCallReq} returns this
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyRejectedCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedCallRes}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyRejectedCallRes;
  return proto.api.v0alpha.EnqueueManuallyRejectedCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedCallRes}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyRejectedCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.RequeueManuallyApprovedCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedCallReq}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.RequeueManuallyApprovedCallReq;
  return proto.api.v0alpha.RequeueManuallyApprovedCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedCallReq}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.RequeueManuallyApprovedCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedCallReq} returns this
*/
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedCallReq} returns this
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedCallReq} returns this
 */
proto.api.v0alpha.RequeueManuallyApprovedCallReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.RequeueManuallyApprovedCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedCallRes}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.RequeueManuallyApprovedCallRes;
  return proto.api.v0alpha.RequeueManuallyApprovedCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedCallRes}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.RequeueManuallyApprovedCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.RequeueManuallyApprovedCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedSmsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedSmsReq}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyApprovedSmsReq;
  return proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedSmsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedSmsReq}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedSmsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedSmsReq} returns this
*/
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedSmsReq} returns this
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsReq.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedSmsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedSmsRes}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyApprovedSmsRes;
  return proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedSmsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyApprovedSmsRes}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyApprovedSmsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyApprovedSmsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedSmsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedSmsReq}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyRejectedSmsReq;
  return proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedSmsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedSmsReq}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedSmsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedSmsReq} returns this
*/
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedSmsReq} returns this
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsReq.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedSmsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedSmsRes}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.EnqueueManuallyRejectedSmsRes;
  return proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedSmsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.EnqueueManuallyRejectedSmsRes}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.EnqueueManuallyRejectedSmsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.EnqueueManuallyRejectedSmsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.RequeueManuallyApprovedSmsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f),
queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.RequeueManuallyApprovedSmsReq;
  return proto.api.v0alpha.RequeueManuallyApprovedSmsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.RequeueManuallyApprovedSmsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq} returns this
*/
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq} returns this
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedSmsReq} returns this
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.RequeueManuallyApprovedSmsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedSmsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedSmsRes}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.RequeueManuallyApprovedSmsRes;
  return proto.api.v0alpha.RequeueManuallyApprovedSmsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedSmsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.RequeueManuallyApprovedSmsRes}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.RequeueManuallyApprovedSmsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.RequeueManuallyApprovedSmsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RequeueManuallyApprovedSmsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeueSmsMamForManualApprovalReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.toObject = function(includeInstance, msg) {
  var f, obj = {
huntGroupSid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalReq}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeueSmsMamForManualApprovalReq;
  return proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeueSmsMamForManualApprovalReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalReq}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeueSmsMamForManualApprovalReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 hunt_group_sid = 2;
 * @return {number}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalReq} returns this
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalReq.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.toObject = function(includeInstance, msg) {
  var f, obj = {
sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f),
queue: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DequeueSmsMamForManualApprovalRes;
  return proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
  f = message.getQueue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes} returns this
*/
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes} returns this
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue = 2;
 * @return {string}
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DequeueSmsMamForManualApprovalRes} returns this
 */
proto.api.v0alpha.DequeueSmsMamForManualApprovalRes.prototype.setQueue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.api.v0alpha);
