// source: api/v0alpha/dashboards.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var annotations_authz_pb = require('../../annotations/authz_pb.js');
goog.object.extend(proto, annotations_authz_pb);
var api_commons_org_pb = require('../../api/commons/org_pb.js');
goog.object.extend(proto, api_commons_org_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.v0alpha.CreateDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.CreateDashboardResponse', null, global);
goog.exportSymbol('proto.api.v0alpha.CreateStandardDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.CreateStandardDashboardResponse', null, global);
goog.exportSymbol('proto.api.v0alpha.Dashboard', null, global);
goog.exportSymbol('proto.api.v0alpha.DashboardLayout', null, global);
goog.exportSymbol('proto.api.v0alpha.DashboardPanel', null, global);
goog.exportSymbol('proto.api.v0alpha.DashboardSummary', null, global);
goog.exportSymbol('proto.api.v0alpha.DashboardType', null, global);
goog.exportSymbol('proto.api.v0alpha.DashboardType.TypeCase', null, global);
goog.exportSymbol('proto.api.v0alpha.DashboardView', null, global);
goog.exportSymbol('proto.api.v0alpha.DeleteDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.DeleteStandardDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.GetDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.GetDefaultDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.HistoricConfig', null, global);
goog.exportSymbol('proto.api.v0alpha.HistoricConfig.TimeSpanCase', null, global);
goog.exportSymbol('proto.api.v0alpha.ListDashboardsRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.ListDashboardsResponse', null, global);
goog.exportSymbol('proto.api.v0alpha.ListProductTypesRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.ListProductTypesResult', null, global);
goog.exportSymbol('proto.api.v0alpha.PanelSource', null, global);
goog.exportSymbol('proto.api.v0alpha.PanelSource.PanelTypeCase', null, global);
goog.exportSymbol('proto.api.v0alpha.ProductType', null, global);
goog.exportSymbol('proto.api.v0alpha.RealTimeConfig', null, global);
goog.exportSymbol('proto.api.v0alpha.SetDefaultDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.TimeSpan', null, global);
goog.exportSymbol('proto.api.v0alpha.TimeSpan.Interval', null, global);
goog.exportSymbol('proto.api.v0alpha.TimeSpan.Range', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateDashboardLayoutRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateDashboardViewRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateStandardDashboardLayoutRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateStandardDashboardRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest', null, global);
goog.exportSymbol('proto.api.v0alpha.UpdateStandardDashboardViewRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ListDashboardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ListDashboardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ListDashboardsRequest.displayName = 'proto.api.v0alpha.ListDashboardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ListDashboardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v0alpha.ListDashboardsResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v0alpha.ListDashboardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ListDashboardsResponse.displayName = 'proto.api.v0alpha.ListDashboardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DashboardSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DashboardSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DashboardSummary.displayName = 'proto.api.v0alpha.DashboardSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.GetDefaultDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.GetDefaultDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.GetDefaultDashboardRequest.displayName = 'proto.api.v0alpha.GetDefaultDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.SetDefaultDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.SetDefaultDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.SetDefaultDashboardRequest.displayName = 'proto.api.v0alpha.SetDefaultDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ListProductTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ListProductTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ListProductTypesRequest.displayName = 'proto.api.v0alpha.ListProductTypesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ListProductTypesResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v0alpha.ListProductTypesResult.repeatedFields_, null);
};
goog.inherits(proto.api.v0alpha.ListProductTypesResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ListProductTypesResult.displayName = 'proto.api.v0alpha.ListProductTypesResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.ProductType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.ProductType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.ProductType.displayName = 'proto.api.v0alpha.ProductType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DeleteDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DeleteDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DeleteDashboardRequest.displayName = 'proto.api.v0alpha.DeleteDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DeleteStandardDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DeleteStandardDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DeleteStandardDashboardRequest.displayName = 'proto.api.v0alpha.DeleteStandardDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.GetDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.GetDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.GetDashboardRequest.displayName = 'proto.api.v0alpha.GetDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.CreateStandardDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.CreateStandardDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.CreateStandardDashboardRequest.displayName = 'proto.api.v0alpha.CreateStandardDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.CreateStandardDashboardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.CreateStandardDashboardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.CreateStandardDashboardResponse.displayName = 'proto.api.v0alpha.CreateStandardDashboardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.CreateDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.CreateDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.CreateDashboardRequest.displayName = 'proto.api.v0alpha.CreateDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.CreateDashboardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.CreateDashboardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.CreateDashboardResponse.displayName = 'proto.api.v0alpha.CreateDashboardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DashboardLayout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v0alpha.DashboardLayout.repeatedFields_, null);
};
goog.inherits(proto.api.v0alpha.DashboardLayout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DashboardLayout.displayName = 'proto.api.v0alpha.DashboardLayout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DashboardPanel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.DashboardPanel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DashboardPanel.displayName = 'proto.api.v0alpha.DashboardPanel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.PanelSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.v0alpha.PanelSource.oneofGroups_);
};
goog.inherits(proto.api.v0alpha.PanelSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.PanelSource.displayName = 'proto.api.v0alpha.PanelSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.Dashboard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.Dashboard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.Dashboard.displayName = 'proto.api.v0alpha.Dashboard';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DashboardType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.v0alpha.DashboardType.oneofGroups_);
};
goog.inherits(proto.api.v0alpha.DashboardType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DashboardType.displayName = 'proto.api.v0alpha.DashboardType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.HistoricConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.v0alpha.HistoricConfig.oneofGroups_);
};
goog.inherits(proto.api.v0alpha.HistoricConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.HistoricConfig.displayName = 'proto.api.v0alpha.HistoricConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.RealTimeConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.RealTimeConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.RealTimeConfig.displayName = 'proto.api.v0alpha.RealTimeConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateDashboardRequest.displayName = 'proto.api.v0alpha.UpdateDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateStandardDashboardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateStandardDashboardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateStandardDashboardRequest.displayName = 'proto.api.v0alpha.UpdateStandardDashboardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.displayName = 'proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.displayName = 'proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateDashboardLayoutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateDashboardLayoutRequest.displayName = 'proto.api.v0alpha.UpdateDashboardLayoutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateStandardDashboardLayoutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.displayName = 'proto.api.v0alpha.UpdateStandardDashboardLayoutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateDashboardViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateDashboardViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateDashboardViewRequest.displayName = 'proto.api.v0alpha.UpdateDashboardViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.UpdateStandardDashboardViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.UpdateStandardDashboardViewRequest.displayName = 'proto.api.v0alpha.UpdateStandardDashboardViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.DashboardView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v0alpha.DashboardView.repeatedFields_, null);
};
goog.inherits(proto.api.v0alpha.DashboardView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.DashboardView.displayName = 'proto.api.v0alpha.DashboardView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.TimeSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.TimeSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.TimeSpan.displayName = 'proto.api.v0alpha.TimeSpan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v0alpha.TimeSpan.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v0alpha.TimeSpan.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v0alpha.TimeSpan.Range.displayName = 'proto.api.v0alpha.TimeSpan.Range';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ListDashboardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ListDashboardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ListDashboardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListDashboardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ListDashboardsRequest}
 */
proto.api.v0alpha.ListDashboardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ListDashboardsRequest;
  return proto.api.v0alpha.ListDashboardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ListDashboardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ListDashboardsRequest}
 */
proto.api.v0alpha.ListDashboardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ListDashboardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ListDashboardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ListDashboardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListDashboardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v0alpha.ListDashboardsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ListDashboardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ListDashboardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ListDashboardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListDashboardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardSummariesList: jspb.Message.toObjectList(msg.getDashboardSummariesList(),
    proto.api.v0alpha.DashboardSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ListDashboardsResponse}
 */
proto.api.v0alpha.ListDashboardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ListDashboardsResponse;
  return proto.api.v0alpha.ListDashboardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ListDashboardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ListDashboardsResponse}
 */
proto.api.v0alpha.ListDashboardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.v0alpha.DashboardSummary;
      reader.readMessage(value,proto.api.v0alpha.DashboardSummary.deserializeBinaryFromReader);
      msg.addDashboardSummaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ListDashboardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ListDashboardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ListDashboardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListDashboardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardSummariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.v0alpha.DashboardSummary.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DashboardSummary dashboard_summaries = 1;
 * @return {!Array<!proto.api.v0alpha.DashboardSummary>}
 */
proto.api.v0alpha.ListDashboardsResponse.prototype.getDashboardSummariesList = function() {
  return /** @type{!Array<!proto.api.v0alpha.DashboardSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v0alpha.DashboardSummary, 1));
};


/**
 * @param {!Array<!proto.api.v0alpha.DashboardSummary>} value
 * @return {!proto.api.v0alpha.ListDashboardsResponse} returns this
*/
proto.api.v0alpha.ListDashboardsResponse.prototype.setDashboardSummariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.v0alpha.DashboardSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v0alpha.DashboardSummary}
 */
proto.api.v0alpha.ListDashboardsResponse.prototype.addDashboardSummaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.v0alpha.DashboardSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v0alpha.ListDashboardsResponse} returns this
 */
proto.api.v0alpha.ListDashboardsResponse.prototype.clearDashboardSummariesList = function() {
  return this.setDashboardSummariesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DashboardSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DashboardSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DashboardSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    panelCount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DashboardSummary}
 */
proto.api.v0alpha.DashboardSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DashboardSummary;
  return proto.api.v0alpha.DashboardSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DashboardSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DashboardSummary}
 */
proto.api.v0alpha.DashboardSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPanelCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DashboardSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DashboardSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DashboardSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPanelCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.DashboardSummary.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DashboardSummary} returns this
 */
proto.api.v0alpha.DashboardSummary.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.v0alpha.DashboardSummary.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DashboardSummary} returns this
 */
proto.api.v0alpha.DashboardSummary.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.v0alpha.DashboardSummary.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DashboardSummary} returns this
 */
proto.api.v0alpha.DashboardSummary.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 panel_count = 4;
 * @return {number}
 */
proto.api.v0alpha.DashboardSummary.prototype.getPanelCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DashboardSummary} returns this
 */
proto.api.v0alpha.DashboardSummary.prototype.setPanelCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.GetDefaultDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.GetDefaultDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.GetDefaultDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.GetDefaultDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.GetDefaultDashboardRequest}
 */
proto.api.v0alpha.GetDefaultDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.GetDefaultDashboardRequest;
  return proto.api.v0alpha.GetDefaultDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.GetDefaultDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.GetDefaultDashboardRequest}
 */
proto.api.v0alpha.GetDefaultDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.GetDefaultDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.GetDefaultDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.GetDefaultDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.GetDefaultDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.SetDefaultDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.SetDefaultDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.SetDefaultDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.SetDefaultDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.SetDefaultDashboardRequest}
 */
proto.api.v0alpha.SetDefaultDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.SetDefaultDashboardRequest;
  return proto.api.v0alpha.SetDefaultDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.SetDefaultDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.SetDefaultDashboardRequest}
 */
proto.api.v0alpha.SetDefaultDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.SetDefaultDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.SetDefaultDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.SetDefaultDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.SetDefaultDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.SetDefaultDashboardRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.SetDefaultDashboardRequest} returns this
 */
proto.api.v0alpha.SetDefaultDashboardRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ListProductTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ListProductTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ListProductTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListProductTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ListProductTypesRequest}
 */
proto.api.v0alpha.ListProductTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ListProductTypesRequest;
  return proto.api.v0alpha.ListProductTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ListProductTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ListProductTypesRequest}
 */
proto.api.v0alpha.ListProductTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ListProductTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ListProductTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ListProductTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListProductTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v0alpha.ListProductTypesResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ListProductTypesResult.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ListProductTypesResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ListProductTypesResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListProductTypesResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    typesList: jspb.Message.toObjectList(msg.getTypesList(),
    proto.api.v0alpha.ProductType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ListProductTypesResult}
 */
proto.api.v0alpha.ListProductTypesResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ListProductTypesResult;
  return proto.api.v0alpha.ListProductTypesResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ListProductTypesResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ListProductTypesResult}
 */
proto.api.v0alpha.ListProductTypesResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.v0alpha.ProductType;
      reader.readMessage(value,proto.api.v0alpha.ProductType.deserializeBinaryFromReader);
      msg.addTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ListProductTypesResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ListProductTypesResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ListProductTypesResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ListProductTypesResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.v0alpha.ProductType.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductType types = 1;
 * @return {!Array<!proto.api.v0alpha.ProductType>}
 */
proto.api.v0alpha.ListProductTypesResult.prototype.getTypesList = function() {
  return /** @type{!Array<!proto.api.v0alpha.ProductType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v0alpha.ProductType, 1));
};


/**
 * @param {!Array<!proto.api.v0alpha.ProductType>} value
 * @return {!proto.api.v0alpha.ListProductTypesResult} returns this
*/
proto.api.v0alpha.ListProductTypesResult.prototype.setTypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.v0alpha.ProductType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v0alpha.ProductType}
 */
proto.api.v0alpha.ListProductTypesResult.prototype.addTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.v0alpha.ProductType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v0alpha.ListProductTypesResult} returns this
 */
proto.api.v0alpha.ListProductTypesResult.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.ProductType.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.ProductType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.ProductType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ProductType.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.ProductType}
 */
proto.api.v0alpha.ProductType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.ProductType;
  return proto.api.v0alpha.ProductType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.ProductType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.ProductType}
 */
proto.api.v0alpha.ProductType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.ProductType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.ProductType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.ProductType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.ProductType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.api.v0alpha.ProductType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.ProductType} returns this
 */
proto.api.v0alpha.ProductType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.api.v0alpha.ProductType.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.ProductType} returns this
 */
proto.api.v0alpha.ProductType.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DeleteDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DeleteDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DeleteDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DeleteDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DeleteDashboardRequest}
 */
proto.api.v0alpha.DeleteDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DeleteDashboardRequest;
  return proto.api.v0alpha.DeleteDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DeleteDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DeleteDashboardRequest}
 */
proto.api.v0alpha.DeleteDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DeleteDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DeleteDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DeleteDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DeleteDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.DeleteDashboardRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DeleteDashboardRequest} returns this
 */
proto.api.v0alpha.DeleteDashboardRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DeleteStandardDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DeleteStandardDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DeleteStandardDashboardRequest}
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DeleteStandardDashboardRequest;
  return proto.api.v0alpha.DeleteStandardDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DeleteStandardDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DeleteStandardDashboardRequest}
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DeleteStandardDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DeleteStandardDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.DeleteStandardDashboardRequest} returns this
 */
proto.api.v0alpha.DeleteStandardDashboardRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.GetDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.GetDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.GetDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.GetDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.GetDashboardRequest}
 */
proto.api.v0alpha.GetDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.GetDashboardRequest;
  return proto.api.v0alpha.GetDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.GetDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.GetDashboardRequest}
 */
proto.api.v0alpha.GetDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.GetDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.GetDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.GetDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.GetDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.GetDashboardRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.GetDashboardRequest} returns this
 */
proto.api.v0alpha.GetDashboardRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.CreateStandardDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.CreateStandardDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateStandardDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    layout: (f = msg.getLayout()) && proto.api.v0alpha.DashboardLayout.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.api.v0alpha.DashboardView.toObject(includeInstance, f),
    type: (f = msg.getType()) && proto.api.v0alpha.DashboardType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.CreateStandardDashboardRequest;
  return proto.api.v0alpha.CreateStandardDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.CreateStandardDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.api.v0alpha.DashboardLayout;
      reader.readMessage(value,proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 4:
      var value = new proto.api.v0alpha.DashboardView;
      reader.readMessage(value,proto.api.v0alpha.DashboardView.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 5:
      var value = new proto.api.v0alpha.DashboardType;
      reader.readMessage(value,proto.api.v0alpha.DashboardType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.CreateStandardDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.CreateStandardDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateStandardDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.v0alpha.DashboardView.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.v0alpha.DashboardType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional DashboardLayout layout = 3;
 * @return {?proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.getLayout = function() {
  return /** @type{?proto.api.v0alpha.DashboardLayout} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardLayout, 3));
};


/**
 * @param {?proto.api.v0alpha.DashboardLayout|undefined} value
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
*/
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DashboardView view = 4;
 * @return {?proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.getView = function() {
  return /** @type{?proto.api.v0alpha.DashboardView} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardView, 4));
};


/**
 * @param {?proto.api.v0alpha.DashboardView|undefined} value
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
*/
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.hasView = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DashboardType type = 5;
 * @return {?proto.api.v0alpha.DashboardType}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.getType = function() {
  return /** @type{?proto.api.v0alpha.DashboardType} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardType, 5));
};


/**
 * @param {?proto.api.v0alpha.DashboardType|undefined} value
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
*/
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.CreateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.CreateStandardDashboardRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.CreateStandardDashboardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.CreateStandardDashboardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.CreateStandardDashboardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateStandardDashboardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.CreateStandardDashboardResponse}
 */
proto.api.v0alpha.CreateStandardDashboardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.CreateStandardDashboardResponse;
  return proto.api.v0alpha.CreateStandardDashboardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.CreateStandardDashboardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.CreateStandardDashboardResponse}
 */
proto.api.v0alpha.CreateStandardDashboardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.CreateStandardDashboardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.CreateStandardDashboardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.CreateStandardDashboardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateStandardDashboardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.CreateStandardDashboardResponse.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.CreateStandardDashboardResponse} returns this
 */
proto.api.v0alpha.CreateStandardDashboardResponse.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.CreateDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.CreateDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    layout: (f = msg.getLayout()) && proto.api.v0alpha.DashboardLayout.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.api.v0alpha.DashboardView.toObject(includeInstance, f),
    type: (f = msg.getType()) && proto.api.v0alpha.DashboardType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.CreateDashboardRequest}
 */
proto.api.v0alpha.CreateDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.CreateDashboardRequest;
  return proto.api.v0alpha.CreateDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.CreateDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.CreateDashboardRequest}
 */
proto.api.v0alpha.CreateDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.api.v0alpha.DashboardLayout;
      reader.readMessage(value,proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 4:
      var value = new proto.api.v0alpha.DashboardView;
      reader.readMessage(value,proto.api.v0alpha.DashboardView.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 5:
      var value = new proto.api.v0alpha.DashboardType;
      reader.readMessage(value,proto.api.v0alpha.DashboardType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.CreateDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.CreateDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.v0alpha.DashboardView.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.v0alpha.DashboardType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional DashboardLayout layout = 3;
 * @return {?proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.getLayout = function() {
  return /** @type{?proto.api.v0alpha.DashboardLayout} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardLayout, 3));
};


/**
 * @param {?proto.api.v0alpha.DashboardLayout|undefined} value
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
*/
proto.api.v0alpha.CreateDashboardRequest.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DashboardView view = 4;
 * @return {?proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.getView = function() {
  return /** @type{?proto.api.v0alpha.DashboardView} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardView, 4));
};


/**
 * @param {?proto.api.v0alpha.DashboardView|undefined} value
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
*/
proto.api.v0alpha.CreateDashboardRequest.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.hasView = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DashboardType type = 5;
 * @return {?proto.api.v0alpha.DashboardType}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.getType = function() {
  return /** @type{?proto.api.v0alpha.DashboardType} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardType, 5));
};


/**
 * @param {?proto.api.v0alpha.DashboardType|undefined} value
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
*/
proto.api.v0alpha.CreateDashboardRequest.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.CreateDashboardRequest} returns this
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.CreateDashboardRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.CreateDashboardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.CreateDashboardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.CreateDashboardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateDashboardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.CreateDashboardResponse}
 */
proto.api.v0alpha.CreateDashboardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.CreateDashboardResponse;
  return proto.api.v0alpha.CreateDashboardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.CreateDashboardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.CreateDashboardResponse}
 */
proto.api.v0alpha.CreateDashboardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.CreateDashboardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.CreateDashboardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.CreateDashboardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.CreateDashboardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.CreateDashboardResponse.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.CreateDashboardResponse} returns this
 */
proto.api.v0alpha.CreateDashboardResponse.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v0alpha.DashboardLayout.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DashboardLayout.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DashboardLayout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DashboardLayout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardLayout.toObject = function(includeInstance, msg) {
  var f, obj = {
    panelsList: jspb.Message.toObjectList(msg.getPanelsList(),
    proto.api.v0alpha.DashboardPanel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.DashboardLayout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DashboardLayout;
  return proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DashboardLayout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.v0alpha.DashboardPanel;
      reader.readMessage(value,proto.api.v0alpha.DashboardPanel.deserializeBinaryFromReader);
      msg.addPanels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DashboardLayout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DashboardLayout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPanelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.v0alpha.DashboardPanel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DashboardPanel panels = 1;
 * @return {!Array<!proto.api.v0alpha.DashboardPanel>}
 */
proto.api.v0alpha.DashboardLayout.prototype.getPanelsList = function() {
  return /** @type{!Array<!proto.api.v0alpha.DashboardPanel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v0alpha.DashboardPanel, 1));
};


/**
 * @param {!Array<!proto.api.v0alpha.DashboardPanel>} value
 * @return {!proto.api.v0alpha.DashboardLayout} returns this
*/
proto.api.v0alpha.DashboardLayout.prototype.setPanelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.v0alpha.DashboardPanel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v0alpha.DashboardPanel}
 */
proto.api.v0alpha.DashboardLayout.prototype.addPanels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.v0alpha.DashboardPanel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v0alpha.DashboardLayout} returns this
 */
proto.api.v0alpha.DashboardLayout.prototype.clearPanelsList = function() {
  return this.setPanelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DashboardPanel.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DashboardPanel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DashboardPanel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardPanel.toObject = function(includeInstance, msg) {
  var f, obj = {
    panelSource: (f = msg.getPanelSource()) && proto.api.v0alpha.PanelSource.toObject(includeInstance, f),
    rowLength: jspb.Message.getFieldWithDefault(msg, 2, 0),
    columnLength: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rowStart: jspb.Message.getFieldWithDefault(msg, 4, 0),
    columnStart: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DashboardPanel}
 */
proto.api.v0alpha.DashboardPanel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DashboardPanel;
  return proto.api.v0alpha.DashboardPanel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DashboardPanel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DashboardPanel}
 */
proto.api.v0alpha.DashboardPanel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.v0alpha.PanelSource;
      reader.readMessage(value,proto.api.v0alpha.PanelSource.deserializeBinaryFromReader);
      msg.setPanelSource(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRowLength(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setColumnLength(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRowStart(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setColumnStart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DashboardPanel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DashboardPanel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DashboardPanel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardPanel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPanelSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.v0alpha.PanelSource.serializeBinaryToWriter
    );
  }
  f = message.getRowLength();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getColumnLength();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRowStart();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getColumnStart();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional PanelSource panel_source = 1;
 * @return {?proto.api.v0alpha.PanelSource}
 */
proto.api.v0alpha.DashboardPanel.prototype.getPanelSource = function() {
  return /** @type{?proto.api.v0alpha.PanelSource} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.PanelSource, 1));
};


/**
 * @param {?proto.api.v0alpha.PanelSource|undefined} value
 * @return {!proto.api.v0alpha.DashboardPanel} returns this
*/
proto.api.v0alpha.DashboardPanel.prototype.setPanelSource = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DashboardPanel} returns this
 */
proto.api.v0alpha.DashboardPanel.prototype.clearPanelSource = function() {
  return this.setPanelSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DashboardPanel.prototype.hasPanelSource = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 row_length = 2;
 * @return {number}
 */
proto.api.v0alpha.DashboardPanel.prototype.getRowLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DashboardPanel} returns this
 */
proto.api.v0alpha.DashboardPanel.prototype.setRowLength = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 column_length = 3;
 * @return {number}
 */
proto.api.v0alpha.DashboardPanel.prototype.getColumnLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DashboardPanel} returns this
 */
proto.api.v0alpha.DashboardPanel.prototype.setColumnLength = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 row_start = 4;
 * @return {number}
 */
proto.api.v0alpha.DashboardPanel.prototype.getRowStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DashboardPanel} returns this
 */
proto.api.v0alpha.DashboardPanel.prototype.setRowStart = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 column_start = 5;
 * @return {number}
 */
proto.api.v0alpha.DashboardPanel.prototype.getColumnStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v0alpha.DashboardPanel} returns this
 */
proto.api.v0alpha.DashboardPanel.prototype.setColumnStart = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.v0alpha.PanelSource.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api.v0alpha.PanelSource.PanelTypeCase = {
  PANEL_TYPE_NOT_SET: 0,
  INSIGHT_ID: 1,
  LEGACY_INSIGHT_ID: 2
};

/**
 * @return {proto.api.v0alpha.PanelSource.PanelTypeCase}
 */
proto.api.v0alpha.PanelSource.prototype.getPanelTypeCase = function() {
  return /** @type {proto.api.v0alpha.PanelSource.PanelTypeCase} */(jspb.Message.computeOneofCase(this, proto.api.v0alpha.PanelSource.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.PanelSource.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.PanelSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.PanelSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.PanelSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    insightId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    legacyInsightId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.PanelSource}
 */
proto.api.v0alpha.PanelSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.PanelSource;
  return proto.api.v0alpha.PanelSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.PanelSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.PanelSource}
 */
proto.api.v0alpha.PanelSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInsightId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLegacyInsightId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.PanelSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.PanelSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.PanelSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.PanelSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string insight_id = 1;
 * @return {string}
 */
proto.api.v0alpha.PanelSource.prototype.getInsightId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.PanelSource} returns this
 */
proto.api.v0alpha.PanelSource.prototype.setInsightId = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.api.v0alpha.PanelSource.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.v0alpha.PanelSource} returns this
 */
proto.api.v0alpha.PanelSource.prototype.clearInsightId = function() {
  return jspb.Message.setOneofField(this, 1, proto.api.v0alpha.PanelSource.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.PanelSource.prototype.hasInsightId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string legacy_insight_id = 2;
 * @return {string}
 */
proto.api.v0alpha.PanelSource.prototype.getLegacyInsightId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.PanelSource} returns this
 */
proto.api.v0alpha.PanelSource.prototype.setLegacyInsightId = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.v0alpha.PanelSource.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.v0alpha.PanelSource} returns this
 */
proto.api.v0alpha.PanelSource.prototype.clearLegacyInsightId = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.v0alpha.PanelSource.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.PanelSource.prototype.hasLegacyInsightId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.Dashboard.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.Dashboard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.Dashboard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.Dashboard.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    layout: (f = msg.getLayout()) && proto.api.v0alpha.DashboardLayout.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.api.v0alpha.DashboardView.toObject(includeInstance, f),
    type: (f = msg.getType()) && proto.api.v0alpha.DashboardType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.Dashboard}
 */
proto.api.v0alpha.Dashboard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.Dashboard;
  return proto.api.v0alpha.Dashboard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.Dashboard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.Dashboard}
 */
proto.api.v0alpha.Dashboard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.api.v0alpha.DashboardLayout;
      reader.readMessage(value,proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 5:
      var value = new proto.api.v0alpha.DashboardView;
      reader.readMessage(value,proto.api.v0alpha.DashboardView.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 6:
      var value = new proto.api.v0alpha.DashboardType;
      reader.readMessage(value,proto.api.v0alpha.DashboardType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.Dashboard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.Dashboard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.Dashboard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.Dashboard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.v0alpha.DashboardView.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.v0alpha.DashboardType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.Dashboard.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.Dashboard} returns this
 */
proto.api.v0alpha.Dashboard.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.v0alpha.Dashboard.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.Dashboard} returns this
 */
proto.api.v0alpha.Dashboard.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.v0alpha.Dashboard.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.Dashboard} returns this
 */
proto.api.v0alpha.Dashboard.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional DashboardLayout layout = 4;
 * @return {?proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.Dashboard.prototype.getLayout = function() {
  return /** @type{?proto.api.v0alpha.DashboardLayout} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardLayout, 4));
};


/**
 * @param {?proto.api.v0alpha.DashboardLayout|undefined} value
 * @return {!proto.api.v0alpha.Dashboard} returns this
*/
proto.api.v0alpha.Dashboard.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.Dashboard} returns this
 */
proto.api.v0alpha.Dashboard.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.Dashboard.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DashboardView view = 5;
 * @return {?proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.Dashboard.prototype.getView = function() {
  return /** @type{?proto.api.v0alpha.DashboardView} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardView, 5));
};


/**
 * @param {?proto.api.v0alpha.DashboardView|undefined} value
 * @return {!proto.api.v0alpha.Dashboard} returns this
*/
proto.api.v0alpha.Dashboard.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.Dashboard} returns this
 */
proto.api.v0alpha.Dashboard.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.Dashboard.prototype.hasView = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DashboardType type = 6;
 * @return {?proto.api.v0alpha.DashboardType}
 */
proto.api.v0alpha.Dashboard.prototype.getType = function() {
  return /** @type{?proto.api.v0alpha.DashboardType} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardType, 6));
};


/**
 * @param {?proto.api.v0alpha.DashboardType|undefined} value
 * @return {!proto.api.v0alpha.Dashboard} returns this
*/
proto.api.v0alpha.Dashboard.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.Dashboard} returns this
 */
proto.api.v0alpha.Dashboard.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.Dashboard.prototype.hasType = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.v0alpha.DashboardType.oneofGroups_ = [[6,7]];

/**
 * @enum {number}
 */
proto.api.v0alpha.DashboardType.TypeCase = {
  TYPE_NOT_SET: 0,
  HISTORIC: 6,
  REAL_TIME: 7
};

/**
 * @return {proto.api.v0alpha.DashboardType.TypeCase}
 */
proto.api.v0alpha.DashboardType.prototype.getTypeCase = function() {
  return /** @type {proto.api.v0alpha.DashboardType.TypeCase} */(jspb.Message.computeOneofCase(this, proto.api.v0alpha.DashboardType.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DashboardType.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DashboardType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DashboardType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardType.toObject = function(includeInstance, msg) {
  var f, obj = {
    historic: (f = msg.getHistoric()) && proto.api.v0alpha.HistoricConfig.toObject(includeInstance, f),
    realTime: (f = msg.getRealTime()) && proto.api.v0alpha.RealTimeConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DashboardType}
 */
proto.api.v0alpha.DashboardType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DashboardType;
  return proto.api.v0alpha.DashboardType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DashboardType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DashboardType}
 */
proto.api.v0alpha.DashboardType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new proto.api.v0alpha.HistoricConfig;
      reader.readMessage(value,proto.api.v0alpha.HistoricConfig.deserializeBinaryFromReader);
      msg.setHistoric(value);
      break;
    case 7:
      var value = new proto.api.v0alpha.RealTimeConfig;
      reader.readMessage(value,proto.api.v0alpha.RealTimeConfig.deserializeBinaryFromReader);
      msg.setRealTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DashboardType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DashboardType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DashboardType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHistoric();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.v0alpha.HistoricConfig.serializeBinaryToWriter
    );
  }
  f = message.getRealTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api.v0alpha.RealTimeConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional HistoricConfig historic = 6;
 * @return {?proto.api.v0alpha.HistoricConfig}
 */
proto.api.v0alpha.DashboardType.prototype.getHistoric = function() {
  return /** @type{?proto.api.v0alpha.HistoricConfig} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.HistoricConfig, 6));
};


/**
 * @param {?proto.api.v0alpha.HistoricConfig|undefined} value
 * @return {!proto.api.v0alpha.DashboardType} returns this
*/
proto.api.v0alpha.DashboardType.prototype.setHistoric = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api.v0alpha.DashboardType.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DashboardType} returns this
 */
proto.api.v0alpha.DashboardType.prototype.clearHistoric = function() {
  return this.setHistoric(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DashboardType.prototype.hasHistoric = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RealTimeConfig real_time = 7;
 * @return {?proto.api.v0alpha.RealTimeConfig}
 */
proto.api.v0alpha.DashboardType.prototype.getRealTime = function() {
  return /** @type{?proto.api.v0alpha.RealTimeConfig} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.RealTimeConfig, 7));
};


/**
 * @param {?proto.api.v0alpha.RealTimeConfig|undefined} value
 * @return {!proto.api.v0alpha.DashboardType} returns this
*/
proto.api.v0alpha.DashboardType.prototype.setRealTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api.v0alpha.DashboardType.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.DashboardType} returns this
 */
proto.api.v0alpha.DashboardType.prototype.clearRealTime = function() {
  return this.setRealTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.DashboardType.prototype.hasRealTime = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.v0alpha.HistoricConfig.oneofGroups_ = [[1,3]];

/**
 * @enum {number}
 */
proto.api.v0alpha.HistoricConfig.TimeSpanCase = {
  TIME_SPAN_NOT_SET: 0,
  TIME_SPAN_SIMPLE: 1,
  TIME_SPAN_RANGE: 3
};

/**
 * @return {proto.api.v0alpha.HistoricConfig.TimeSpanCase}
 */
proto.api.v0alpha.HistoricConfig.prototype.getTimeSpanCase = function() {
  return /** @type {proto.api.v0alpha.HistoricConfig.TimeSpanCase} */(jspb.Message.computeOneofCase(this, proto.api.v0alpha.HistoricConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.HistoricConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.HistoricConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.HistoricConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.HistoricConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeSpanSimple: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeSpanRange: (f = msg.getTimeSpanRange()) && proto.api.v0alpha.TimeSpan.Range.toObject(includeInstance, f),
    timeZone: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.HistoricConfig}
 */
proto.api.v0alpha.HistoricConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.HistoricConfig;
  return proto.api.v0alpha.HistoricConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.HistoricConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.HistoricConfig}
 */
proto.api.v0alpha.HistoricConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.v0alpha.TimeSpan.Interval} */ (reader.readEnum());
      msg.setTimeSpanSimple(value);
      break;
    case 3:
      var value = new proto.api.v0alpha.TimeSpan.Range;
      reader.readMessage(value,proto.api.v0alpha.TimeSpan.Range.deserializeBinaryFromReader);
      msg.setTimeSpanRange(value);
      break;
    case 4:
      var value = /** @type {!proto.api.commons.TimeZone} */ (reader.readEnum());
      msg.setTimeZone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.HistoricConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.HistoricConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.HistoricConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.HistoricConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.api.v0alpha.TimeSpan.Interval} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimeSpanRange();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.v0alpha.TimeSpan.Range.serializeBinaryToWriter
    );
  }
  f = message.getTimeZone();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional TimeSpan.Interval time_span_simple = 1;
 * @return {!proto.api.v0alpha.TimeSpan.Interval}
 */
proto.api.v0alpha.HistoricConfig.prototype.getTimeSpanSimple = function() {
  return /** @type {!proto.api.v0alpha.TimeSpan.Interval} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.v0alpha.TimeSpan.Interval} value
 * @return {!proto.api.v0alpha.HistoricConfig} returns this
 */
proto.api.v0alpha.HistoricConfig.prototype.setTimeSpanSimple = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.api.v0alpha.HistoricConfig.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.v0alpha.HistoricConfig} returns this
 */
proto.api.v0alpha.HistoricConfig.prototype.clearTimeSpanSimple = function() {
  return jspb.Message.setOneofField(this, 1, proto.api.v0alpha.HistoricConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.HistoricConfig.prototype.hasTimeSpanSimple = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TimeSpan.Range time_span_range = 3;
 * @return {?proto.api.v0alpha.TimeSpan.Range}
 */
proto.api.v0alpha.HistoricConfig.prototype.getTimeSpanRange = function() {
  return /** @type{?proto.api.v0alpha.TimeSpan.Range} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.TimeSpan.Range, 3));
};


/**
 * @param {?proto.api.v0alpha.TimeSpan.Range|undefined} value
 * @return {!proto.api.v0alpha.HistoricConfig} returns this
*/
proto.api.v0alpha.HistoricConfig.prototype.setTimeSpanRange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.v0alpha.HistoricConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.HistoricConfig} returns this
 */
proto.api.v0alpha.HistoricConfig.prototype.clearTimeSpanRange = function() {
  return this.setTimeSpanRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.HistoricConfig.prototype.hasTimeSpanRange = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional api.commons.TimeZone time_zone = 4;
 * @return {!proto.api.commons.TimeZone}
 */
proto.api.v0alpha.HistoricConfig.prototype.getTimeZone = function() {
  return /** @type {!proto.api.commons.TimeZone} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.api.commons.TimeZone} value
 * @return {!proto.api.v0alpha.HistoricConfig} returns this
 */
proto.api.v0alpha.HistoricConfig.prototype.setTimeZone = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.RealTimeConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.RealTimeConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.RealTimeConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RealTimeConfig.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.RealTimeConfig}
 */
proto.api.v0alpha.RealTimeConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.RealTimeConfig;
  return proto.api.v0alpha.RealTimeConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.RealTimeConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.RealTimeConfig}
 */
proto.api.v0alpha.RealTimeConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.RealTimeConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.RealTimeConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.RealTimeConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.RealTimeConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    layout: (f = msg.getLayout()) && proto.api.v0alpha.DashboardLayout.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.api.v0alpha.DashboardView.toObject(includeInstance, f),
    type: (f = msg.getType()) && proto.api.v0alpha.DashboardType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateDashboardRequest}
 */
proto.api.v0alpha.UpdateDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateDashboardRequest;
  return proto.api.v0alpha.UpdateDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateDashboardRequest}
 */
proto.api.v0alpha.UpdateDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.api.v0alpha.DashboardLayout;
      reader.readMessage(value,proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 5:
      var value = new proto.api.v0alpha.DashboardView;
      reader.readMessage(value,proto.api.v0alpha.DashboardView.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 6:
      var value = new proto.api.v0alpha.DashboardType;
      reader.readMessage(value,proto.api.v0alpha.DashboardType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.v0alpha.DashboardView.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.v0alpha.DashboardType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional DashboardLayout layout = 4;
 * @return {?proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.getLayout = function() {
  return /** @type{?proto.api.v0alpha.DashboardLayout} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardLayout, 4));
};


/**
 * @param {?proto.api.v0alpha.DashboardLayout|undefined} value
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
*/
proto.api.v0alpha.UpdateDashboardRequest.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DashboardView view = 5;
 * @return {?proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.getView = function() {
  return /** @type{?proto.api.v0alpha.DashboardView} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardView, 5));
};


/**
 * @param {?proto.api.v0alpha.DashboardView|undefined} value
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
*/
proto.api.v0alpha.UpdateDashboardRequest.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.hasView = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DashboardType type = 6;
 * @return {?proto.api.v0alpha.DashboardType}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.getType = function() {
  return /** @type{?proto.api.v0alpha.DashboardType} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardType, 6));
};


/**
 * @param {?proto.api.v0alpha.DashboardType|undefined} value
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
*/
proto.api.v0alpha.UpdateDashboardRequest.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateDashboardRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateStandardDashboardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateStandardDashboardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    layout: (f = msg.getLayout()) && proto.api.v0alpha.DashboardLayout.toObject(includeInstance, f),
    view: (f = msg.getView()) && proto.api.v0alpha.DashboardView.toObject(includeInstance, f),
    type: (f = msg.getType()) && proto.api.v0alpha.DashboardType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateStandardDashboardRequest;
  return proto.api.v0alpha.UpdateStandardDashboardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new proto.api.v0alpha.DashboardLayout;
      reader.readMessage(value,proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    case 6:
      var value = new proto.api.v0alpha.DashboardView;
      reader.readMessage(value,proto.api.v0alpha.DashboardView.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 7:
      var value = new proto.api.v0alpha.DashboardType;
      reader.readMessage(value,proto.api.v0alpha.DashboardType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateStandardDashboardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.v0alpha.DashboardView.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api.v0alpha.DashboardType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dashboard_id = 2;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional DashboardLayout layout = 5;
 * @return {?proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.getLayout = function() {
  return /** @type{?proto.api.v0alpha.DashboardLayout} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardLayout, 5));
};


/**
 * @param {?proto.api.v0alpha.DashboardLayout|undefined} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
*/
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DashboardView view = 6;
 * @return {?proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.getView = function() {
  return /** @type{?proto.api.v0alpha.DashboardView} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardView, 6));
};


/**
 * @param {?proto.api.v0alpha.DashboardView|undefined} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
*/
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.hasView = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DashboardType type = 7;
 * @return {?proto.api.v0alpha.DashboardType}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.getType = function() {
  return /** @type{?proto.api.v0alpha.DashboardType} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardType, 7));
};


/**
 * @param {?proto.api.v0alpha.DashboardType|undefined} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
*/
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateStandardDashboardRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest}
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest;
  return proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest}
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardTitleAndDescriptionRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest;
  return proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardTitleAndDescriptionRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateDashboardLayoutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateDashboardLayoutRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    layout: (f = msg.getLayout()) && proto.api.v0alpha.DashboardLayout.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateDashboardLayoutRequest}
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateDashboardLayoutRequest;
  return proto.api.v0alpha.UpdateDashboardLayoutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateDashboardLayoutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateDashboardLayoutRequest}
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = new proto.api.v0alpha.DashboardLayout;
      reader.readMessage(value,proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateDashboardLayoutRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateDashboardLayoutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardLayoutRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DashboardLayout layout = 2;
 * @return {?proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.getLayout = function() {
  return /** @type{?proto.api.v0alpha.DashboardLayout} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardLayout, 2));
};


/**
 * @param {?proto.api.v0alpha.DashboardLayout|undefined} value
 * @return {!proto.api.v0alpha.UpdateDashboardLayoutRequest} returns this
*/
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateDashboardLayoutRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateDashboardLayoutRequest.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    layout: (f = msg.getLayout()) && proto.api.v0alpha.DashboardLayout.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateStandardDashboardLayoutRequest;
  return proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = new proto.api.v0alpha.DashboardLayout;
      reader.readMessage(value,proto.api.v0alpha.DashboardLayout.deserializeBinaryFromReader);
      msg.setLayout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLayout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.v0alpha.DashboardLayout.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DashboardLayout layout = 2;
 * @return {?proto.api.v0alpha.DashboardLayout}
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.getLayout = function() {
  return /** @type{?proto.api.v0alpha.DashboardLayout} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardLayout, 2));
};


/**
 * @param {?proto.api.v0alpha.DashboardLayout|undefined} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest} returns this
*/
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.setLayout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardLayoutRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.clearLayout = function() {
  return this.setLayout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateStandardDashboardLayoutRequest.prototype.hasLayout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateDashboardViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateDashboardViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    view: (f = msg.getView()) && proto.api.v0alpha.DashboardView.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateDashboardViewRequest}
 */
proto.api.v0alpha.UpdateDashboardViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateDashboardViewRequest;
  return proto.api.v0alpha.UpdateDashboardViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateDashboardViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateDashboardViewRequest}
 */
proto.api.v0alpha.UpdateDashboardViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = new proto.api.v0alpha.DashboardView;
      reader.readMessage(value,proto.api.v0alpha.DashboardView.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateDashboardViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateDashboardViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateDashboardViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.v0alpha.DashboardView.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateDashboardViewRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DashboardView view = 2;
 * @return {?proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.getView = function() {
  return /** @type{?proto.api.v0alpha.DashboardView} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardView, 2));
};


/**
 * @param {?proto.api.v0alpha.DashboardView|undefined} value
 * @return {!proto.api.v0alpha.UpdateDashboardViewRequest} returns this
*/
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateDashboardViewRequest} returns this
 */
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateDashboardViewRequest.prototype.hasView = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.UpdateStandardDashboardViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.UpdateStandardDashboardViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    dashboardId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    view: (f = msg.getView()) && proto.api.v0alpha.DashboardView.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardViewRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.UpdateStandardDashboardViewRequest;
  return proto.api.v0alpha.UpdateStandardDashboardViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardViewRequest}
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDashboardId(value);
      break;
    case 2:
      var value = new proto.api.v0alpha.DashboardView;
      reader.readMessage(value,proto.api.v0alpha.DashboardView.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.UpdateStandardDashboardViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.UpdateStandardDashboardViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDashboardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.v0alpha.DashboardView.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dashboard_id = 1;
 * @return {string}
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.getDashboardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardViewRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.setDashboardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DashboardView view = 2;
 * @return {?proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.getView = function() {
  return /** @type{?proto.api.v0alpha.DashboardView} */ (
    jspb.Message.getWrapperField(this, proto.api.v0alpha.DashboardView, 2));
};


/**
 * @param {?proto.api.v0alpha.DashboardView|undefined} value
 * @return {!proto.api.v0alpha.UpdateStandardDashboardViewRequest} returns this
*/
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.setView = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.UpdateStandardDashboardViewRequest} returns this
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.clearView = function() {
  return this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.UpdateStandardDashboardViewRequest.prototype.hasView = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v0alpha.DashboardView.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.DashboardView.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.DashboardView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.DashboardView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardView.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.DashboardView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.DashboardView;
  return proto.api.v0alpha.DashboardView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.DashboardView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.DashboardView}
 */
proto.api.v0alpha.DashboardView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrgIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.DashboardView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.DashboardView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.DashboardView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.DashboardView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string org_ids = 2;
 * @return {!Array<string>}
 */
proto.api.v0alpha.DashboardView.prototype.getOrgIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.v0alpha.DashboardView} returns this
 */
proto.api.v0alpha.DashboardView.prototype.setOrgIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.v0alpha.DashboardView} returns this
 */
proto.api.v0alpha.DashboardView.prototype.addOrgIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v0alpha.DashboardView} returns this
 */
proto.api.v0alpha.DashboardView.prototype.clearOrgIdsList = function() {
  return this.setOrgIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.TimeSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.TimeSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.TimeSpan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.TimeSpan.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.TimeSpan}
 */
proto.api.v0alpha.TimeSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.TimeSpan;
  return proto.api.v0alpha.TimeSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.TimeSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.TimeSpan}
 */
proto.api.v0alpha.TimeSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.TimeSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.TimeSpan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.TimeSpan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.TimeSpan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.v0alpha.TimeSpan.Interval = {
  TODAY: 0,
  YESTERDAY: 1,
  LAST_30_DAYS: 2,
  MONTH_TO_DATE: 3,
  LAST_2_WEEKS: 4,
  THIS_WEEK: 5,
  THIS_MONTH: 6,
  THIS_DAY_LAST_WEEK: 7,
  PREVIOUS_MONTH: 8
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v0alpha.TimeSpan.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v0alpha.TimeSpan.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v0alpha.TimeSpan.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.TimeSpan.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = msg.getStart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v0alpha.TimeSpan.Range}
 */
proto.api.v0alpha.TimeSpan.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v0alpha.TimeSpan.Range;
  return proto.api.v0alpha.TimeSpan.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v0alpha.TimeSpan.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v0alpha.TimeSpan.Range}
 */
proto.api.v0alpha.TimeSpan.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v0alpha.TimeSpan.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v0alpha.TimeSpan.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v0alpha.TimeSpan.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v0alpha.TimeSpan.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.v0alpha.TimeSpan.Range.prototype.getStart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.v0alpha.TimeSpan.Range} returns this
*/
proto.api.v0alpha.TimeSpan.Range.prototype.setStart = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.TimeSpan.Range} returns this
 */
proto.api.v0alpha.TimeSpan.Range.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.TimeSpan.Range.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.v0alpha.TimeSpan.Range.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.v0alpha.TimeSpan.Range} returns this
*/
proto.api.v0alpha.TimeSpan.Range.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v0alpha.TimeSpan.Range} returns this
 */
proto.api.v0alpha.TimeSpan.Range.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v0alpha.TimeSpan.Range.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.api.v0alpha);
