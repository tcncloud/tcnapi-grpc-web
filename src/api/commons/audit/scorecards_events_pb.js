// source: api/commons/audit/scorecards_events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_acd_pb = require('../../../api/commons/acd_pb.js');
goog.object.extend(proto, api_commons_acd_pb);
var api_commons_scorecards_pb = require('../../../api/commons/scorecards_pb.js');
goog.object.extend(proto, api_commons_scorecards_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCloneScorecardEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateCategoryEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateEvaluationEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateScorecardEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateSectionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.MetadataCase', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsDeleteCategoryEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsDeleteEvaluationEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsDeleteQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsDeleteScorecardEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsDeleteSectionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsUpdateCategoryEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsUpdateEvaluationEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsUpdateQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsUpdateScorecardEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent', null, global);
goog.exportSymbol('proto.api.commons.audit.ScorecardsUpdateSectionEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsUpdateQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsUpdateQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsUpdateQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.audit.ScorecardsDeleteQuestionEvent.repeatedFields_, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsDeleteQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsDeleteQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsDeleteQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateScorecardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateScorecardEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateScorecardEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsUpdateScorecardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsUpdateScorecardEvent.displayName = 'proto.api.commons.audit.ScorecardsUpdateScorecardEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsDeleteScorecardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsDeleteScorecardEvent.displayName = 'proto.api.commons.audit.ScorecardsDeleteScorecardEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCloneScorecardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCloneScorecardEvent.displayName = 'proto.api.commons.audit.ScorecardsCloneScorecardEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateEvaluationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateEvaluationEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateEvaluationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsUpdateEvaluationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.displayName = 'proto.api.commons.audit.ScorecardsUpdateEvaluationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsDeleteEvaluationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.displayName = 'proto.api.commons.audit.ScorecardsDeleteEvaluationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateSectionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateSectionEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateSectionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsUpdateSectionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsUpdateSectionEvent.displayName = 'proto.api.commons.audit.ScorecardsUpdateSectionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsDeleteSectionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsDeleteSectionEvent.displayName = 'proto.api.commons.audit.ScorecardsDeleteSectionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateCategoryEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateCategoryEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateCategoryEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsUpdateCategoryEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsUpdateCategoryEvent.displayName = 'proto.api.commons.audit.ScorecardsUpdateCategoryEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsDeleteCategoryEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsDeleteCategoryEvent.displayName = 'proto.api.commons.audit.ScorecardsDeleteCategoryEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.displayName = 'proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.oneofGroups_);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.displayName = 'proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.displayName = 'proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.displayName = 'proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
authorId: jspb.Message.getFieldWithDefault(msg, 1, ""),
questionText: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
question: (f = msg.getQuestion()) && api_commons_scorecards_pb.Question.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateQuestionEvent}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateQuestionEvent;
  return proto.api.commons.audit.ScorecardsCreateQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateQuestionEvent}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new api_commons_scorecards_pb.Question;
      reader.readMessage(value,api_commons_scorecards_pb.Question.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      api_commons_scorecards_pb.Question.serializeBinaryToWriter
    );
  }
};


/**
 * optional string author_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_text = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.getQuestionText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.setQuestionText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional api.commons.Question question = 4;
 * @return {?proto.api.commons.Question}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.getQuestion = function() {
  return /** @type{?proto.api.commons.Question} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Question, 4));
};


/**
 * @param {?proto.api.commons.Question|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.setQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.clearQuestion = function() {
  return this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateQuestionEvent.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsUpdateQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
questionText: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
question: (f = msg.getQuestion()) && api_commons_scorecards_pb.Question.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsUpdateQuestionEvent;
  return proto.api.commons.audit.ScorecardsUpdateQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.Question;
      reader.readMessage(value,api_commons_scorecards_pb.Question.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsUpdateQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.Question.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_text = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.getQuestionText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.setQuestionText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 4;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 4));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional api.commons.Question question = 5;
 * @return {?proto.api.commons.Question}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.getQuestion = function() {
  return /** @type{?proto.api.commons.Question} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Question, 5));
};


/**
 * @param {?proto.api.commons.Question|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.setQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.clearQuestion = function() {
  return this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateQuestionEvent.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsDeleteQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
questionText: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
categoryIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
question: (f = msg.getQuestion()) && api_commons_scorecards_pb.Question.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsDeleteQuestionEvent;
  return proto.api.commons.audit.ScorecardsDeleteQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategoryIds(values[i]);
      }
      break;
    case 5:
      var value = new api_commons_scorecards_pb.Question;
      reader.readMessage(value,api_commons_scorecards_pb.Question.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsDeleteQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategoryIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      4,
      f
    );
  }
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.Question.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_text = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.getQuestionText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.setQuestionText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated int64 category_ids = 4;
 * @return {!Array<number>}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.getCategoryIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.setCategoryIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.addCategoryIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.clearCategoryIdsList = function() {
  return this.setCategoryIdsList([]);
};


/**
 * optional api.commons.Question question = 5;
 * @return {?proto.api.commons.Question}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.getQuestion = function() {
  return /** @type{?proto.api.commons.Question} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Question, 5));
};


/**
 * @param {?proto.api.commons.Question|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.setQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.clearQuestion = function() {
  return this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteQuestionEvent.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateScorecardEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
authorId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
passScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
scoreType: jspb.Message.getFieldWithDefault(msg, 5, 0),
evaluationType: jspb.Message.getFieldWithDefault(msg, 6, 0),
scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateScorecardEvent;
  return proto.api.commons.audit.ScorecardsCreateScorecardEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPassScore(value);
      break;
    case 5:
      var value = /** @type {!proto.api.commons.ScoreType} */ (reader.readEnum());
      msg.setScoreType(value);
      break;
    case 6:
      var value = /** @type {!proto.api.commons.EvaluationType} */ (reader.readEnum());
      msg.setEvaluationType(value);
      break;
    case 7:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateScorecardEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassScore();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getScoreType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEvaluationType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional string author_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double pass_score = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.getPassScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.setPassScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional api.commons.ScoreType score_type = 5;
 * @return {!proto.api.commons.ScoreType}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.getScoreType = function() {
  return /** @type {!proto.api.commons.ScoreType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api.commons.ScoreType} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.setScoreType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional api.commons.EvaluationType evaluation_type = 6;
 * @return {!proto.api.commons.EvaluationType}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.getEvaluationType = function() {
  return /** @type {!proto.api.commons.EvaluationType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.api.commons.EvaluationType} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.setEvaluationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional api.commons.Scorecard scorecard = 7;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 7));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateScorecardEvent.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsUpdateScorecardEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
passScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
scoreType: jspb.Message.getFieldWithDefault(msg, 5, 0),
evaluationType: jspb.Message.getFieldWithDefault(msg, 6, 0),
allowFeedback: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
state: jspb.Message.getFieldWithDefault(msg, 8, 0),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsUpdateScorecardEvent;
  return proto.api.commons.audit.ScorecardsUpdateScorecardEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPassScore(value);
      break;
    case 5:
      var value = /** @type {!proto.api.commons.ScoreType} */ (reader.readEnum());
      msg.setScoreType(value);
      break;
    case 6:
      var value = /** @type {!proto.api.commons.EvaluationType} */ (reader.readEnum());
      msg.setEvaluationType(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowFeedback(value);
      break;
    case 8:
      var value = /** @type {!proto.api.commons.ScorecardState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 9:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 10:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsUpdateScorecardEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassScore();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getScoreType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEvaluationType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getAllowFeedback();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double pass_score = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getPassScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setPassScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional api.commons.ScoreType score_type = 5;
 * @return {!proto.api.commons.ScoreType}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getScoreType = function() {
  return /** @type {!proto.api.commons.ScoreType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api.commons.ScoreType} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setScoreType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional api.commons.EvaluationType evaluation_type = 6;
 * @return {!proto.api.commons.EvaluationType}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getEvaluationType = function() {
  return /** @type {!proto.api.commons.EvaluationType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.api.commons.EvaluationType} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setEvaluationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool allow_feedback = 7;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getAllowFeedback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setAllowFeedback = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional api.commons.ScorecardState state = 8;
 * @return {!proto.api.commons.ScorecardState}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getState = function() {
  return /** @type {!proto.api.commons.ScorecardState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.api.commons.ScorecardState} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 9;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 9));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional api.commons.Scorecard scorecard = 10;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 10));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardEvent.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsDeleteScorecardEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
passScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
scoreType: jspb.Message.getFieldWithDefault(msg, 5, 0),
evaluationType: jspb.Message.getFieldWithDefault(msg, 6, 0),
state: jspb.Message.getFieldWithDefault(msg, 7, 0),
scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsDeleteScorecardEvent;
  return proto.api.commons.audit.ScorecardsDeleteScorecardEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPassScore(value);
      break;
    case 5:
      var value = /** @type {!proto.api.commons.ScoreType} */ (reader.readEnum());
      msg.setScoreType(value);
      break;
    case 6:
      var value = /** @type {!proto.api.commons.EvaluationType} */ (reader.readEnum());
      msg.setEvaluationType(value);
      break;
    case 7:
      var value = /** @type {!proto.api.commons.ScorecardState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 8:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsDeleteScorecardEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassScore();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getScoreType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEvaluationType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double pass_score = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getPassScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setPassScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional api.commons.ScoreType score_type = 5;
 * @return {!proto.api.commons.ScoreType}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getScoreType = function() {
  return /** @type {!proto.api.commons.ScoreType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api.commons.ScoreType} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setScoreType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional api.commons.EvaluationType evaluation_type = 6;
 * @return {!proto.api.commons.EvaluationType}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getEvaluationType = function() {
  return /** @type {!proto.api.commons.EvaluationType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.api.commons.EvaluationType} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setEvaluationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional api.commons.ScorecardState state = 7;
 * @return {!proto.api.commons.ScorecardState}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getState = function() {
  return /** @type {!proto.api.commons.ScorecardState} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.api.commons.ScorecardState} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional api.commons.Scorecard scorecard = 8;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 8));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardEvent.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCloneScorecardEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
authorId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
passScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
scoreType: jspb.Message.getFieldWithDefault(msg, 5, 0),
evaluationType: jspb.Message.getFieldWithDefault(msg, 6, 0),
scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCloneScorecardEvent;
  return proto.api.commons.audit.ScorecardsCloneScorecardEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPassScore(value);
      break;
    case 5:
      var value = /** @type {!proto.api.commons.ScoreType} */ (reader.readEnum());
      msg.setScoreType(value);
      break;
    case 6:
      var value = /** @type {!proto.api.commons.EvaluationType} */ (reader.readEnum());
      msg.setEvaluationType(value);
      break;
    case 7:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCloneScorecardEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassScore();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getScoreType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEvaluationType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional string author_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double pass_score = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.getPassScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.setPassScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional api.commons.ScoreType score_type = 5;
 * @return {!proto.api.commons.ScoreType}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.getScoreType = function() {
  return /** @type {!proto.api.commons.ScoreType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api.commons.ScoreType} value
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.setScoreType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional api.commons.EvaluationType evaluation_type = 6;
 * @return {!proto.api.commons.EvaluationType}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.getEvaluationType = function() {
  return /** @type {!proto.api.commons.EvaluationType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.api.commons.EvaluationType} value
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.setEvaluationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional api.commons.Scorecard scorecard = 7;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 7));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
*/
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCloneScorecardEvent} returns this
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCloneScorecardEvent.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateEvaluationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
agentUserId: jspb.Message.getFieldWithDefault(msg, 4, ""),
callSid: jspb.Message.getFieldWithDefault(msg, 5, 0),
evaluation: (f = msg.getEvaluation()) && api_commons_scorecards_pb.Evaluation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateEvaluationEvent;
  return proto.api.commons.audit.ScorecardsCreateEvaluationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScorerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentUserId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 6:
      var value = new api_commons_scorecards_pb.Evaluation;
      reader.readMessage(value,api_commons_scorecards_pb.Evaluation.deserializeBinaryFromReader);
      msg.setEvaluation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateEvaluationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorerId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAgentUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEvaluation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      api_commons_scorecards_pb.Evaluation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 evaluation_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 scorecard_id = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string scorer_id = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.getScorerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.setScorerId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string agent_user_id = 4;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.getAgentUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.setAgentUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 call_sid = 5;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional api.commons.Evaluation evaluation = 6;
 * @return {?proto.api.commons.Evaluation}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.getEvaluation = function() {
  return /** @type{?proto.api.commons.Evaluation} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Evaluation, 6));
};


/**
 * @param {?proto.api.commons.Evaluation|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.setEvaluation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.clearEvaluation = function() {
  return this.setEvaluation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationEvent.prototype.hasEvaluation = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
agentUserId: jspb.Message.getFieldWithDefault(msg, 4, ""),
callSid: jspb.Message.getFieldWithDefault(msg, 5, 0),
evaluation: (f = msg.getEvaluation()) && api_commons_scorecards_pb.Evaluation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsUpdateEvaluationEvent;
  return proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScorerId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentUserId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 6:
      var value = new api_commons_scorecards_pb.Evaluation;
      reader.readMessage(value,api_commons_scorecards_pb.Evaluation.deserializeBinaryFromReader);
      msg.setEvaluation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorerId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAgentUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEvaluation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      api_commons_scorecards_pb.Evaluation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 evaluation_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 scorecard_id = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string scorer_id = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.getScorerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.setScorerId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string agent_user_id = 4;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.getAgentUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.setAgentUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 call_sid = 5;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional api.commons.Evaluation evaluation = 6;
 * @return {?proto.api.commons.Evaluation}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.getEvaluation = function() {
  return /** @type{?proto.api.commons.Evaluation} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Evaluation, 6));
};


/**
 * @param {?proto.api.commons.Evaluation|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.setEvaluation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.clearEvaluation = function() {
  return this.setEvaluation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationEvent.prototype.hasEvaluation = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 2, 0),
userId: jspb.Message.getFieldWithDefault(msg, 3, ""),
agentUserId: jspb.Message.getFieldWithDefault(msg, 4, ""),
callSid: jspb.Message.getFieldWithDefault(msg, 5, 0),
evaluation: (f = msg.getEvaluation()) && api_commons_scorecards_pb.Evaluation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsDeleteEvaluationEvent;
  return proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentUserId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 6:
      var value = new api_commons_scorecards_pb.Evaluation;
      reader.readMessage(value,api_commons_scorecards_pb.Evaluation.deserializeBinaryFromReader);
      msg.setEvaluation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAgentUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEvaluation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      api_commons_scorecards_pb.Evaluation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 evaluation_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 scorecard_id = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string agent_user_id = 4;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.getAgentUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.setAgentUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 call_sid = 5;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional api.commons.Evaluation evaluation = 6;
 * @return {?proto.api.commons.Evaluation}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.getEvaluation = function() {
  return /** @type{?proto.api.commons.Evaluation} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Evaluation, 6));
};


/**
 * @param {?proto.api.commons.Evaluation|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.setEvaluation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.clearEvaluation = function() {
  return this.setEvaluation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationEvent.prototype.hasEvaluation = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateSectionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateSectionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
weight: jspb.Message.getFieldWithDefault(msg, 4, 0),
section: (f = msg.getSection()) && api_commons_scorecards_pb.Section.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateSectionEvent;
  return proto.api.commons.audit.ScorecardsCreateSectionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateSectionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.Section;
      reader.readMessage(value,api_commons_scorecards_pb.Section.deserializeBinaryFromReader);
      msg.setSection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateSectionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateSectionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getSection();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.Section.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 weight = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional api.commons.Section section = 5;
 * @return {?proto.api.commons.Section}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.getSection = function() {
  return /** @type{?proto.api.commons.Section} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Section, 5));
};


/**
 * @param {?proto.api.commons.Section|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.setSection = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.clearSection = function() {
  return this.setSection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateSectionEvent.prototype.hasSection = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsUpdateSectionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
weight: jspb.Message.getFieldWithDefault(msg, 4, 0),
sortOrder: jspb.Message.getFieldWithDefault(msg, 5, 0),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
section: (f = msg.getSection()) && api_commons_scorecards_pb.Section.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsUpdateSectionEvent;
  return proto.api.commons.audit.ScorecardsUpdateSectionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 6:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 7:
      var value = new api_commons_scorecards_pb.Section;
      reader.readMessage(value,api_commons_scorecards_pb.Section.deserializeBinaryFromReader);
      msg.setSection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsUpdateSectionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getSection();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      api_commons_scorecards_pb.Section.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 weight = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 sort_order = 5;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 6;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 6));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional api.commons.Section section = 7;
 * @return {?proto.api.commons.Section}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.getSection = function() {
  return /** @type{?proto.api.commons.Section} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Section, 7));
};


/**
 * @param {?proto.api.commons.Section|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.setSection = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.clearSection = function() {
  return this.setSection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateSectionEvent.prototype.hasSection = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsDeleteSectionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
weight: jspb.Message.getFieldWithDefault(msg, 4, 0),
section: (f = msg.getSection()) && api_commons_scorecards_pb.Section.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsDeleteSectionEvent;
  return proto.api.commons.audit.ScorecardsDeleteSectionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.Section;
      reader.readMessage(value,api_commons_scorecards_pb.Section.deserializeBinaryFromReader);
      msg.setSection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsDeleteSectionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getSection();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.Section.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 weight = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional api.commons.Section section = 5;
 * @return {?proto.api.commons.Section}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.getSection = function() {
  return /** @type{?proto.api.commons.Section} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Section, 5));
};


/**
 * @param {?proto.api.commons.Section|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.setSection = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteSectionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.clearSection = function() {
  return this.setSection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteSectionEvent.prototype.hasSection = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateCategoryEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
authorId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
category: (f = msg.getCategory()) && api_commons_scorecards_pb.Category.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateCategoryEvent;
  return proto.api.commons.audit.ScorecardsCreateCategoryEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.Category;
      reader.readMessage(value,api_commons_scorecards_pb.Category.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateCategoryEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional string author_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional api.commons.Category category = 5;
 * @return {?proto.api.commons.Category}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.getCategory = function() {
  return /** @type{?proto.api.commons.Category} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Category, 5));
};


/**
 * @param {?proto.api.commons.Category|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateCategoryEvent.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsUpdateCategoryEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
category: (f = msg.getCategory()) && api_commons_scorecards_pb.Category.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsUpdateCategoryEvent;
  return proto.api.commons.audit.ScorecardsUpdateCategoryEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.Category;
      reader.readMessage(value,api_commons_scorecards_pb.Category.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsUpdateCategoryEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 4;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 4));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional api.commons.Category category = 5;
 * @return {?proto.api.commons.Category}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.getCategory = function() {
  return /** @type{?proto.api.commons.Category} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Category, 5));
};


/**
 * @param {?proto.api.commons.Category|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateCategoryEvent.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsDeleteCategoryEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
title: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
deletedAt: (f = msg.getDeletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
category: (f = msg.getCategory()) && api_commons_scorecards_pb.Category.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsDeleteCategoryEvent;
  return proto.api.commons.audit.ScorecardsDeleteCategoryEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.Category;
      reader.readMessage(value,api_commons_scorecards_pb.Category.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsDeleteCategoryEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp deleted_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.getDeletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional api.commons.Category category = 5;
 * @return {?proto.api.commons.Category}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.getCategory = function() {
  return /** @type{?proto.api.commons.Category} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Category, 5));
};


/**
 * @param {?proto.api.commons.Category|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteCategoryEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteCategoryEvent.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationQuestionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
evaluationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardQuestionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
evaluationQuestion: (f = msg.getEvaluationQuestion()) && api_commons_scorecards_pb.EvaluationQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent;
  return proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationQuestionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardQuestionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.EvaluationQuestion;
      reader.readMessage(value,api_commons_scorecards_pb.EvaluationQuestion.deserializeBinaryFromReader);
      msg.setEvaluationQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEvaluationQuestion();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.EvaluationQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 evaluation_question_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.getEvaluationQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.setEvaluationQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 evaluation_id = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_question_id = 3;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.getScorecardQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.setScorecardQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional api.commons.EvaluationQuestion evaluation_question = 5;
 * @return {?proto.api.commons.EvaluationQuestion}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.getEvaluationQuestion = function() {
  return /** @type{?proto.api.commons.EvaluationQuestion} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.EvaluationQuestion, 5));
};


/**
 * @param {?proto.api.commons.EvaluationQuestion|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.setEvaluationQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.clearEvaluationQuestion = function() {
  return this.setEvaluationQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateEvaluationQuestionEvent.prototype.hasEvaluationQuestion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationQuestionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
evaluationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardQuestionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
skipped: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
points: jspb.Message.getFieldWithDefault(msg, 6, 0),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
evaluationQuestion: (f = msg.getEvaluationQuestion()) && api_commons_scorecards_pb.EvaluationQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent;
  return proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationQuestionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardQuestionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipped(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPoints(value);
      break;
    case 7:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 8:
      var value = new api_commons_scorecards_pb.EvaluationQuestion;
      reader.readMessage(value,api_commons_scorecards_pb.EvaluationQuestion.deserializeBinaryFromReader);
      msg.setEvaluationQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSkipped();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getEvaluationQuestion();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      api_commons_scorecards_pb.EvaluationQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 evaluation_question_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getEvaluationQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setEvaluationQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 evaluation_id = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_question_id = 3;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getScorecardQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setScorecardQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool skipped = 5;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getSkipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setSkipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int64 points = 6;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 7;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 7));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional api.commons.EvaluationQuestion evaluation_question = 8;
 * @return {?proto.api.commons.EvaluationQuestion}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.getEvaluationQuestion = function() {
  return /** @type{?proto.api.commons.EvaluationQuestion} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.EvaluationQuestion, 8));
};


/**
 * @param {?proto.api.commons.EvaluationQuestion|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.setEvaluationQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.clearEvaluationQuestion = function() {
  return this.setEvaluationQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateEvaluationQuestionEvent.prototype.hasEvaluationQuestion = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationQuestionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
evaluationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardQuestionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
evaluationQuestions: (f = msg.getEvaluationQuestions()) && api_commons_scorecards_pb.EvaluationQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent;
  return proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationQuestionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardQuestionId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = new api_commons_scorecards_pb.EvaluationQuestion;
      reader.readMessage(value,api_commons_scorecards_pb.EvaluationQuestion.deserializeBinaryFromReader);
      msg.setEvaluationQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEvaluationQuestions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_scorecards_pb.EvaluationQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 evaluation_question_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.getEvaluationQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.setEvaluationQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 evaluation_id = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_question_id = 3;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.getScorecardQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.setScorecardQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional api.commons.EvaluationQuestion evaluation_questions = 5;
 * @return {?proto.api.commons.EvaluationQuestion}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.getEvaluationQuestions = function() {
  return /** @type{?proto.api.commons.EvaluationQuestion} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.EvaluationQuestion, 5));
};


/**
 * @param {?proto.api.commons.EvaluationQuestion|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.setEvaluationQuestions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.clearEvaluationQuestions = function() {
  return this.setEvaluationQuestions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteEvaluationQuestionEvent.prototype.hasEvaluationQuestions = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
question: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
allowSkip: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
maxPoints: jspb.Message.getFieldWithDefault(msg, 5, 0),
allowMultiSelect: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
scorecardQuestion: (f = msg.getScorecardQuestion()) && api_commons_scorecards_pb.ScorecardQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent;
  return proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowSkip(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxPoints(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowMultiSelect(value);
      break;
    case 7:
      var value = new api_commons_scorecards_pb.ScorecardQuestion;
      reader.readMessage(value,api_commons_scorecards_pb.ScorecardQuestion.deserializeBinaryFromReader);
      msg.setScorecardQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAllowSkip();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMaxPoints();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAllowMultiSelect();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getScorecardQuestion();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      api_commons_scorecards_pb.ScorecardQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool allow_skip = 4;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.getAllowSkip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.setAllowSkip = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int64 max_points = 5;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.getMaxPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.setMaxPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool allow_multi_select = 6;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.getAllowMultiSelect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.setAllowMultiSelect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional api.commons.ScorecardQuestion scorecard_question = 7;
 * @return {?proto.api.commons.ScorecardQuestion}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.getScorecardQuestion = function() {
  return /** @type{?proto.api.commons.ScorecardQuestion} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.ScorecardQuestion, 7));
};


/**
 * @param {?proto.api.commons.ScorecardQuestion|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.setScorecardQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.clearScorecardQuestion = function() {
  return this.setScorecardQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateScorecardQuestionEvent.prototype.hasScorecardQuestion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
question: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
allowSkip: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
maxPoints: jspb.Message.getFieldWithDefault(msg, 5, 0),
allowMultiSelect: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
sortOrder: jspb.Message.getFieldWithDefault(msg, 7, 0),
updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
scorecardQuestion: (f = msg.getScorecardQuestion()) && api_commons_scorecards_pb.ScorecardQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent;
  return proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowSkip(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxPoints(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowMultiSelect(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 8:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 9:
      var value = new api_commons_scorecards_pb.ScorecardQuestion;
      reader.readMessage(value,api_commons_scorecards_pb.ScorecardQuestion.deserializeBinaryFromReader);
      msg.setScorecardQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAllowSkip();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMaxPoints();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAllowMultiSelect();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getScorecardQuestion();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      api_commons_scorecards_pb.ScorecardQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool allow_skip = 4;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getAllowSkip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setAllowSkip = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int64 max_points = 5;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getMaxPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setMaxPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool allow_multi_select = 6;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getAllowMultiSelect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setAllowMultiSelect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 sort_order = 7;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional google.protobuf.FieldMask update_mask = 8;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 8));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional api.commons.ScorecardQuestion scorecard_question = 9;
 * @return {?proto.api.commons.ScorecardQuestion}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.getScorecardQuestion = function() {
  return /** @type{?proto.api.commons.ScorecardQuestion} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.ScorecardQuestion, 9));
};


/**
 * @param {?proto.api.commons.ScorecardQuestion|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.setScorecardQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.clearScorecardQuestion = function() {
  return this.setScorecardQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsUpdateScorecardQuestionEvent.prototype.hasScorecardQuestion = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
question: jspb.Message.getFieldWithDefault(msg, 2, ""),
description: jspb.Message.getFieldWithDefault(msg, 3, ""),
allowSkip: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
maxPoints: jspb.Message.getFieldWithDefault(msg, 5, 0),
allowMultiSelect: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
scorecardQuestion: (f = msg.getScorecardQuestion()) && api_commons_scorecards_pb.ScorecardQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent;
  return proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowSkip(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxPoints(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowMultiSelect(value);
      break;
    case 7:
      var value = new api_commons_scorecards_pb.ScorecardQuestion;
      reader.readMessage(value,api_commons_scorecards_pb.ScorecardQuestion.deserializeBinaryFromReader);
      msg.setScorecardQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAllowSkip();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMaxPoints();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAllowMultiSelect();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getScorecardQuestion();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      api_commons_scorecards_pb.ScorecardQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question = 2;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool allow_skip = 4;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.getAllowSkip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.setAllowSkip = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int64 max_points = 5;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.getMaxPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.setMaxPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool allow_multi_select = 6;
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.getAllowMultiSelect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.setAllowMultiSelect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional api.commons.ScorecardQuestion scorecard_question = 7;
 * @return {?proto.api.commons.ScorecardQuestion}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.getScorecardQuestion = function() {
  return /** @type{?proto.api.commons.ScorecardQuestion} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.ScorecardQuestion, 7));
};


/**
 * @param {?proto.api.commons.ScorecardQuestion|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
*/
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.setScorecardQuestion = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent} returns this
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.clearScorecardQuestion = function() {
  return this.setScorecardQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsDeleteScorecardQuestionEvent.prototype.hasScorecardQuestion = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
autoEvaluationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 2, 0),
agentUserId: jspb.Message.getFieldWithDefault(msg, 3, ""),
callSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
callType: jspb.Message.getFieldWithDefault(msg, 5, 0),
transcriptSid: jspb.Message.getFieldWithDefault(msg, 6, 0),
riskLevel: jspb.Message.getFieldWithDefault(msg, 7, 0),
autoEvaluation: (f = msg.getAutoEvaluation()) && api_commons_scorecards_pb.AutoEvaluation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent;
  return proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoEvaluationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentUserId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 5:
      var value = /** @type {!proto.api.commons.CallType.Enum} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTranscriptSid(value);
      break;
    case 7:
      var value = /** @type {!proto.api.commons.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevel(value);
      break;
    case 8:
      var value = new api_commons_scorecards_pb.AutoEvaluation;
      reader.readMessage(value,api_commons_scorecards_pb.AutoEvaluation.deserializeBinaryFromReader);
      msg.setAutoEvaluation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAgentUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getTranscriptSid();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getRiskLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getAutoEvaluation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      api_commons_scorecards_pb.AutoEvaluation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 auto_evaluation_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getAutoEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setAutoEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 scorecard_id = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string agent_user_id = 3;
 * @return {string}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getAgentUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setAgentUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 call_sid = 4;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional api.commons.CallType.Enum call_type = 5;
 * @return {!proto.api.commons.CallType.Enum}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getCallType = function() {
  return /** @type {!proto.api.commons.CallType.Enum} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional int64 transcript_sid = 6;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getTranscriptSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setTranscriptSid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional api.commons.RiskLevel risk_level = 7;
 * @return {!proto.api.commons.RiskLevel}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getRiskLevel = function() {
  return /** @type {!proto.api.commons.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.api.commons.RiskLevel} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setRiskLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional api.commons.AutoEvaluation auto_evaluation = 8;
 * @return {?proto.api.commons.AutoEvaluation}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.getAutoEvaluation = function() {
  return /** @type{?proto.api.commons.AutoEvaluation} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.AutoEvaluation, 8));
};


/**
 * @param {?proto.api.commons.AutoEvaluation|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.setAutoEvaluation = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.clearAutoEvaluation = function() {
  return this.setAutoEvaluation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateAutoEvaluationEvent.prototype.hasAutoEvaluation = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.MetadataCase = {
  METADATA_NOT_SET: 0,
  CALL: 3,
  SMS: 4
};

/**
 * @return {proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.MetadataCase}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.getMetadataCase = function() {
  return /** @type {proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.MetadataCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
smartEvaluationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
transcriptSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
call: (f = msg.getCall()) && proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.toObject(includeInstance, f),
sms: (f = msg.getSms()) && proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent;
  return proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmartEvaluationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTranscriptSid(value);
      break;
    case 3:
      var value = new proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call;
      reader.readMessage(value,proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 4:
      var value = new proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms;
      reader.readMessage(value,proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSmartEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTranscriptSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.serializeBinaryToWriter
    );
  }
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.toObject = function(includeInstance, msg) {
  var f, obj = {
callSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
callType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call;
  return proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.CallType.Enum} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int64 call_sid = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call} returns this
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional api.commons.CallType.Enum call_type = 2;
 * @return {!proto.api.commons.CallType.Enum}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.prototype.getCallType = function() {
  return /** @type {!proto.api.commons.CallType.Enum} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call} returns this
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.toObject = function(includeInstance, msg) {
  var f, obj = {
conversationSid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms;
  return proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setConversationSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 conversation_sid = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.prototype.getConversationSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms} returns this
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms.prototype.setConversationSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 smart_evaluation_id = 1;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.getSmartEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.setSmartEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 transcript_sid = 2;
 * @return {number}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.getTranscriptSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.setTranscriptSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Call call = 3;
 * @return {?proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.getCall = function() {
  return /** @type{?proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call, 3));
};


/**
 * @param {?proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Call|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.setCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.hasCall = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Sms sms = 4;
 * @return {?proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.getSms = function() {
  return /** @type{?proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms, 4));
};


/**
 * @param {?proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.Sms|undefined} value
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} returns this
*/
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.setSms = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent} returns this
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.audit.ScorecardsCreateSmartEvaluationEvent.prototype.hasSms = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.api.commons.audit);
