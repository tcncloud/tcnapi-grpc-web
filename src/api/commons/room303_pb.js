// source: api/commons/room303.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.api.commons.ConfigPermissionEnum', null, global);
goog.exportSymbol('proto.api.commons.GlobalConfig', null, global);
goog.exportSymbol('proto.api.commons.Member', null, global);
goog.exportSymbol('proto.api.commons.Message', null, global);
goog.exportSymbol('proto.api.commons.MessageStat', null, global);
goog.exportSymbol('proto.api.commons.MessageStatus', null, global);
goog.exportSymbol('proto.api.commons.Room', null, global);
goog.exportSymbol('proto.api.commons.RoomConfig', null, global);
goog.exportSymbol('proto.api.commons.RoomStatus', null, global);
goog.exportSymbol('proto.api.commons.RoomType', null, global);
goog.exportSymbol('proto.api.commons.UserSid', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.UserSid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.UserSid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.UserSid.displayName = 'proto.api.commons.UserSid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Member = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Member, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Member.displayName = 'proto.api.commons.Member';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Room = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Room, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Room.displayName = 'proto.api.commons.Room';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Message.displayName = 'proto.api.commons.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.MessageStat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.MessageStat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.MessageStat.displayName = 'proto.api.commons.MessageStat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.GlobalConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.GlobalConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.GlobalConfig.displayName = 'proto.api.commons.GlobalConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.RoomConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.RoomConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.RoomConfig.displayName = 'proto.api.commons.RoomConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.UserSid.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.UserSid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.UserSid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.UserSid.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fullName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.UserSid}
 */
proto.api.commons.UserSid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.UserSid;
  return proto.api.commons.UserSid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.UserSid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.UserSid}
 */
proto.api.commons.UserSid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.UserSid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.UserSid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.UserSid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.UserSid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFullName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api.commons.UserSid.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.UserSid} returns this
 */
proto.api.commons.UserSid.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string full_name = 2;
 * @return {string}
 */
proto.api.commons.UserSid.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.UserSid} returns this
 */
proto.api.commons.UserSid.prototype.setFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.api.commons.UserSid.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.UserSid} returns this
 */
proto.api.commons.UserSid.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Member.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Member.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Member} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Member.toObject = function(includeInstance, msg) {
  var f, obj = {
    userSid: (f = msg.getUserSid()) && proto.api.commons.UserSid.toObject(includeInstance, f),
    addedBy: (f = msg.getAddedBy()) && proto.api.commons.UserSid.toObject(includeInstance, f),
    addedAt: (f = msg.getAddedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    roomId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    admin: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Member}
 */
proto.api.commons.Member.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Member;
  return proto.api.commons.Member.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Member} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Member}
 */
proto.api.commons.Member.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.commons.UserSid;
      reader.readMessage(value,proto.api.commons.UserSid.deserializeBinaryFromReader);
      msg.setUserSid(value);
      break;
    case 2:
      var value = new proto.api.commons.UserSid;
      reader.readMessage(value,proto.api.commons.UserSid.deserializeBinaryFromReader);
      msg.setAddedBy(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAddedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdmin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Member.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Member.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Member} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Member.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserSid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.commons.UserSid.serializeBinaryToWriter
    );
  }
  f = message.getAddedBy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.commons.UserSid.serializeBinaryToWriter
    );
  }
  f = message.getAddedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAdmin();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional UserSid user_sid = 1;
 * @return {?proto.api.commons.UserSid}
 */
proto.api.commons.Member.prototype.getUserSid = function() {
  return /** @type{?proto.api.commons.UserSid} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.UserSid, 1));
};


/**
 * @param {?proto.api.commons.UserSid|undefined} value
 * @return {!proto.api.commons.Member} returns this
*/
proto.api.commons.Member.prototype.setUserSid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Member} returns this
 */
proto.api.commons.Member.prototype.clearUserSid = function() {
  return this.setUserSid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Member.prototype.hasUserSid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UserSid added_by = 2;
 * @return {?proto.api.commons.UserSid}
 */
proto.api.commons.Member.prototype.getAddedBy = function() {
  return /** @type{?proto.api.commons.UserSid} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.UserSid, 2));
};


/**
 * @param {?proto.api.commons.UserSid|undefined} value
 * @return {!proto.api.commons.Member} returns this
*/
proto.api.commons.Member.prototype.setAddedBy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Member} returns this
 */
proto.api.commons.Member.prototype.clearAddedBy = function() {
  return this.setAddedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Member.prototype.hasAddedBy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp added_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Member.prototype.getAddedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Member} returns this
*/
proto.api.commons.Member.prototype.setAddedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Member} returns this
 */
proto.api.commons.Member.prototype.clearAddedAt = function() {
  return this.setAddedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Member.prototype.hasAddedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string room_id = 4;
 * @return {string}
 */
proto.api.commons.Member.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Member} returns this
 */
proto.api.commons.Member.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool admin = 5;
 * @return {boolean}
 */
proto.api.commons.Member.prototype.getAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Member} returns this
 */
proto.api.commons.Member.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Room.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Room.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Room} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Room.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roomId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    id: jspb.Message.getFieldWithDefault(msg, 8, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    config: (f = msg.getConfig()) && proto.api.commons.RoomConfig.toObject(includeInstance, f),
    permissionGroupId: (f = msg.getPermissionGroupId()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Room}
 */
proto.api.commons.Room.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Room;
  return proto.api.commons.Room.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Room} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Room}
 */
proto.api.commons.Room.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 4:
      var value = /** @type {!proto.api.commons.RoomType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 7:
      var value = /** @type {!proto.api.commons.RoomStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 10:
      var value = new proto.api.commons.RoomConfig;
      reader.readMessage(value,proto.api.commons.RoomConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 11:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPermissionGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Room.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Room.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Room} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Room.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.api.commons.RoomConfig.serializeBinaryToWriter
    );
  }
  f = message.getPermissionGroupId();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.api.commons.Room.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string room_id = 2;
 * @return {string}
 */
proto.api.commons.Room.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RoomType type = 4;
 * @return {!proto.api.commons.RoomType}
 */
proto.api.commons.Room.prototype.getType = function() {
  return /** @type {!proto.api.commons.RoomType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.api.commons.RoomType} value
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Room.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Room} returns this
*/
proto.api.commons.Room.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Room.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Room.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Room} returns this
*/
proto.api.commons.Room.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Room.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RoomStatus status = 7;
 * @return {!proto.api.commons.RoomStatus}
 */
proto.api.commons.Room.prototype.getStatus = function() {
  return /** @type {!proto.api.commons.RoomStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.api.commons.RoomStatus} value
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.api.commons.Room.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string display_name = 9;
 * @return {string}
 */
proto.api.commons.Room.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional RoomConfig config = 10;
 * @return {?proto.api.commons.RoomConfig}
 */
proto.api.commons.Room.prototype.getConfig = function() {
  return /** @type{?proto.api.commons.RoomConfig} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.RoomConfig, 10));
};


/**
 * @param {?proto.api.commons.RoomConfig|undefined} value
 * @return {!proto.api.commons.Room} returns this
*/
proto.api.commons.Room.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Room.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.StringValue permission_group_id = 11;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.api.commons.Room.prototype.getPermissionGroupId = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 11));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.api.commons.Room} returns this
*/
proto.api.commons.Room.prototype.setPermissionGroupId = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Room} returns this
 */
proto.api.commons.Room.prototype.clearPermissionGroupId = function() {
  return this.setPermissionGroupId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Room.prototype.hasPermissionGroupId = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    messageId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    roomId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fromUser: (f = msg.getFromUser()) && proto.api.commons.UserSid.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    receivedAt: (f = msg.getReceivedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    payload: jspb.Message.getFieldWithDefault(msg, 8, ""),
    unread: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    nonce: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Message}
 */
proto.api.commons.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Message;
  return proto.api.commons.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Message}
 */
proto.api.commons.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 4:
      var value = new proto.api.commons.UserSid;
      reader.readMessage(value,proto.api.commons.UserSid.deserializeBinaryFromReader);
      msg.setFromUser(value);
      break;
    case 5:
      var value = /** @type {!proto.api.commons.MessageStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setReceivedAt(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnread(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFromUser();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.commons.UserSid.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getReceivedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUnread();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getNonce();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.api.commons.Message.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message_id = 2;
 * @return {string}
 */
proto.api.commons.Message.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string room_id = 3;
 * @return {string}
 */
proto.api.commons.Message.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional UserSid from_user = 4;
 * @return {?proto.api.commons.UserSid}
 */
proto.api.commons.Message.prototype.getFromUser = function() {
  return /** @type{?proto.api.commons.UserSid} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.UserSid, 4));
};


/**
 * @param {?proto.api.commons.UserSid|undefined} value
 * @return {!proto.api.commons.Message} returns this
*/
proto.api.commons.Message.prototype.setFromUser = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.clearFromUser = function() {
  return this.setFromUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Message.prototype.hasFromUser = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MessageStatus status = 5;
 * @return {!proto.api.commons.MessageStatus}
 */
proto.api.commons.Message.prototype.getStatus = function() {
  return /** @type {!proto.api.commons.MessageStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api.commons.MessageStatus} value
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp received_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Message.prototype.getReceivedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Message} returns this
*/
proto.api.commons.Message.prototype.setReceivedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.clearReceivedAt = function() {
  return this.setReceivedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Message.prototype.hasReceivedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Message.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Message} returns this
*/
proto.api.commons.Message.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Message.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string payload = 8;
 * @return {string}
 */
proto.api.commons.Message.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool unread = 9;
 * @return {boolean}
 */
proto.api.commons.Message.prototype.getUnread = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.setUnread = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string nonce = 10;
 * @return {string}
 */
proto.api.commons.Message.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Message} returns this
 */
proto.api.commons.Message.prototype.setNonce = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.MessageStat.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.MessageStat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.MessageStat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.MessageStat.toObject = function(includeInstance, msg) {
  var f, obj = {
    roomId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unreadMessages: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.MessageStat}
 */
proto.api.commons.MessageStat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.MessageStat;
  return proto.api.commons.MessageStat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.MessageStat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.MessageStat}
 */
proto.api.commons.MessageStat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoomId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnreadMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.MessageStat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.MessageStat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.MessageStat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.MessageStat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoomId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnreadMessages();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string room_id = 1;
 * @return {string}
 */
proto.api.commons.MessageStat.prototype.getRoomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.MessageStat} returns this
 */
proto.api.commons.MessageStat.prototype.setRoomId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 unread_messages = 2;
 * @return {number}
 */
proto.api.commons.MessageStat.prototype.getUnreadMessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.MessageStat} returns this
 */
proto.api.commons.MessageStat.prototype.setUnreadMessages = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.GlobalConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.GlobalConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.GlobalConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.GlobalConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    createRoom: jspb.Message.getFieldWithDefault(msg, 1, 0),
    joinExistingRoom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sendMessageToSupervisor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sendMessageToNonSupervisor: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.GlobalConfig}
 */
proto.api.commons.GlobalConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.GlobalConfig;
  return proto.api.commons.GlobalConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.GlobalConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.GlobalConfig}
 */
proto.api.commons.GlobalConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setCreateRoom(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setJoinExistingRoom(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setSendMessageToSupervisor(value);
      break;
    case 4:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setSendMessageToNonSupervisor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.GlobalConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.GlobalConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.GlobalConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.GlobalConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreateRoom();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getJoinExistingRoom();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSendMessageToSupervisor();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSendMessageToNonSupervisor();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional ConfigPermissionEnum create_room = 1;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.GlobalConfig.prototype.getCreateRoom = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.GlobalConfig} returns this
 */
proto.api.commons.GlobalConfig.prototype.setCreateRoom = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ConfigPermissionEnum join_existing_room = 2;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.GlobalConfig.prototype.getJoinExistingRoom = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.GlobalConfig} returns this
 */
proto.api.commons.GlobalConfig.prototype.setJoinExistingRoom = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ConfigPermissionEnum send_message_to_supervisor = 3;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.GlobalConfig.prototype.getSendMessageToSupervisor = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.GlobalConfig} returns this
 */
proto.api.commons.GlobalConfig.prototype.setSendMessageToSupervisor = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional ConfigPermissionEnum send_message_to_non_supervisor = 4;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.GlobalConfig.prototype.getSendMessageToNonSupervisor = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.GlobalConfig} returns this
 */
proto.api.commons.GlobalConfig.prototype.setSendMessageToNonSupervisor = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.RoomConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.RoomConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.RoomConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.RoomConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    addUser: jspb.Message.getFieldWithDefault(msg, 1, 0),
    removeUser: jspb.Message.getFieldWithDefault(msg, 2, 0),
    promoteToAdmin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    readMessages: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sendMessage: jspb.Message.getFieldWithDefault(msg, 5, 0),
    archiveRoom: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.RoomConfig}
 */
proto.api.commons.RoomConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.RoomConfig;
  return proto.api.commons.RoomConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.RoomConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.RoomConfig}
 */
proto.api.commons.RoomConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setAddUser(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setRemoveUser(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setPromoteToAdmin(value);
      break;
    case 4:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setReadMessages(value);
      break;
    case 5:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setSendMessage(value);
      break;
    case 6:
      var value = /** @type {!proto.api.commons.ConfigPermissionEnum} */ (reader.readEnum());
      msg.setArchiveRoom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.RoomConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.RoomConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.RoomConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.RoomConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddUser();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRemoveUser();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPromoteToAdmin();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getReadMessages();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSendMessage();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getArchiveRoom();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional ConfigPermissionEnum add_user = 1;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.RoomConfig.prototype.getAddUser = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.RoomConfig} returns this
 */
proto.api.commons.RoomConfig.prototype.setAddUser = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ConfigPermissionEnum remove_user = 2;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.RoomConfig.prototype.getRemoveUser = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.RoomConfig} returns this
 */
proto.api.commons.RoomConfig.prototype.setRemoveUser = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional ConfigPermissionEnum promote_to_admin = 3;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.RoomConfig.prototype.getPromoteToAdmin = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.RoomConfig} returns this
 */
proto.api.commons.RoomConfig.prototype.setPromoteToAdmin = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional ConfigPermissionEnum read_messages = 4;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.RoomConfig.prototype.getReadMessages = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.RoomConfig} returns this
 */
proto.api.commons.RoomConfig.prototype.setReadMessages = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ConfigPermissionEnum send_message = 5;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.RoomConfig.prototype.getSendMessage = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.RoomConfig} returns this
 */
proto.api.commons.RoomConfig.prototype.setSendMessage = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional ConfigPermissionEnum archive_room = 6;
 * @return {!proto.api.commons.ConfigPermissionEnum}
 */
proto.api.commons.RoomConfig.prototype.getArchiveRoom = function() {
  return /** @type {!proto.api.commons.ConfigPermissionEnum} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.api.commons.ConfigPermissionEnum} value
 * @return {!proto.api.commons.RoomConfig} returns this
 */
proto.api.commons.RoomConfig.prototype.setArchiveRoom = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.api.commons.RoomType = {
  ROOM_TYPE_DIRECT: 0,
  ROOM_TYPE_MULTI: 1,
  ROOM_TYPE_SYSTEM: 2,
  ROOM_TYPE_GLOBAL_SYSTEM: 3
};

/**
 * @enum {number}
 */
proto.api.commons.MessageStatus = {
  MESSAGE_STATUS_ACTIVE: 0,
  MESSAGE_STATUS_EDITED: 1,
  MESSAGE_STATUS_ARCHIVED: 2
};

/**
 * @enum {number}
 */
proto.api.commons.RoomStatus = {
  ROOM_STATUS_ACTIVE: 0,
  ROOM_STATUS_ARCHIVED: 1,
  ROOM_STATUS_DELETED: 2
};

/**
 * @enum {number}
 */
proto.api.commons.ConfigPermissionEnum = {
  LIMITED: 0,
  ROOM303_MEMBER: 1,
  ROOM303_SUPERVISOR: 2
};

goog.object.extend(exports, proto.api.commons);
