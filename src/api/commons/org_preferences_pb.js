// source: api/commons/org_preferences.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.api.commons.AnsweringMachineDetection', null, global);
goog.exportSymbol('proto.api.commons.BroadcastTemplateOrdering', null, global);
goog.exportSymbol('proto.api.commons.DialListPenetrationStrategy', null, global);
goog.exportSymbol('proto.api.commons.LanguageDirectionPreference', null, global);
goog.exportSymbol('proto.api.commons.LocalePreferences', null, global);
goog.exportSymbol('proto.api.commons.ScheduleByTimeZoneScope', null, global);
goog.exportSymbol('proto.api.commons.StandardReportFilter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.LocalePreferences = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.LocalePreferences, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.LocalePreferences.displayName = 'proto.api.commons.LocalePreferences';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.LocalePreferences.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.LocalePreferences.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.LocalePreferences} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.LocalePreferences.toObject = function(includeInstance, msg) {
  var f, obj = {
languageTag: jspb.Message.getFieldWithDefault(msg, 1, ""),
useScriptDirectionRightToLeft: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
defaultCurrency: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.LocalePreferences}
 */
proto.api.commons.LocalePreferences.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.LocalePreferences;
  return proto.api.commons.LocalePreferences.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.LocalePreferences} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.LocalePreferences}
 */
proto.api.commons.LocalePreferences.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageTag(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseScriptDirectionRightToLeft(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.LocalePreferences.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.LocalePreferences.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.LocalePreferences} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.LocalePreferences.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguageTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUseScriptDirectionRightToLeft();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDefaultCurrency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string language_tag = 1;
 * @return {string}
 */
proto.api.commons.LocalePreferences.prototype.getLanguageTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.LocalePreferences} returns this
 */
proto.api.commons.LocalePreferences.prototype.setLanguageTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool use_script_direction_right_to_left = 2;
 * @return {boolean}
 */
proto.api.commons.LocalePreferences.prototype.getUseScriptDirectionRightToLeft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.LocalePreferences} returns this
 */
proto.api.commons.LocalePreferences.prototype.setUseScriptDirectionRightToLeft = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string default_currency = 3;
 * @return {string}
 */
proto.api.commons.LocalePreferences.prototype.getDefaultCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.LocalePreferences} returns this
 */
proto.api.commons.LocalePreferences.prototype.setDefaultCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.api.commons.BroadcastTemplateOrdering = {
  BY_NAME_ASC: 0,
  BY_NAME_DESC: 1,
  BY_TEMPLATE_NUMBER_ASC: 2,
  BY_TEMPLATE_NUMBER_DESC: 3,
  BY_MODIFIED_DATE_ASC: 4,
  BY_MODIFIED_DATE_DESC: 5
};

/**
 * @enum {number}
 */
proto.api.commons.ScheduleByTimeZoneScope = {
  BOTH: 0,
  STOP_DATE: 1,
  START_DATE: 2
};

/**
 * @enum {number}
 */
proto.api.commons.AnsweringMachineDetection = {
  OPTIMIZE_MACHINE_DETECTION: 0,
  OPTIMIZE_MACHINE_DETECTION_SLOW_LIVE: 1,
  OPTIMIZE_MACHINE_DELIVERY: 2,
  BALANCED_DETECTION_AND_DELIVERY: 3
};

/**
 * @enum {number}
 */
proto.api.commons.DialListPenetrationStrategy = {
  DEPTH_FIRST: 0,
  BREADTH_FIRST: 1
};

/**
 * @enum {number}
 */
proto.api.commons.StandardReportFilter = {
  NO_PREFERENCE: 0,
  FILTER_BY_ANSWERED_CALLS: 1,
  FILTER_BY_ANSWERED_HANGUPS: 2,
  FILTER_BY_ANSWERED_LINKCALL: 3,
  FILTER_BY_ANY_KEY_PRESSED: 4,
  FILTER_BY_BUSY: 5,
  FILTER_BY_CANCELED_CALLS: 6,
  FILTER_BY_CONFIRM_KEYS_3_THROUGH_6: 7,
  FILTER_BY_CONNECTED_CALLS: 8,
  FILTER_BY_DNCL_CANCELED: 9,
  FILTER_BY_FAILED_CALLS: 10,
  FILTER_BY_INVALID_CALLS: 11,
  FILTER_BY_LINKCALL_ABANDONED: 12,
  FILTER_BY_MACHINE_CALLS: 13,
  FILTER_BY_MACHINE_DELIVERY: 14,
  FILTER_BY_MACHINE_HANGUP: 15,
  FILTER_BY_MACHINE_AND_ANY_KEY: 16,
  FILTER_BY_NO_ANSWER: 17,
  FILTER_BY_NO_KEYS_PRESSED: 18,
  FILTER_BY_NOT_CANCELED_CALLS: 19,
  FILTER_BY_UNCONNECTED_CALLS: 20,
  FILTER_BY_UNCONNECTED_EXCLUDE_INVALID: 21,
  FILTER_BY_0_KEY: 22,
  FILTER_BY_1_KEY: 23,
  FILTER_BY_2_KEY: 24,
  FILTER_BY_3_KEY: 25,
  FILTER_BY_4_KEY: 26,
  FILTER_BY_5_KEY: 27,
  FILTER_BY_6_KEY: 28,
  FILTER_BY_7_KEY: 29,
  FILTER_BY_8_KEY: 30,
  FILTER_BY_9_KEY: 31,
  FILTER_BY_STAR_KEY: 32,
  FILTER_BY_POUND_KEY: 33,
  FILTER_BY_MACHINE_HANGUP_AND_UNCONNECTED: 34,
  FILTER_BY_EXCLUDING_CANCELED_AND_INVALID: 35
};

/**
 * @enum {number}
 */
proto.api.commons.LanguageDirectionPreference = {
  LANGUAGE_DIRECTION_PREFERENCE_UNSPECIFIED: 0,
  LANGUAGE_DIRECTION_PREFERENCE_DEFAULT: 1,
  LANGUAGE_DIRECTION_PREFERENCE_LEFT_TO_RIGHT: 2,
  LANGUAGE_DIRECTION_PREFERENCE_RIGHT_TO_LEFT: 3
};

goog.object.extend(exports, proto.api.commons);
