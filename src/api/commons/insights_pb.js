// source: api/commons/insights.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.api.commons.ColumnOperation', null, global);
goog.exportSymbol('proto.api.commons.ColumnOperation.OperationValueCase', null, global);
goog.exportSymbol('proto.api.commons.ColumnSort', null, global);
goog.exportSymbol('proto.api.commons.FormatSeries', null, global);
goog.exportSymbol('proto.api.commons.InsightPermissionType', null, global);
goog.exportSymbol('proto.api.commons.InsightType', null, global);
goog.exportSymbol('proto.api.commons.InsightVfsSchemaType', null, global);
goog.exportSymbol('proto.api.commons.OperationType', null, global);
goog.exportSymbol('proto.api.commons.OutputConfigurationColumnSummaryType', null, global);
goog.exportSymbol('proto.api.commons.OutputConfigurationType', null, global);
goog.exportSymbol('proto.api.commons.TableColumnConfig', null, global);
goog.exportSymbol('proto.api.commons.TableVisualization', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TableVisualization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.TableVisualization.repeatedFields_, null);
};
goog.inherits(proto.api.commons.TableVisualization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TableVisualization.displayName = 'proto.api.commons.TableVisualization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TableColumnConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.TableColumnConfig.repeatedFields_, null);
};
goog.inherits(proto.api.commons.TableColumnConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TableColumnConfig.displayName = 'proto.api.commons.TableColumnConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.FormatSeries = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.FormatSeries.repeatedFields_, null);
};
goog.inherits(proto.api.commons.FormatSeries, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.FormatSeries.displayName = 'proto.api.commons.FormatSeries';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ColumnOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.ColumnOperation.oneofGroups_);
};
goog.inherits(proto.api.commons.ColumnOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ColumnOperation.displayName = 'proto.api.commons.ColumnOperation';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.TableVisualization.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TableVisualization.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TableVisualization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TableVisualization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TableVisualization.toObject = function(includeInstance, msg) {
  var f, obj = {
tableColumnDetailsList: jspb.Message.toObjectList(msg.getTableColumnDetailsList(),
    proto.api.commons.TableColumnConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TableVisualization}
 */
proto.api.commons.TableVisualization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TableVisualization;
  return proto.api.commons.TableVisualization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TableVisualization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TableVisualization}
 */
proto.api.commons.TableVisualization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.commons.TableColumnConfig;
      reader.readMessage(value,proto.api.commons.TableColumnConfig.deserializeBinaryFromReader);
      msg.addTableColumnDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TableVisualization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TableVisualization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TableVisualization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TableVisualization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableColumnDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.commons.TableColumnConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TableColumnConfig table_column_details = 1;
 * @return {!Array<!proto.api.commons.TableColumnConfig>}
 */
proto.api.commons.TableVisualization.prototype.getTableColumnDetailsList = function() {
  return /** @type{!Array<!proto.api.commons.TableColumnConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.TableColumnConfig, 1));
};


/**
 * @param {!Array<!proto.api.commons.TableColumnConfig>} value
 * @return {!proto.api.commons.TableVisualization} returns this
*/
proto.api.commons.TableVisualization.prototype.setTableColumnDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.commons.TableColumnConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.TableColumnConfig}
 */
proto.api.commons.TableVisualization.prototype.addTableColumnDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.commons.TableColumnConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.TableVisualization} returns this
 */
proto.api.commons.TableVisualization.prototype.clearTableColumnDetailsList = function() {
  return this.setTableColumnDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.TableColumnConfig.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TableColumnConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TableColumnConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TableColumnConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TableColumnConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
columnName: jspb.Message.getFieldWithDefault(msg, 1, ""),
columnWidth: jspb.Message.getFieldWithDefault(msg, 2, 0),
hideColumn: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
renamedAs: jspb.Message.getFieldWithDefault(msg, 4, ""),
operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.api.commons.ColumnOperation.toObject, includeInstance),
columnSummary: jspb.Message.getFieldWithDefault(msg, 6, 0),
description: jspb.Message.getFieldWithDefault(msg, 7, ""),
sortDirection: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TableColumnConfig}
 */
proto.api.commons.TableColumnConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TableColumnConfig;
  return proto.api.commons.TableColumnConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TableColumnConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TableColumnConfig}
 */
proto.api.commons.TableColumnConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setColumnWidth(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHideColumn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRenamedAs(value);
      break;
    case 5:
      var value = new proto.api.commons.ColumnOperation;
      reader.readMessage(value,proto.api.commons.ColumnOperation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    case 6:
      var value = /** @type {!proto.api.commons.OutputConfigurationColumnSummaryType} */ (reader.readEnum());
      msg.setColumnSummary(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {!proto.api.commons.ColumnSort} */ (reader.readEnum());
      msg.setSortDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TableColumnConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TableColumnConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TableColumnConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TableColumnConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnWidth();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getHideColumn();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getRenamedAs();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.api.commons.ColumnOperation.serializeBinaryToWriter
    );
  }
  f = message.getColumnSummary();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSortDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional string column_name = 1;
 * @return {string}
 */
proto.api.commons.TableColumnConfig.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 column_width = 2;
 * @return {number}
 */
proto.api.commons.TableColumnConfig.prototype.getColumnWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.setColumnWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool hide_column = 3;
 * @return {boolean}
 */
proto.api.commons.TableColumnConfig.prototype.getHideColumn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.setHideColumn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string renamed_as = 4;
 * @return {string}
 */
proto.api.commons.TableColumnConfig.prototype.getRenamedAs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.setRenamedAs = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated ColumnOperation operations = 5;
 * @return {!Array<!proto.api.commons.ColumnOperation>}
 */
proto.api.commons.TableColumnConfig.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.api.commons.ColumnOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.ColumnOperation, 5));
};


/**
 * @param {!Array<!proto.api.commons.ColumnOperation>} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
*/
proto.api.commons.TableColumnConfig.prototype.setOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.api.commons.ColumnOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ColumnOperation}
 */
proto.api.commons.TableColumnConfig.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.api.commons.ColumnOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.clearOperationsList = function() {
  return this.setOperationsList([]);
};


/**
 * optional OutputConfigurationColumnSummaryType column_summary = 6;
 * @return {!proto.api.commons.OutputConfigurationColumnSummaryType}
 */
proto.api.commons.TableColumnConfig.prototype.getColumnSummary = function() {
  return /** @type {!proto.api.commons.OutputConfigurationColumnSummaryType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.api.commons.OutputConfigurationColumnSummaryType} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.setColumnSummary = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.api.commons.TableColumnConfig.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional ColumnSort sort_direction = 8;
 * @return {!proto.api.commons.ColumnSort}
 */
proto.api.commons.TableColumnConfig.prototype.getSortDirection = function() {
  return /** @type {!proto.api.commons.ColumnSort} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.api.commons.ColumnSort} value
 * @return {!proto.api.commons.TableColumnConfig} returns this
 */
proto.api.commons.TableColumnConfig.prototype.setSortDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.FormatSeries.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.FormatSeries.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.FormatSeries.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.FormatSeries} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.FormatSeries.toObject = function(includeInstance, msg) {
  var f, obj = {
formatPartsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.FormatSeries}
 */
proto.api.commons.FormatSeries.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.FormatSeries;
  return proto.api.commons.FormatSeries.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.FormatSeries} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.FormatSeries}
 */
proto.api.commons.FormatSeries.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addFormatParts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.FormatSeries.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.FormatSeries.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.FormatSeries} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.FormatSeries.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormatPartsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string format_parts = 1;
 * @return {!Array<string>}
 */
proto.api.commons.FormatSeries.prototype.getFormatPartsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.commons.FormatSeries} returns this
 */
proto.api.commons.FormatSeries.prototype.setFormatPartsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.FormatSeries} returns this
 */
proto.api.commons.FormatSeries.prototype.addFormatParts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.FormatSeries} returns this
 */
proto.api.commons.FormatSeries.prototype.clearFormatPartsList = function() {
  return this.setFormatPartsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.ColumnOperation.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.api.commons.ColumnOperation.OperationValueCase = {
  OPERATION_VALUE_NOT_SET: 0,
  FLOAT_VALUE: 2,
  FORMAT_SERIES: 3
};

/**
 * @return {proto.api.commons.ColumnOperation.OperationValueCase}
 */
proto.api.commons.ColumnOperation.prototype.getOperationValueCase = function() {
  return /** @type {proto.api.commons.ColumnOperation.OperationValueCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.ColumnOperation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ColumnOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ColumnOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ColumnOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ColumnOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
operationType: jspb.Message.getFieldWithDefault(msg, 1, 0),
floatValue: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
formatSeries: (f = msg.getFormatSeries()) && proto.api.commons.FormatSeries.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ColumnOperation}
 */
proto.api.commons.ColumnOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ColumnOperation;
  return proto.api.commons.ColumnOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ColumnOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ColumnOperation}
 */
proto.api.commons.ColumnOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.commons.OperationType} */ (reader.readEnum());
      msg.setOperationType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFloatValue(value);
      break;
    case 3:
      var value = new proto.api.commons.FormatSeries;
      reader.readMessage(value,proto.api.commons.FormatSeries.deserializeBinaryFromReader);
      msg.setFormatSeries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ColumnOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ColumnOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ColumnOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ColumnOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getFormatSeries();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.FormatSeries.serializeBinaryToWriter
    );
  }
};


/**
 * optional OperationType operation_type = 1;
 * @return {!proto.api.commons.OperationType}
 */
proto.api.commons.ColumnOperation.prototype.getOperationType = function() {
  return /** @type {!proto.api.commons.OperationType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.commons.OperationType} value
 * @return {!proto.api.commons.ColumnOperation} returns this
 */
proto.api.commons.ColumnOperation.prototype.setOperationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional double float_value = 2;
 * @return {number}
 */
proto.api.commons.ColumnOperation.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ColumnOperation} returns this
 */
proto.api.commons.ColumnOperation.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.ColumnOperation.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.ColumnOperation} returns this
 */
proto.api.commons.ColumnOperation.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.ColumnOperation.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ColumnOperation.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FormatSeries format_series = 3;
 * @return {?proto.api.commons.FormatSeries}
 */
proto.api.commons.ColumnOperation.prototype.getFormatSeries = function() {
  return /** @type{?proto.api.commons.FormatSeries} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.FormatSeries, 3));
};


/**
 * @param {?proto.api.commons.FormatSeries|undefined} value
 * @return {!proto.api.commons.ColumnOperation} returns this
*/
proto.api.commons.ColumnOperation.prototype.setFormatSeries = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.commons.ColumnOperation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ColumnOperation} returns this
 */
proto.api.commons.ColumnOperation.prototype.clearFormatSeries = function() {
  return this.setFormatSeries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ColumnOperation.prototype.hasFormatSeries = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.api.commons.InsightPermissionType = {
  INSIGHT_PERMISSION_TYPE_COMMON_LIBRARY: 0,
  INSIGHT_PERMISSION_TYPE_ORG: 1
};

/**
 * @enum {number}
 */
proto.api.commons.InsightType = {
  INSIGHT_TYPE_TABLE_VIEW: 0
};

/**
 * @enum {number}
 */
proto.api.commons.InsightVfsSchemaType = {
  INSIGHT_VFS_SCHEMA_TYPE_STRING: 0,
  INSIGHT_VFS_SCHEMA_TYPE_INT64: 1,
  INSIGHT_VFS_SCHEMA_TYPE_FLOAT64: 2,
  INSIGHT_VFS_SCHEMA_TYPE_BOOLEAN: 3,
  INSIGHT_VFS_SCHEMA_TYPE_DATETIME: 4
};

/**
 * @enum {number}
 */
proto.api.commons.OutputConfigurationType = {
  OUTPUT_CONFIGURATION_TYPE_UNSPECIFIED: 0,
  OUTPUT_CONFIGURATION_TYPE_TABLE: 1,
  OUTPUT_CONFIGURATION_TYPE_MULTI_SERIES: 2,
  OUTPUT_CONFIGURATION_TYPE_PIE_CHART: 3
};

/**
 * @enum {number}
 */
proto.api.commons.OperationType = {
  OPERATION_TYPE_UNSPECIFIED: 0,
  OPERATION_TYPE_DATE: 1,
  OPERATION_TYPE_PREFIX: 2,
  OPERATION_TYPE_SUFFIX: 3,
  OPERATION_TYPE_DURATION: 4,
  OPERATION_TYPE_ADD: 5,
  OPERATION_TYPE_SUBTRACT: 6,
  OPERATION_TYPE_MULTIPLY: 7,
  OPERATION_TYPE_DIVIDE: 8,
  OPERATION_TYPE_FORMAT_NUMBER: 9,
  OPERATION_TYPE_PRECISION: 10
};

/**
 * @enum {number}
 */
proto.api.commons.ColumnSort = {
  COLUMN_SORT_UNSPECIFIED: 0,
  COLUMN_SORT_ASCENDING: 1,
  COLUMN_SORT_DESCENDING: 2
};

/**
 * @enum {number}
 */
proto.api.commons.OutputConfigurationColumnSummaryType = {
  OUTPUT_CONFIGURATION_COLUMN_SUMMARY_TYPE_UNSPECIFIED: 0,
  OUTPUT_CONFIGURATION_COLUMN_SUMMARY_TYPE_AVG: 1,
  OUTPUT_CONFIGURATION_COLUMN_SUMMARY_TYPE_SUM: 2,
  OUTPUT_CONFIGURATION_COLUMN_SUMMARY_TYPE_MIN: 3,
  OUTPUT_CONFIGURATION_COLUMN_SUMMARY_TYPE_MAX: 4
};

goog.object.extend(exports, proto.api.commons);
