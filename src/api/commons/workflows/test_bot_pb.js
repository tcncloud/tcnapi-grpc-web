// source: api/commons/workflows/test_bot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_auth_user_pb = require('../../../api/commons/auth/user_pb.js');
goog.object.extend(proto, api_commons_auth_user_pb);
var api_v0alpha_omniapi_pb = require('../../../api/v0alpha/omniapi_pb.js');
goog.object.extend(proto, api_v0alpha_omniapi_pb);
goog.exportSymbol('proto.api.commons.workflows.TestBotEntity', null, global);
goog.exportSymbol('proto.api.commons.workflows.TestBotEntity.DataCase', null, global);
goog.exportSymbol('proto.api.commons.workflows.TestBotEntityType', null, global);
goog.exportSymbol('proto.api.commons.workflows.TestBotNodeTestEnd', null, global);
goog.exportSymbol('proto.api.commons.workflows.TestBotNodeTestStart', null, global);
goog.exportSymbol('proto.api.commons.workflows.TestBotNodeTestStep', null, global);
goog.exportSymbol('proto.api.commons.workflows.TestBotTestStepType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.workflows.TestBotNodeTestStart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.workflows.TestBotNodeTestStart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.workflows.TestBotNodeTestStart.displayName = 'proto.api.commons.workflows.TestBotNodeTestStart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.workflows.TestBotNodeTestStep = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.workflows.TestBotNodeTestStep.repeatedFields_, null);
};
goog.inherits(proto.api.commons.workflows.TestBotNodeTestStep, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.workflows.TestBotNodeTestStep.displayName = 'proto.api.commons.workflows.TestBotNodeTestStep';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.workflows.TestBotNodeTestEnd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.workflows.TestBotNodeTestEnd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.workflows.TestBotNodeTestEnd.displayName = 'proto.api.commons.workflows.TestBotNodeTestEnd';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.workflows.TestBotEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.workflows.TestBotEntity.oneofGroups_);
};
goog.inherits(proto.api.commons.workflows.TestBotEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.workflows.TestBotEntity.displayName = 'proto.api.commons.workflows.TestBotEntity';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.workflows.TestBotNodeTestStart.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.workflows.TestBotNodeTestStart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.workflows.TestBotNodeTestStart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotNodeTestStart.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitiesMap: (f = msg.getEntitiesMap()) ? f.toObject(includeInstance, proto.api.commons.workflows.TestBotEntity.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.workflows.TestBotNodeTestStart}
 */
proto.api.commons.workflows.TestBotNodeTestStart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.workflows.TestBotNodeTestStart;
  return proto.api.commons.workflows.TestBotNodeTestStart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.workflows.TestBotNodeTestStart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.workflows.TestBotNodeTestStart}
 */
proto.api.commons.workflows.TestBotNodeTestStart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getEntitiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.api.commons.workflows.TestBotEntity.deserializeBinaryFromReader, "", new proto.api.commons.workflows.TestBotEntity());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.workflows.TestBotNodeTestStart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.workflows.TestBotNodeTestStart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.workflows.TestBotNodeTestStart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotNodeTestStart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.api.commons.workflows.TestBotEntity.serializeBinaryToWriter);
  }
};


/**
 * map<string, TestBotEntity> entities = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.api.commons.workflows.TestBotEntity>}
 */
proto.api.commons.workflows.TestBotNodeTestStart.prototype.getEntitiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.api.commons.workflows.TestBotEntity>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.api.commons.workflows.TestBotEntity));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.api.commons.workflows.TestBotNodeTestStart} returns this
 */
proto.api.commons.workflows.TestBotNodeTestStart.prototype.clearEntitiesMap = function() {
  this.getEntitiesMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.workflows.TestBotNodeTestStep.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.workflows.TestBotNodeTestStep.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.workflows.TestBotNodeTestStep} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotNodeTestStep.toObject = function(includeInstance, msg) {
  var f, obj = {
    shouldError: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entityNamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.workflows.TestBotNodeTestStep}
 */
proto.api.commons.workflows.TestBotNodeTestStep.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.workflows.TestBotNodeTestStep;
  return proto.api.commons.workflows.TestBotNodeTestStep.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.workflows.TestBotNodeTestStep} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.workflows.TestBotNodeTestStep}
 */
proto.api.commons.workflows.TestBotNodeTestStep.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShouldError(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.workflows.TestBotTestStepType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntityNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.workflows.TestBotNodeTestStep.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.workflows.TestBotNodeTestStep} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotNodeTestStep.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShouldError();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEntityNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional bool should_error = 1;
 * @return {boolean}
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.getShouldError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.workflows.TestBotNodeTestStep} returns this
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.setShouldError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional TestBotTestStepType type = 2;
 * @return {!proto.api.commons.workflows.TestBotTestStepType}
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.getType = function() {
  return /** @type {!proto.api.commons.workflows.TestBotTestStepType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.workflows.TestBotTestStepType} value
 * @return {!proto.api.commons.workflows.TestBotNodeTestStep} returns this
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated string entity_names = 3;
 * @return {!Array<string>}
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.getEntityNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.commons.workflows.TestBotNodeTestStep} returns this
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.setEntityNamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.workflows.TestBotNodeTestStep} returns this
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.addEntityNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.workflows.TestBotNodeTestStep} returns this
 */
proto.api.commons.workflows.TestBotNodeTestStep.prototype.clearEntityNamesList = function() {
  return this.setEntityNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.workflows.TestBotNodeTestEnd.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.workflows.TestBotNodeTestEnd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.workflows.TestBotNodeTestEnd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotNodeTestEnd.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.workflows.TestBotNodeTestEnd}
 */
proto.api.commons.workflows.TestBotNodeTestEnd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.workflows.TestBotNodeTestEnd;
  return proto.api.commons.workflows.TestBotNodeTestEnd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.workflows.TestBotNodeTestEnd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.workflows.TestBotNodeTestEnd}
 */
proto.api.commons.workflows.TestBotNodeTestEnd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.workflows.TestBotNodeTestEnd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.workflows.TestBotNodeTestEnd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.workflows.TestBotNodeTestEnd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotNodeTestEnd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.api.commons.workflows.TestBotNodeTestEnd.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.workflows.TestBotNodeTestEnd} returns this
 */
proto.api.commons.workflows.TestBotNodeTestEnd.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.workflows.TestBotEntity.oneofGroups_ = [[100,300]];

/**
 * @enum {number}
 */
proto.api.commons.workflows.TestBotEntity.DataCase = {
  DATA_NOT_SET: 0,
  USER: 100,
  OMNICHANNEL_PROJECT: 300
};

/**
 * @return {proto.api.commons.workflows.TestBotEntity.DataCase}
 */
proto.api.commons.workflows.TestBotEntity.prototype.getDataCase = function() {
  return /** @type {proto.api.commons.workflows.TestBotEntity.DataCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.workflows.TestBotEntity.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.workflows.TestBotEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.workflows.TestBotEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.workflows.TestBotEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    atomic: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    user: (f = msg.getUser()) && api_commons_auth_user_pb.AuthenticatedUser.toObject(includeInstance, f),
    omnichannelProject: (f = msg.getOmnichannelProject()) && api_v0alpha_omniapi_pb.Project.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.workflows.TestBotEntity}
 */
proto.api.commons.workflows.TestBotEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.workflows.TestBotEntity;
  return proto.api.commons.workflows.TestBotEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.workflows.TestBotEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.workflows.TestBotEntity}
 */
proto.api.commons.workflows.TestBotEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.commons.workflows.TestBotEntityType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAtomic(value);
      break;
    case 100:
      var value = new api_commons_auth_user_pb.AuthenticatedUser;
      reader.readMessage(value,api_commons_auth_user_pb.AuthenticatedUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 300:
      var value = new api_v0alpha_omniapi_pb.Project;
      reader.readMessage(value,api_v0alpha_omniapi_pb.Project.deserializeBinaryFromReader);
      msg.setOmnichannelProject(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.workflows.TestBotEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.workflows.TestBotEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.workflows.TestBotEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.workflows.TestBotEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAtomic();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      api_commons_auth_user_pb.AuthenticatedUser.serializeBinaryToWriter
    );
  }
  f = message.getOmnichannelProject();
  if (f != null) {
    writer.writeMessage(
      300,
      f,
      api_v0alpha_omniapi_pb.Project.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestBotEntityType type = 1;
 * @return {!proto.api.commons.workflows.TestBotEntityType}
 */
proto.api.commons.workflows.TestBotEntity.prototype.getType = function() {
  return /** @type {!proto.api.commons.workflows.TestBotEntityType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.commons.workflows.TestBotEntityType} value
 * @return {!proto.api.commons.workflows.TestBotEntity} returns this
 */
proto.api.commons.workflows.TestBotEntity.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool atomic = 2;
 * @return {boolean}
 */
proto.api.commons.workflows.TestBotEntity.prototype.getAtomic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.workflows.TestBotEntity} returns this
 */
proto.api.commons.workflows.TestBotEntity.prototype.setAtomic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional api.commons.auth.AuthenticatedUser user = 100;
 * @return {?proto.api.commons.auth.AuthenticatedUser}
 */
proto.api.commons.workflows.TestBotEntity.prototype.getUser = function() {
  return /** @type{?proto.api.commons.auth.AuthenticatedUser} */ (
    jspb.Message.getWrapperField(this, api_commons_auth_user_pb.AuthenticatedUser, 100));
};


/**
 * @param {?proto.api.commons.auth.AuthenticatedUser|undefined} value
 * @return {!proto.api.commons.workflows.TestBotEntity} returns this
*/
proto.api.commons.workflows.TestBotEntity.prototype.setUser = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.api.commons.workflows.TestBotEntity.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.workflows.TestBotEntity} returns this
 */
proto.api.commons.workflows.TestBotEntity.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.workflows.TestBotEntity.prototype.hasUser = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional api.v0alpha.Project omnichannel_project = 300;
 * @return {?proto.api.v0alpha.Project}
 */
proto.api.commons.workflows.TestBotEntity.prototype.getOmnichannelProject = function() {
  return /** @type{?proto.api.v0alpha.Project} */ (
    jspb.Message.getWrapperField(this, api_v0alpha_omniapi_pb.Project, 300));
};


/**
 * @param {?proto.api.v0alpha.Project|undefined} value
 * @return {!proto.api.commons.workflows.TestBotEntity} returns this
*/
proto.api.commons.workflows.TestBotEntity.prototype.setOmnichannelProject = function(value) {
  return jspb.Message.setOneofWrapperField(this, 300, proto.api.commons.workflows.TestBotEntity.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.workflows.TestBotEntity} returns this
 */
proto.api.commons.workflows.TestBotEntity.prototype.clearOmnichannelProject = function() {
  return this.setOmnichannelProject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.workflows.TestBotEntity.prototype.hasOmnichannelProject = function() {
  return jspb.Message.getField(this, 300) != null;
};


/**
 * @enum {number}
 */
proto.api.commons.workflows.TestBotTestStepType = {
  TEST_BOT_TEST_STEP_TYPE_UNSPECIFIED: 0,
  TEST_BOT_TEST_STEP_TYPE_OMNICHANNEL_CREATE_PROJECT: 1000,
  TEST_BOT_TEST_STEP_TYPE_OMNICHANNEL_GET_PROJECT: 1001
};

/**
 * @enum {number}
 */
proto.api.commons.workflows.TestBotEntityType = {
  TEST_BOT_ENTITY_TYPE_UNSPECIFIED: 0,
  TEST_BOT_ENTITY_TYPE_USER: 100,
  TEST_BOT_ENTITY_TYPE_OMNICHANNEL_PROJECT: 300
};

goog.object.extend(exports, proto.api.commons.workflows);
