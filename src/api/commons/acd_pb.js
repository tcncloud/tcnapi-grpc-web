// source: api/commons/acd.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.commons.ACDStatus', null, global);
goog.exportSymbol('proto.api.commons.AgentAlert', null, global);
goog.exportSymbol('proto.api.commons.AgentAlert.AlertCase', null, global);
goog.exportSymbol('proto.api.commons.AgentBackofficeMessageAlert', null, global);
goog.exportSymbol('proto.api.commons.AgentCallLogActionKey', null, global);
goog.exportSymbol('proto.api.commons.AgentCallLogActionKey.Enum', null, global);
goog.exportSymbol('proto.api.commons.AgentCallLogActionValue', null, global);
goog.exportSymbol('proto.api.commons.AgentCallLogActionValue.Enum', null, global);
goog.exportSymbol('proto.api.commons.AgentCallLogCallEnded', null, global);
goog.exportSymbol('proto.api.commons.AgentDialIn', null, global);
goog.exportSymbol('proto.api.commons.AgentDialIn.Enum', null, global);
goog.exportSymbol('proto.api.commons.AgentDirectedCallHangupAlert', null, global);
goog.exportSymbol('proto.api.commons.AgentDirectedCallRingingAlert', null, global);
goog.exportSymbol('proto.api.commons.AgentSession', null, global);
goog.exportSymbol('proto.api.commons.AgentSessionLogActionKey', null, global);
goog.exportSymbol('proto.api.commons.AgentSessionLogActionKey.Enum', null, global);
goog.exportSymbol('proto.api.commons.AgentState', null, global);
goog.exportSymbol('proto.api.commons.AgentStatus', null, global);
goog.exportSymbol('proto.api.commons.AgentStatus.Enum', null, global);
goog.exportSymbol('proto.api.commons.AudioSenderPacket', null, global);
goog.exportSymbol('proto.api.commons.CallType', null, global);
goog.exportSymbol('proto.api.commons.CallType.Enum', null, global);
goog.exportSymbol('proto.api.commons.CallerSid', null, global);
goog.exportSymbol('proto.api.commons.CallerStatus', null, global);
goog.exportSymbol('proto.api.commons.CallerStatus.Enum', null, global);
goog.exportSymbol('proto.api.commons.DTMFDigit', null, global);
goog.exportSymbol('proto.api.commons.HoldType', null, global);
goog.exportSymbol('proto.api.commons.HuntGroupParamKey', null, global);
goog.exportSymbol('proto.api.commons.HuntGroupParamKey.Enum', null, global);
goog.exportSymbol('proto.api.commons.HuntGroupType', null, global);
goog.exportSymbol('proto.api.commons.HuntGroupType.Enum', null, global);
goog.exportSymbol('proto.api.commons.QueuedNotificationType', null, global);
goog.exportSymbol('proto.api.commons.ReplaceConfig', null, global);
goog.exportSymbol('proto.api.commons.ReplaceConfig.Enum', null, global);
goog.exportSymbol('proto.api.commons.TransferMember', null, global);
goog.exportSymbol('proto.api.commons.TransferMemberType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentSession = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentSession, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentSession.displayName = 'proto.api.commons.AgentSession';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallerSid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallerSid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallerSid.displayName = 'proto.api.commons.CallerSid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentStatus.displayName = 'proto.api.commons.AgentStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallerStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallerStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallerStatus.displayName = 'proto.api.commons.CallerStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallType.displayName = 'proto.api.commons.CallType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentDialIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentDialIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentDialIn.displayName = 'proto.api.commons.AgentDialIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.HuntGroupType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.HuntGroupType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.HuntGroupType.displayName = 'proto.api.commons.HuntGroupType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentSessionLogActionKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentSessionLogActionKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentSessionLogActionKey.displayName = 'proto.api.commons.AgentSessionLogActionKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentCallLogActionKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentCallLogActionKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentCallLogActionKey.displayName = 'proto.api.commons.AgentCallLogActionKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentCallLogActionValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentCallLogActionValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentCallLogActionValue.displayName = 'proto.api.commons.AgentCallLogActionValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.HuntGroupParamKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.HuntGroupParamKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.HuntGroupParamKey.displayName = 'proto.api.commons.HuntGroupParamKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ReplaceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ReplaceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ReplaceConfig.displayName = 'proto.api.commons.ReplaceConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TransferMember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.TransferMember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TransferMember.displayName = 'proto.api.commons.TransferMember';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentAlert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.AgentAlert.oneofGroups_);
};
goog.inherits(proto.api.commons.AgentAlert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentAlert.displayName = 'proto.api.commons.AgentAlert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentBackofficeMessageAlert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentBackofficeMessageAlert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentBackofficeMessageAlert.displayName = 'proto.api.commons.AgentBackofficeMessageAlert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentDirectedCallRingingAlert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentDirectedCallRingingAlert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentDirectedCallRingingAlert.displayName = 'proto.api.commons.AgentDirectedCallRingingAlert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentDirectedCallHangupAlert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AgentDirectedCallHangupAlert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentDirectedCallHangupAlert.displayName = 'proto.api.commons.AgentDirectedCallHangupAlert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AgentState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.AgentState.repeatedFields_, null);
};
goog.inherits(proto.api.commons.AgentState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AgentState.displayName = 'proto.api.commons.AgentState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AudioSenderPacket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AudioSenderPacket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AudioSenderPacket.displayName = 'proto.api.commons.AudioSenderPacket';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentSession.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentSession.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentSession} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentSession.toObject = function(includeInstance, msg) {
  var f, obj = {
    agentSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tenantSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sessionSid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    asmSessionSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    orgId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    regionId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentSession}
 */
proto.api.commons.AgentSession.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentSession;
  return proto.api.commons.AgentSession.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentSession} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentSession}
 */
proto.api.commons.AgentSession.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantSid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSessionSid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentSession.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentSession.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentSession} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentSession.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAgentSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTenantSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegionId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int64 agent_sid = 1;
 * @return {number}
 */
proto.api.commons.AgentSession.prototype.getAgentSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentSession} returns this
 */
proto.api.commons.AgentSession.prototype.setAgentSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 tenant_sid = 2;
 * @return {number}
 */
proto.api.commons.AgentSession.prototype.getTenantSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentSession} returns this
 */
proto.api.commons.AgentSession.prototype.setTenantSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 session_sid = 3;
 * @return {number}
 */
proto.api.commons.AgentSession.prototype.getSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentSession} returns this
 */
proto.api.commons.AgentSession.prototype.setSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 asm_session_sid = 4;
 * @return {number}
 */
proto.api.commons.AgentSession.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentSession} returns this
 */
proto.api.commons.AgentSession.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string org_id = 5;
 * @return {string}
 */
proto.api.commons.AgentSession.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentSession} returns this
 */
proto.api.commons.AgentSession.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string region_id = 6;
 * @return {string}
 */
proto.api.commons.AgentSession.prototype.getRegionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentSession} returns this
 */
proto.api.commons.AgentSession.prototype.setRegionId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_id = 8;
 * @return {string}
 */
proto.api.commons.AgentSession.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentSession} returns this
 */
proto.api.commons.AgentSession.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallerSid.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallerSid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallerSid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallerSid.toObject = function(includeInstance, msg) {
  var f, obj = {
    callerSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tenantSid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallerSid}
 */
proto.api.commons.CallerSid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallerSid;
  return proto.api.commons.CallerSid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallerSid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallerSid}
 */
proto.api.commons.CallerSid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallerSid(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.CallType.Enum} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTenantSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallerSid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallerSid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallerSid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallerSid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallerSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTenantSid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 caller_sid = 1;
 * @return {number}
 */
proto.api.commons.CallerSid.prototype.getCallerSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.CallerSid} returns this
 */
proto.api.commons.CallerSid.prototype.setCallerSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional CallType.Enum type = 2;
 * @return {!proto.api.commons.CallType.Enum}
 */
proto.api.commons.CallerSid.prototype.getType = function() {
  return /** @type {!proto.api.commons.CallType.Enum} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @return {!proto.api.commons.CallerSid} returns this
 */
proto.api.commons.CallerSid.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 tenant_sid = 3;
 * @return {number}
 */
proto.api.commons.CallerSid.prototype.getTenantSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.CallerSid} returns this
 */
proto.api.commons.CallerSid.prototype.setTenantSid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentStatus}
 */
proto.api.commons.AgentStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentStatus;
  return proto.api.commons.AgentStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentStatus}
 */
proto.api.commons.AgentStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.AgentStatus.Enum = {
  UNAVALIABLE: 0,
  IDLE: 1,
  READY: 2,
  HUNGUP: 3,
  DESTROYED: 4,
  PEERED: 5,
  PAUSED: 6,
  WRAPUP: 7,
  PREPARING_AFTER_IDLE: 8,
  PREPARING_AFTER_WRAPUP: 9,
  PREPARING_AFTER_PAUSE: 10,
  PREPARING_AFTER_DIAL_CANCEL: 11,
  PREPARING_AFTER_PBX_REJECT: 12,
  PREPARING_AFTER_PBX_HANGUP: 13,
  PREPARING_AFTER_PBX_WAS_TAKEN: 14,
  PREPARING_AFTER_GUI_BUSY: 15,
  MANUAL_DIAL_PREPARED: 16,
  PREVIEW_DIAL_PREPARED: 17,
  MANUAL_DIAL_STARTED: 18,
  PREVIEW_DIAL_STARTED: 19,
  OUTBOUND_LOCKED: 20,
  WARM_AGENT_TRANSFER_STARTED_SOURCE: 21,
  WARM_AGENT_TRANSFER_STARTED_DESTINATION: 22,
  WARM_OUTBOUND_TRANSFER_STARTED: 23,
  WARM_OUTBOUND_TRANSFER_PEER_LOST: 24,
  PBX_POPUP_LOCKED: 25,
  PEERED_WITH_CALL_ON_HOLD: 26,
  CALLBACK_RESUMING: 27,
  GUI_BUSY: 28,
  INTERCOM: 29,
  INTERCOM_RINGING_SOURCE: 30,
  INTERCOM_RINGING_DESTINATION: 31,
  WARM_OUTBOUND_TRANSFER_OUTBOUND_LOST: 32,
  PREPARED_TO_PEER: 33,
  WARM_SKILL_TRANSFER_SOURCE_PENDING: 34,
  CALLER_TRANSFER_STARTED: 35,
  CALLER_TRANSFER_LOST_PEER: 36,
  CALLER_TRANSFER_LOST_MERGED_CALLER: 37,
  COLD_OUTBOUND_TRANSFER_STARTED: 38,
  COLD_AGENT_TRANSFER_STARTED: 39
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallerStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallerStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallerStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallerStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallerStatus}
 */
proto.api.commons.CallerStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallerStatus;
  return proto.api.commons.CallerStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallerStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallerStatus}
 */
proto.api.commons.CallerStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallerStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallerStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallerStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallerStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.CallerStatus.Enum = {
  UNAVALIABLE: 0,
  IDLE: 1,
  READY: 2,
  HUNGUP: 3,
  DESTROYED: 4,
  PEERED: 5,
  OUTBOUND_LOCKED: 6,
  OUTBOUND_PEERED: 7,
  PBX_POPUP_LOCKED: 8,
  VOICEMAIL: 9,
  PEERED_WITH_CALL_ON_HOLD: 10,
  CALLBACK_SUSPENDED: 11,
  WARM_AGENT_TRANSFER_STARTED: 12,
  WARM_OUTBOUND_TRANSFER_STARTED: 13,
  OUTBOUND_DIAL_TRANSFER_STARTED: 14,
  PREPARED_TO_PEER: 15,
  WARM_SKILL_TRANSFER_PENDING: 16,
  CALLER_TRANSFER_PEER: 17,
  CALLER_TRANSFER_MERGED_CALLER: 18,
  CALLER_PEERED: 19
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallType.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallType.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallType}
 */
proto.api.commons.CallType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallType;
  return proto.api.commons.CallType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallType}
 */
proto.api.commons.CallType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.CallType.Enum = {
  INBOUND: 0,
  OUTBOUND: 1,
  PREVIEW: 2,
  MANUAL: 3,
  MAC: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentDialIn.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentDialIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentDialIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentDialIn.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentDialIn}
 */
proto.api.commons.AgentDialIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentDialIn;
  return proto.api.commons.AgentDialIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentDialIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentDialIn}
 */
proto.api.commons.AgentDialIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentDialIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentDialIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentDialIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentDialIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.AgentDialIn.Enum = {
  TOLL_FREE: 0,
  SOFTPHONE: 1,
  LOCAL: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.HuntGroupType.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.HuntGroupType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.HuntGroupType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HuntGroupType.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.HuntGroupType}
 */
proto.api.commons.HuntGroupType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.HuntGroupType;
  return proto.api.commons.HuntGroupType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.HuntGroupType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.HuntGroupType}
 */
proto.api.commons.HuntGroupType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.HuntGroupType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.HuntGroupType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.HuntGroupType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HuntGroupType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.HuntGroupType.Enum = {
  UNCONNECTED: 0,
  CONNECTED: 1,
  SOFTPHONE: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentSessionLogActionKey.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentSessionLogActionKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentSessionLogActionKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentSessionLogActionKey.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentSessionLogActionKey}
 */
proto.api.commons.AgentSessionLogActionKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentSessionLogActionKey;
  return proto.api.commons.AgentSessionLogActionKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentSessionLogActionKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentSessionLogActionKey}
 */
proto.api.commons.AgentSessionLogActionKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentSessionLogActionKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentSessionLogActionKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentSessionLogActionKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentSessionLogActionKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.AgentSessionLogActionKey.Enum = {
  AGENT_PAUSE_START: 0,
  AGENT_PAUSE_STOP: 1,
  AGENT_SKILLS_INITIAL: 2,
  AGENT_LOGOUT: 3,
  EXECUTED_AGENT_TRIGGER: 4,
  DURATION_SINCE_LAST_LOGON: 5,
  AGENT_LOGIN_IP: 6,
  MAC_DECISION: 7,
  MAC_10_KEY_DECISION: 8,
  MAC_10_KEY_CONFIRM: 9,
  HUNT_GROUP_REASSIGNMENT: 10,
  PBX_ACCEPT: 11,
  PBX_HANGUP: 12,
  PBX_LOST: 13,
  PBX_REJECT: 14,
  PBX_TIMEOUT: 15,
  WARM_TRANSFER_AGENT_INVITE_CALLER_INITIAL: 16,
  WARM_TRANSFER_AGENT_INVITE_CALLER: 17,
  WARM_TRANSFER_AGENT_START_SOURCE: 18,
  WARM_TRANSFER_AGENT_END_SOURCE: 19,
  WARM_TRANSFER_AGENT_START_DESTINATION: 20,
  WARM_TRANSFER_AGENT_END_DESTINATION: 21,
  WARM_TRANSFER_OUTBOUND_INVITE_CALLER_INITIAL: 22,
  WARM_TRANSFER_OUTBOUND_INVITE_CALLER: 23,
  WARM_TRANSFER_OUTBOUND_START: 24,
  WARM_TRANSFER_OUTBOUND_END: 25,
  COLD_TRANSFER_OUTBOUND_START: 26,
  COLD_TRANSFER_AGENT_START_SOURCE: 27,
  COLD_TRANSFER_AGENT_END_SOURCE: 28,
  COLD_TRANSFER_AGENT_START_DESTINATION: 29,
  COLD_TRANSFER_AGENT_END_DESTINATION: 30,
  HOLD_START: 31,
  HOLD_END: 32,
  REQUEUE: 33,
  CALLER_SENT_TO_VOICEMAIL: 34,
  RECORDING_START: 35,
  RECORDING_STOP: 36,
  PBR_STARTED_RECORD: 37,
  PBR_FINISHED_RECORD: 38,
  ACD_LOGOUT: 39,
  ACD_REGISTER: 40,
  EXECUTED_AGENT_WEBLINK: 41,
  TRANSFER_HOLD_CALLER: 42,
  TRANSFER_UNHOLD_CALLER: 43,
  TRANSFER_HOLD_AGENT: 44,
  TRANSFER_UNHOLD_AGENT: 45,
  TRANSFER_HOLD: 46,
  TRANSFER_UNHOLD: 47,
  TRANSFER_HOLD_OUTBOUND: 48,
  TRANSFER_UNHOLD_OUTBOUND: 49,
  TRANSFER_ADD_OUTBOUND: 50,
  TRANSFER_REMOVE_OUTBOUND: 51,
  WARM_CALLER_TRANSFER_START: 52,
  WARM_CALLER_TRANSFER_INVITE_CALLER_INITIAL: 53,
  WARM_CALLER_TRANSFER_INVITE_CALLER: 54,
  WARM_CALLER_TRANSFER_END: 55
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentCallLogActionKey.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentCallLogActionKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentCallLogActionKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentCallLogActionKey.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentCallLogActionKey}
 */
proto.api.commons.AgentCallLogActionKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentCallLogActionKey;
  return proto.api.commons.AgentCallLogActionKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentCallLogActionKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentCallLogActionKey}
 */
proto.api.commons.AgentCallLogActionKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentCallLogActionKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentCallLogActionKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentCallLogActionKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentCallLogActionKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.AgentCallLogActionKey.Enum = {
  DNCL_ADD: 0,
  CALL_ENDED: 1,
  CALL_DISCONNECT: 2,
  CALLER_HUNGUP: 3,
  WARM_TRANSFER_AGENT_INVITE_CALLER_INITIAL: 4,
  WARM_TRANSFER_AGENT_INVITE_CALLER: 5,
  WARM_TRANSFER_AGENT_START: 6,
  WARM_TRANSFER_AGENT_END: 7,
  WARM_TRANSFER_OUTBOUND_INVITE_CALLER: 8,
  WARM_TRANSFER_OUTBOUND_INVITE_CALLER_INITIAL: 9,
  WARM_TRANSFER_OUTBOUND_START: 10,
  WARM_TRANSFER_OUTBOUND_END: 11,
  COLD_TRANSFER_AGENT_START: 12,
  COLD_TRANSFER_AGENT_END: 13,
  COLD_TRANSFER_OUTBOUND_START: 14,
  CALLBACK_SUSPEND_START: 15,
  CALLBACK_RESUMING: 16,
  VOICEMAIL_END: 17,
  CALLER_SENT_TO_VOICEMAIL: 18,
  HOLD_START: 19,
  HOLD_END: 20,
  RECORDING_START: 21,
  RECORDING_STOP: 22,
  CALL_SKILLS_SCORE: 23,
  CALL_SKILLS_MATCHED: 24,
  CALL_SKILLS_CURRENT: 25,
  CALL_SKILLS_INITIAL: 26,
  SKILLS_CHANGED_DROPSKILLS: 27,
  SKILLS_CHANGED_ADDSKILLS: 28,
  REQUEUE: 29,
  SKILLS_CHANGED_REQUEUE: 30,
  SCRUB_OVERRIDE: 31,
  CALLBACK_RESUMING_WITH_MANUAL_CALL_START: 32,
  CALLBACK_RESUMING_WITH_MANUAL_CALL_FINISH: 33,
  CALLBACK_RESUMING_WITH_MANUAL_CALL_TIMEDOUT: 34,
  CALLBACK_RESUMING_WITH_MANUAL_CALL_REPLACED: 35,
  TRANSFER_HOLD: 36,
  TRANSFER_UNHOLD: 37,
  WARM_CALLER_TRANSFER_SOURCE_START: 38,
  WARM_CALLER_TRANSFER_DESTINATION_START: 39,
  WARM_CALLER_TRANSFER_INVITE_CALLER_INITIAL: 40,
  WARM_CALLER_TRANSFER_INVITE_CALLER: 41,
  WARM_CALLER_TRANSFER_END: 42
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentCallLogActionValue.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentCallLogActionValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentCallLogActionValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentCallLogActionValue.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentCallLogActionValue}
 */
proto.api.commons.AgentCallLogActionValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentCallLogActionValue;
  return proto.api.commons.AgentCallLogActionValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentCallLogActionValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentCallLogActionValue}
 */
proto.api.commons.AgentCallLogActionValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentCallLogActionValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentCallLogActionValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentCallLogActionValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentCallLogActionValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.AgentCallLogActionValue.Enum = {
  UNSPECIFIED: 0,
  DNCL_RESULT_FAILED: 1,
  CALL_ENDED_CALLER_DISCONNECTED: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.HuntGroupParamKey.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.HuntGroupParamKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.HuntGroupParamKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HuntGroupParamKey.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.HuntGroupParamKey}
 */
proto.api.commons.HuntGroupParamKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.HuntGroupParamKey;
  return proto.api.commons.HuntGroupParamKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.HuntGroupParamKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.HuntGroupParamKey}
 */
proto.api.commons.HuntGroupParamKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.HuntGroupParamKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.HuntGroupParamKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.HuntGroupParamKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HuntGroupParamKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.HuntGroupParamKey.Enum = {
  AGENT_DIAL_IN_NUMBER: 0,
  AGENT_LOGIN_GUI_STATISTICS_TEMPLATE: 1,
  AGENT_PASSWORD_REQUIRES_LETTER: 2,
  AGENT_PASSWORD_REQUIRES_NUMBER: 3,
  AGENT_PASSWORD_REQUIRES_SYMBOL: 4,
  AGENT_PASSWORD_REQUIRES_UPPER_LOWER: 5,
  AGENT_SKILLS_REASSIGNMENT: 6,
  AGENT_STATS_CALL_HISTORY: 7,
  AGENT_TRIGGER: 8,
  AGENT_DISPOSITION_CONDITIONAL_DNCL: 9,
  ALLOWED_IPS: 10,
  ALLOW_AGENT_HOLD: 11,
  ALLOW_AGENT_INTERCOM: 12,
  ALLOW_AGENT_PASSWORD_RESET: 13,
  ALLOW_AGENT_PAUSE_CODE_RESET: 14,
  ALLOW_AGENT_TO_PAUSE: 15,
  ALLOW_CALLBACK_SCHEDULING: 16,
  ALLOW_EXPORT_PHONE_NUMBER_ACTIVITY: 17,
  ALLOW_MANUAL_APPROVAL_OF_CALLS: 18,
  ALLOW_MANUAL_DIALING: 19,
  ALLOW_PHONE_NUMBER_ACTIVITY: 20,
  ALLOW_PREVIEW_DIAL_CANCEL: 21,
  ALLOW_SCHEDULED_CALLBACK_CALLING: 22,
  ALLOW_TRANSFER_CALLS: 23,
  ALPHANUMERIC_KEYPAD: 24,
  AUTO_PAUSE_ON_MULTI_HOLD: 25,
  AUTO_PAUSE_ON_PREVIEW_CANCEL: 26,
  DEFAULT_AGENT_PAUSE_CODE: 27,
  DEFAULT_AGENT_TRANSFERS_FILTERING: 28,
  DEFAULT_DNCL_COUNTRY: 29,
  DEFAULT_DNCL_EXPIRATION: 30,
  DEFAULT_INBOUND_CALL_DNCL_EXPIRATION: 31,
  DEFAULT_MANUAL_CALL_DNCL_EXPIRATION: 32,
  DEFAULT_OUTBOUND_CALL_DNCL_EXPIRATION: 33,
  DEFAULT_PREVIEW_CALL_DNCL_EXPIRATION: 34,
  DEFAULT_SCHEDULED_CALLBACK_ROUTING: 35,
  DISCONNECT_CALL_CONFIRMATION: 36,
  DISPLAY_AGENT_TRANSFERS_FILTERING: 37,
  DISPLAY_DATA_COLLECT_DATA: 38,
  DISPLAY_DATA_DIPPED_DATA: 39,
  DISPLAY_IVR_KEYS_PRESSED: 40,
  DISPLAY_PHONE_ZIP_METADATA: 41,
  DISPLAY_RECORDING_INDICATOR: 42,
  DO_ALLOW_ADD_DNCL: 43,
  ENABLE_RECORDING_PAUSE: 44,
  HOLD_QUEUE_MONITORING: 45,
  HOLD_QUEUE_MONITORING_AGENT_ROUTING: 46,
  HOLD_QUEUE_MONITORING_PREFERRED_HUNT_GROUP_ROUTING: 47,
  HOLD_QUEUE_MONITORING_REQUIRED_HUNT_GROUP_ROUTING: 48,
  HUNT_GROUP_CLIENT_INFO_DISPLAY_TEMPLATE: 49,
  HUNT_GROUP_SCRIPT: 50,
  HUNT_GROUP_WEB_LINK: 51,
  MANUAL_APPROVAL_NUMBER_CONFIRMATION: 52,
  MANUAL_DIAL_AUTO_DNCL_ADD: 53,
  MANUAL_DIAL_DEFAULT_CALLER_ID: 54,
  MANUAL_DIAL_DEFAULT_COUNTRY: 55,
  MANUAL_DIAL_DISPLAY_COUNTRY_SELECT_MENU: 56,
  MANUAL_DIAL_DEFAULT_CALLER_ID_COUNTRY: 57,
  MANUAL_DIAL_DISPLAY_CALLER_ID_COUNTRY_SELECT_MENU: 58,
  MANUAL_DIAL_DISPLAY_OUTBOUND_NUMBER_PHONE_BOOK: 59,
  MANUAL_DIAL_DISPLAY_PHONE_BOOK: 60,
  MANUAL_DIAL_NUMBER_WHITE_LIST: 61,
  MANUAL_DIAL_OVERRIDE_CELL_SCRUB: 62,
  MANUAL_DIAL_OVERRIDE_RECORDING_SETTINGS: 64,
  MANUAL_DIAL_SCRUB_OVERRIDE: 65,
  MANUAL_DIAL_TIMEZONE_OVERRIDE: 66,
  MANUAL_DIAL_USER_EDITABLE_CALLER_ID: 67,
  MANUAL_QUEUE_CONFIGURATION_NAME: 68,
  MINIMUM_AGENT_PASSWORD_LENGTH: 69,
  PHONE_NUMBER_ACTIVITY_EDIT_RESPONSES: 70,
  PHONE_NUMBER_ACTIVITY_RECORDINGS_DOWNLOAD: 71,
  PREVIEW_DIAL_AUTO_DNCL_ADD: 72,
  PREVIEW_DIAL_CALL_TIMEOUT: 73,
  PREVIEW_DIAL_CONFIRMATION: 74,
  PREVIEW_QUEUE_CONFIGURATION_NAME: 75,
  RECORDING_DELAY: 76,
  REQUEUE_TRANSFER_QUEUE_CONFIGURATION_NAME: 77,
  SCHEDULED_CALLBACKS_RETRIEVAL_MODE: 78,
  SCHEDULED_CALLBACK_ROUTING_DISALLOWED: 79,
  TRANSFER_CALLS_DEFAULT_CALLER_ID: 80,
  TRANSFER_CALLS_DEFAULT_COUNTRY: 81,
  TRANSFER_CALLS_DEFAULT_TRANSFER_NUMBER: 82,
  TRANSFER_CALLS_DISPLAY_CALLER_ID_PHONE_BOOK: 83,
  TRANSFER_CALLS_DISPLAY_COUNTRY_SELECT_MENU: 84,
  TRANSFER_CALLS_DISPLAY_TRANSFER_NUMBER_PHONE_BOOK: 85,
  TRANSFER_CALLS_HAND_OFF_TYPE: 86,
  TRANSFER_CALLS_TRANSFER_TYPE: 87,
  TRANSFER_CALLS_USER_EDITABLE_CALLER_ID: 88,
  TRANSFER_CALLS_USER_EDITABLE_TRANSFER_NUMBER: 89,
  TRANSFER_RECORDING_STATUS: 90,
  USE_ADVANCED_GATEWAY_TITLE: 91,
  USE_AGENT_PAUSE_CODES: 92,
  USE_IP_BASED_AUTH: 93,
  HUNT_GROUP_REASSIGNMENT_DISALLOWED: 94,
  REQUEUE_TRANSFER_DISALLOWED_SKILLS: 95,
  ALLOW_MANUAL_APPROVAL_FOR_MESSAGING: 96,
  DISPLAY_SKILLS: 97,
  PBX_TRANSFER_DISALLOWED_EXTENSIONS: 98
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ReplaceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ReplaceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ReplaceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ReplaceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ReplaceConfig}
 */
proto.api.commons.ReplaceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ReplaceConfig;
  return proto.api.commons.ReplaceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ReplaceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ReplaceConfig}
 */
proto.api.commons.ReplaceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ReplaceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ReplaceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ReplaceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ReplaceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.ReplaceConfig.Enum = {
  NO_CHANGE: 0,
  TENANT: 1,
  REPLACE: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TransferMember.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TransferMember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TransferMember} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TransferMember.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayLabel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    memberType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TransferMember}
 */
proto.api.commons.TransferMember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TransferMember;
  return proto.api.commons.TransferMember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TransferMember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TransferMember}
 */
proto.api.commons.TransferMember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayLabel(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.TransferMemberType} */ (reader.readEnum());
      msg.setMemberType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TransferMember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TransferMember.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TransferMember} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TransferMember.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMemberType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.api.commons.TransferMember.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TransferMember} returns this
 */
proto.api.commons.TransferMember.prototype.setIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_label = 2;
 * @return {string}
 */
proto.api.commons.TransferMember.prototype.getDisplayLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TransferMember} returns this
 */
proto.api.commons.TransferMember.prototype.setDisplayLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TransferMemberType member_type = 3;
 * @return {!proto.api.commons.TransferMemberType}
 */
proto.api.commons.TransferMember.prototype.getMemberType = function() {
  return /** @type {!proto.api.commons.TransferMemberType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.TransferMemberType} value
 * @return {!proto.api.commons.TransferMember} returns this
 */
proto.api.commons.TransferMember.prototype.setMemberType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.AgentAlert.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.api.commons.AgentAlert.AlertCase = {
  ALERT_NOT_SET: 0,
  BACKOFFICE_MESSAGE: 1,
  DIRECTED_CALL_RINGING: 2,
  DIRECTED_CALL_HANGUP: 3
};

/**
 * @return {proto.api.commons.AgentAlert.AlertCase}
 */
proto.api.commons.AgentAlert.prototype.getAlertCase = function() {
  return /** @type {proto.api.commons.AgentAlert.AlertCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.AgentAlert.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentAlert.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentAlert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentAlert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentAlert.toObject = function(includeInstance, msg) {
  var f, obj = {
    backofficeMessage: (f = msg.getBackofficeMessage()) && proto.api.commons.AgentBackofficeMessageAlert.toObject(includeInstance, f),
    directedCallRinging: (f = msg.getDirectedCallRinging()) && proto.api.commons.AgentDirectedCallRingingAlert.toObject(includeInstance, f),
    directedCallHangup: (f = msg.getDirectedCallHangup()) && proto.api.commons.AgentDirectedCallHangupAlert.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentAlert}
 */
proto.api.commons.AgentAlert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentAlert;
  return proto.api.commons.AgentAlert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentAlert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentAlert}
 */
proto.api.commons.AgentAlert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.commons.AgentBackofficeMessageAlert;
      reader.readMessage(value,proto.api.commons.AgentBackofficeMessageAlert.deserializeBinaryFromReader);
      msg.setBackofficeMessage(value);
      break;
    case 2:
      var value = new proto.api.commons.AgentDirectedCallRingingAlert;
      reader.readMessage(value,proto.api.commons.AgentDirectedCallRingingAlert.deserializeBinaryFromReader);
      msg.setDirectedCallRinging(value);
      break;
    case 3:
      var value = new proto.api.commons.AgentDirectedCallHangupAlert;
      reader.readMessage(value,proto.api.commons.AgentDirectedCallHangupAlert.deserializeBinaryFromReader);
      msg.setDirectedCallHangup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentAlert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentAlert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentAlert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentAlert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackofficeMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.commons.AgentBackofficeMessageAlert.serializeBinaryToWriter
    );
  }
  f = message.getDirectedCallRinging();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.commons.AgentDirectedCallRingingAlert.serializeBinaryToWriter
    );
  }
  f = message.getDirectedCallHangup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.AgentDirectedCallHangupAlert.serializeBinaryToWriter
    );
  }
};


/**
 * optional AgentBackofficeMessageAlert backoffice_message = 1;
 * @return {?proto.api.commons.AgentBackofficeMessageAlert}
 */
proto.api.commons.AgentAlert.prototype.getBackofficeMessage = function() {
  return /** @type{?proto.api.commons.AgentBackofficeMessageAlert} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AgentBackofficeMessageAlert, 1));
};


/**
 * @param {?proto.api.commons.AgentBackofficeMessageAlert|undefined} value
 * @return {!proto.api.commons.AgentAlert} returns this
*/
proto.api.commons.AgentAlert.prototype.setBackofficeMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api.commons.AgentAlert.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentAlert} returns this
 */
proto.api.commons.AgentAlert.prototype.clearBackofficeMessage = function() {
  return this.setBackofficeMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentAlert.prototype.hasBackofficeMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AgentDirectedCallRingingAlert directed_call_ringing = 2;
 * @return {?proto.api.commons.AgentDirectedCallRingingAlert}
 */
proto.api.commons.AgentAlert.prototype.getDirectedCallRinging = function() {
  return /** @type{?proto.api.commons.AgentDirectedCallRingingAlert} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AgentDirectedCallRingingAlert, 2));
};


/**
 * @param {?proto.api.commons.AgentDirectedCallRingingAlert|undefined} value
 * @return {!proto.api.commons.AgentAlert} returns this
*/
proto.api.commons.AgentAlert.prototype.setDirectedCallRinging = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api.commons.AgentAlert.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentAlert} returns this
 */
proto.api.commons.AgentAlert.prototype.clearDirectedCallRinging = function() {
  return this.setDirectedCallRinging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentAlert.prototype.hasDirectedCallRinging = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AgentDirectedCallHangupAlert directed_call_hangup = 3;
 * @return {?proto.api.commons.AgentDirectedCallHangupAlert}
 */
proto.api.commons.AgentAlert.prototype.getDirectedCallHangup = function() {
  return /** @type{?proto.api.commons.AgentDirectedCallHangupAlert} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AgentDirectedCallHangupAlert, 3));
};


/**
 * @param {?proto.api.commons.AgentDirectedCallHangupAlert|undefined} value
 * @return {!proto.api.commons.AgentAlert} returns this
*/
proto.api.commons.AgentAlert.prototype.setDirectedCallHangup = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.commons.AgentAlert.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentAlert} returns this
 */
proto.api.commons.AgentAlert.prototype.clearDirectedCallHangup = function() {
  return this.setDirectedCallHangup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentAlert.prototype.hasDirectedCallHangup = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentBackofficeMessageAlert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentBackofficeMessageAlert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentBackofficeMessageAlert.toObject = function(includeInstance, msg) {
  var f, obj = {
    expireDuration: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    targetAgentSession: (f = msg.getTargetAgentSession()) && proto.api.commons.AgentSession.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    id: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentBackofficeMessageAlert}
 */
proto.api.commons.AgentBackofficeMessageAlert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentBackofficeMessageAlert;
  return proto.api.commons.AgentBackofficeMessageAlert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentBackofficeMessageAlert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentBackofficeMessageAlert}
 */
proto.api.commons.AgentBackofficeMessageAlert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireDuration(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.api.commons.AgentSession;
      reader.readMessage(value,proto.api.commons.AgentSession.deserializeBinaryFromReader);
      msg.setTargetAgentSession(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentBackofficeMessageAlert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentBackofficeMessageAlert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentBackofficeMessageAlert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpireDuration();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTargetAgentSession();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.AgentSession.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 expire_duration = 1;
 * @return {number}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.getExpireDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentBackofficeMessageAlert} returns this
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.setExpireDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.AgentBackofficeMessageAlert} returns this
*/
proto.api.commons.AgentBackofficeMessageAlert.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentBackofficeMessageAlert} returns this
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AgentSession target_agent_session = 3;
 * @return {?proto.api.commons.AgentSession}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.getTargetAgentSession = function() {
  return /** @type{?proto.api.commons.AgentSession} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AgentSession, 3));
};


/**
 * @param {?proto.api.commons.AgentSession|undefined} value
 * @return {!proto.api.commons.AgentBackofficeMessageAlert} returns this
*/
proto.api.commons.AgentBackofficeMessageAlert.prototype.setTargetAgentSession = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentBackofficeMessageAlert} returns this
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.clearTargetAgentSession = function() {
  return this.setTargetAgentSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.hasTargetAgentSession = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentBackofficeMessageAlert} returns this
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string id = 5;
 * @return {string}
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentBackofficeMessageAlert} returns this
 */
proto.api.commons.AgentBackofficeMessageAlert.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentDirectedCallRingingAlert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentDirectedCallRingingAlert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentDirectedCallRingingAlert.toObject = function(includeInstance, msg) {
  var f, obj = {
    expireDuration: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    targetAgentSession: (f = msg.getTargetAgentSession()) && proto.api.commons.AgentSession.toObject(includeInstance, f),
    callerSid: (f = msg.getCallerSid()) && proto.api.commons.CallerSid.toObject(includeInstance, f),
    callerId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    destinationNumber: jspb.Message.getFieldWithDefault(msg, 6, ""),
    id: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert}
 */
proto.api.commons.AgentDirectedCallRingingAlert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentDirectedCallRingingAlert;
  return proto.api.commons.AgentDirectedCallRingingAlert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentDirectedCallRingingAlert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert}
 */
proto.api.commons.AgentDirectedCallRingingAlert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireDuration(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.api.commons.AgentSession;
      reader.readMessage(value,proto.api.commons.AgentSession.deserializeBinaryFromReader);
      msg.setTargetAgentSession(value);
      break;
    case 4:
      var value = new proto.api.commons.CallerSid;
      reader.readMessage(value,proto.api.commons.CallerSid.deserializeBinaryFromReader);
      msg.setCallerSid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallerId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationNumber(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentDirectedCallRingingAlert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentDirectedCallRingingAlert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentDirectedCallRingingAlert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpireDuration();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTargetAgentSession();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.AgentSession.serializeBinaryToWriter
    );
  }
  f = message.getCallerSid();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.commons.CallerSid.serializeBinaryToWriter
    );
  }
  f = message.getCallerId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDestinationNumber();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int64 expire_duration = 1;
 * @return {number}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.getExpireDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.setExpireDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
*/
proto.api.commons.AgentDirectedCallRingingAlert.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AgentSession target_agent_session = 3;
 * @return {?proto.api.commons.AgentSession}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.getTargetAgentSession = function() {
  return /** @type{?proto.api.commons.AgentSession} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AgentSession, 3));
};


/**
 * @param {?proto.api.commons.AgentSession|undefined} value
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
*/
proto.api.commons.AgentDirectedCallRingingAlert.prototype.setTargetAgentSession = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.clearTargetAgentSession = function() {
  return this.setTargetAgentSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.hasTargetAgentSession = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CallerSid caller_sid = 4;
 * @return {?proto.api.commons.CallerSid}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.getCallerSid = function() {
  return /** @type{?proto.api.commons.CallerSid} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.CallerSid, 4));
};


/**
 * @param {?proto.api.commons.CallerSid|undefined} value
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
*/
proto.api.commons.AgentDirectedCallRingingAlert.prototype.setCallerSid = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.clearCallerSid = function() {
  return this.setCallerSid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.hasCallerSid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string caller_id = 5;
 * @return {string}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.getCallerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.setCallerId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string destination_number = 6;
 * @return {string}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.getDestinationNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.setDestinationNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string id = 7;
 * @return {string}
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentDirectedCallRingingAlert} returns this
 */
proto.api.commons.AgentDirectedCallRingingAlert.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentDirectedCallHangupAlert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentDirectedCallHangupAlert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentDirectedCallHangupAlert.toObject = function(includeInstance, msg) {
  var f, obj = {
    expireDuration: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    targetAgentSession: (f = msg.getTargetAgentSession()) && proto.api.commons.AgentSession.toObject(includeInstance, f),
    callerSid: (f = msg.getCallerSid()) && proto.api.commons.CallerSid.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert}
 */
proto.api.commons.AgentDirectedCallHangupAlert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentDirectedCallHangupAlert;
  return proto.api.commons.AgentDirectedCallHangupAlert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentDirectedCallHangupAlert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert}
 */
proto.api.commons.AgentDirectedCallHangupAlert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireDuration(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.api.commons.AgentSession;
      reader.readMessage(value,proto.api.commons.AgentSession.deserializeBinaryFromReader);
      msg.setTargetAgentSession(value);
      break;
    case 4:
      var value = new proto.api.commons.CallerSid;
      reader.readMessage(value,proto.api.commons.CallerSid.deserializeBinaryFromReader);
      msg.setCallerSid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentDirectedCallHangupAlert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentDirectedCallHangupAlert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentDirectedCallHangupAlert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpireDuration();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTargetAgentSession();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.AgentSession.serializeBinaryToWriter
    );
  }
  f = message.getCallerSid();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.commons.CallerSid.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 expire_duration = 1;
 * @return {number}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.getExpireDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.setExpireDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
*/
proto.api.commons.AgentDirectedCallHangupAlert.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AgentSession target_agent_session = 3;
 * @return {?proto.api.commons.AgentSession}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.getTargetAgentSession = function() {
  return /** @type{?proto.api.commons.AgentSession} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AgentSession, 3));
};


/**
 * @param {?proto.api.commons.AgentSession|undefined} value
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
*/
proto.api.commons.AgentDirectedCallHangupAlert.prototype.setTargetAgentSession = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.clearTargetAgentSession = function() {
  return this.setTargetAgentSession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.hasTargetAgentSession = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CallerSid caller_sid = 4;
 * @return {?proto.api.commons.CallerSid}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.getCallerSid = function() {
  return /** @type{?proto.api.commons.CallerSid} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.CallerSid, 4));
};


/**
 * @param {?proto.api.commons.CallerSid|undefined} value
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
*/
proto.api.commons.AgentDirectedCallHangupAlert.prototype.setCallerSid = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.clearCallerSid = function() {
  return this.setCallerSid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.hasCallerSid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string id = 5;
 * @return {string}
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentDirectedCallHangupAlert} returns this
 */
proto.api.commons.AgentDirectedCallHangupAlert.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.AgentState.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AgentState.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AgentState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AgentState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentState.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    statusDesc: jspb.Message.getFieldWithDefault(msg, 3, 0),
    paused: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    queue: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currentSessionId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lastStatusChange: jspb.Message.getFieldWithDefault(msg, 7, 0),
    monitoring: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    callsCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    lastSipCode: jspb.Message.getFieldWithDefault(msg, 10, 0),
    agentPeerIsLostCall: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    disabled: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    callerWasSuspended: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    transferMembersList: jspb.Message.toObjectList(msg.getTransferMembersList(),
    proto.api.commons.TransferMember.toObject, includeInstance),
    agentPeerIsDirectToAgent: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    userId: jspb.Message.getFieldWithDefault(msg, 16, ""),
    agentSid: jspb.Message.getFieldWithDefault(msg, 17, 0),
    asmSessionSid: jspb.Message.getFieldWithDefault(msg, 18, 0),
    agentIsMuted: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AgentState}
 */
proto.api.commons.AgentState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AgentState;
  return proto.api.commons.AgentState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AgentState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AgentState}
 */
proto.api.commons.AgentState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.AgentStatus.Enum} */ (reader.readEnum());
      msg.setStatusDesc(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaused(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentSessionId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastStatusChange(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMonitoring(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallsCount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastSipCode(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgentPeerIsLostCall(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCallerWasSuspended(value);
      break;
    case 14:
      var value = new proto.api.commons.TransferMember;
      reader.readMessage(value,proto.api.commons.TransferMember.deserializeBinaryFromReader);
      msg.addTransferMembers(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgentPeerIsDirectToAgent(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSid(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAsmSessionSid(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAgentIsMuted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AgentState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AgentState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AgentState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AgentState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStatusDesc();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPaused();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQueue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrentSessionId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getLastStatusChange();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getMonitoring();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCallsCount();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getLastSipCode();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getAgentPeerIsLostCall();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getCallerWasSuspended();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getTransferMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.api.commons.TransferMember.serializeBinaryToWriter
    );
  }
  f = message.getAgentPeerIsDirectToAgent();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getAgentSid();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getAsmSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getAgentIsMuted();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional int64 status = 2;
 * @return {number}
 */
proto.api.commons.AgentState.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional AgentStatus.Enum status_desc = 3;
 * @return {!proto.api.commons.AgentStatus.Enum}
 */
proto.api.commons.AgentState.prototype.getStatusDesc = function() {
  return /** @type {!proto.api.commons.AgentStatus.Enum} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.AgentStatus.Enum} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setStatusDesc = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool paused = 4;
 * @return {boolean}
 */
proto.api.commons.AgentState.prototype.getPaused = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setPaused = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string queue = 5;
 * @return {string}
 */
proto.api.commons.AgentState.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setQueue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 current_session_id = 6;
 * @return {number}
 */
proto.api.commons.AgentState.prototype.getCurrentSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setCurrentSessionId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 last_status_change = 7;
 * @return {number}
 */
proto.api.commons.AgentState.prototype.getLastStatusChange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setLastStatusChange = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool monitoring = 8;
 * @return {boolean}
 */
proto.api.commons.AgentState.prototype.getMonitoring = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setMonitoring = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int64 calls_count = 9;
 * @return {number}
 */
proto.api.commons.AgentState.prototype.getCallsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setCallsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 last_sip_code = 10;
 * @return {number}
 */
proto.api.commons.AgentState.prototype.getLastSipCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setLastSipCode = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool agent_peer_is_lost_call = 11;
 * @return {boolean}
 */
proto.api.commons.AgentState.prototype.getAgentPeerIsLostCall = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setAgentPeerIsLostCall = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool disabled = 12;
 * @return {boolean}
 */
proto.api.commons.AgentState.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setDisabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool caller_was_suspended = 13;
 * @return {boolean}
 */
proto.api.commons.AgentState.prototype.getCallerWasSuspended = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setCallerWasSuspended = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * repeated TransferMember transfer_members = 14;
 * @return {!Array<!proto.api.commons.TransferMember>}
 */
proto.api.commons.AgentState.prototype.getTransferMembersList = function() {
  return /** @type{!Array<!proto.api.commons.TransferMember>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.TransferMember, 14));
};


/**
 * @param {!Array<!proto.api.commons.TransferMember>} value
 * @return {!proto.api.commons.AgentState} returns this
*/
proto.api.commons.AgentState.prototype.setTransferMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.api.commons.TransferMember=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.TransferMember}
 */
proto.api.commons.AgentState.prototype.addTransferMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.api.commons.TransferMember, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.clearTransferMembersList = function() {
  return this.setTransferMembersList([]);
};


/**
 * optional bool agent_peer_is_direct_to_agent = 15;
 * @return {boolean}
 */
proto.api.commons.AgentState.prototype.getAgentPeerIsDirectToAgent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setAgentPeerIsDirectToAgent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string user_id = 16;
 * @return {string}
 */
proto.api.commons.AgentState.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int64 agent_sid = 17;
 * @return {number}
 */
proto.api.commons.AgentState.prototype.getAgentSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setAgentSid = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 asm_session_sid = 18;
 * @return {number}
 */
proto.api.commons.AgentState.prototype.getAsmSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setAsmSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional bool agent_is_muted = 19;
 * @return {boolean}
 */
proto.api.commons.AgentState.prototype.getAgentIsMuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AgentState} returns this
 */
proto.api.commons.AgentState.prototype.setAgentIsMuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AudioSenderPacket.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AudioSenderPacket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AudioSenderPacket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AudioSenderPacket.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: jspb.Message.getFieldWithDefault(msg, 1, 0),
    frame: msg.getFrame_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AudioSenderPacket}
 */
proto.api.commons.AudioSenderPacket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AudioSenderPacket;
  return proto.api.commons.AudioSenderPacket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AudioSenderPacket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AudioSenderPacket}
 */
proto.api.commons.AudioSenderPacket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFrame(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AudioSenderPacket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AudioSenderPacket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AudioSenderPacket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AudioSenderPacket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFrame_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional int32 direction = 1;
 * @return {number}
 */
proto.api.commons.AudioSenderPacket.prototype.getDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AudioSenderPacket} returns this
 */
proto.api.commons.AudioSenderPacket.prototype.setDirection = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes frame = 2;
 * @return {string}
 */
proto.api.commons.AudioSenderPacket.prototype.getFrame = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes frame = 2;
 * This is a type-conversion wrapper around `getFrame()`
 * @return {string}
 */
proto.api.commons.AudioSenderPacket.prototype.getFrame_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFrame()));
};


/**
 * optional bytes frame = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFrame()`
 * @return {!Uint8Array}
 */
proto.api.commons.AudioSenderPacket.prototype.getFrame_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFrame()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.api.commons.AudioSenderPacket} returns this
 */
proto.api.commons.AudioSenderPacket.prototype.setFrame = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.api.commons.ACDStatus = {
  ACD_UNKNOWN: 0,
  AGENT_SESSION_LOGGING_IN: 4100,
  AGENT_SESSION_LOGGED_IN: 4110,
  AGENT_SESSION_COMPLETED: 4200,
  AGENT_SESSION_SUMMED: 4300,
  AGENT_SESSION_ACCOUNTINGEXPORT: 4400
};

/**
 * @enum {number}
 */
proto.api.commons.AgentCallLogCallEnded = {
  AGENT_CANCELLED: 0,
  CALLER_DISCONNECTED: 1,
  NOT_CONNECTED: 2,
  AGENT_LOST: 3,
  AGENT_HANGUP: 4,
  CALLER_HANGUP: 5,
  CALL_END_ESTIMATE: 6
};

/**
 * @enum {number}
 */
proto.api.commons.HoldType = {
  UNKNOWN: 0,
  SIMPLE: 1,
  MULTI: 2
};

/**
 * @enum {number}
 */
proto.api.commons.QueuedNotificationType = {
  QUEUEDNOTIFICATIONTYPE_GENERAL_INITIAL: 0,
  QUEUEDNOTIFICATIONTYPE_PBX_INITIAL: 1,
  QUEUEDNOTIFICATIONTYPE_AGENT_BOUND_INITIAL: 2,
  QUEUEDNOTIFICATIONTYPE_GENERAL_REQUEUED: 3,
  QUEUEDNOTIFICATIONTYPE_AGENT_BOUND_REQUEUED: 4
};

/**
 * @enum {number}
 */
proto.api.commons.TransferMemberType = {
  TRANSFERMEMBERTYPE_AGENT: 0,
  TRANSFERMEMBERTYPE_CALLER: 1,
  TRANSFERMEMBERTYPE_OUTBOUND: 2
};

/**
 * @enum {number}
 */
proto.api.commons.DTMFDigit = {
  DTMFDIGIT_0: 0,
  DTMFDIGIT_1: 1,
  DTMFDIGIT_2: 2,
  DTMFDIGIT_3: 3,
  DTMFDIGIT_4: 4,
  DTMFDIGIT_5: 5,
  DTMFDIGIT_6: 6,
  DTMFDIGIT_7: 7,
  DTMFDIGIT_8: 8,
  DTMFDIGIT_9: 9,
  DTMFDIGIT_A: 10,
  DTMFDIGIT_B: 11,
  DTMFDIGIT_C: 12,
  DTMFDIGIT_D: 13,
  DTMFDIGIT_STAR: 14,
  DTMFDIGIT_POUND: 15
};

goog.object.extend(exports, proto.api.commons);
