// source: api/commons/call.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_results_pb = require('../../api/commons/results_pb.js');
goog.object.extend(proto, api_commons_results_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.commons.CallStatus', null, global);
goog.exportSymbol('proto.api.commons.SimpleCallData', null, global);
goog.exportSymbol('proto.api.commons.SimpleKeyValue', null, global);
goog.exportSymbol('proto.api.commons.SimpleRecordData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SimpleCallData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.SimpleCallData.repeatedFields_, null);
};
goog.inherits(proto.api.commons.SimpleCallData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SimpleCallData.displayName = 'proto.api.commons.SimpleCallData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SimpleKeyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.SimpleKeyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SimpleKeyValue.displayName = 'proto.api.commons.SimpleKeyValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SimpleRecordData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.SimpleRecordData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SimpleRecordData.displayName = 'proto.api.commons.SimpleRecordData';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.SimpleCallData.repeatedFields_ = [34,35];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SimpleCallData.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SimpleCallData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SimpleCallData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleCallData.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    callSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    taskGroupSid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    clientSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    countrySid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    agentSid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    callerId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 9, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 10, ""),
    deliveryDuration: jspb.Message.getFieldWithDefault(msg, 11, 0),
    linkCallDuration: jspb.Message.getFieldWithDefault(msg, 12, 0),
    result: jspb.Message.getFieldWithDefault(msg, 13, 0),
    sipCode: jspb.Message.getFieldWithDefault(msg, 14, 0),
    doRecord: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    recordingFileName: jspb.Message.getFieldWithDefault(msg, 16, ""),
    isDialValidationOk: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    isTimeZoneScrubOk: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isCellPhoneScrubOk: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    isCustomCallingRulesScrubOk: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    isDnclScrubOk: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    useGlobalTimeZoneScrub: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    doCellPhoneScrub: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    doDnclScrub: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    callDataType: jspb.Message.getFieldWithDefault(msg, 26, ""),
    callerIdCountryCode: jspb.Message.getFieldWithDefault(msg, 28, ""),
    callerIdCountrySid: jspb.Message.getFieldWithDefault(msg, 29, 0),
    zipCode: jspb.Message.getFieldWithDefault(msg, 30, ""),
    isPreviewByRecord: jspb.Message.getBooleanFieldWithDefault(msg, 31, false),
    ruleSetName: jspb.Message.getFieldWithDefault(msg, 32, ""),
    isNaturalComplianceOk: jspb.Message.getBooleanFieldWithDefault(msg, 33, false),
    simpleMetaDataList: jspb.Message.toObjectList(msg.getSimpleMetaDataList(),
    proto.api.commons.SimpleKeyValue.toObject, includeInstance),
    simpleResultMetaDataList: jspb.Message.toObjectList(msg.getSimpleResultMetaDataList(),
    proto.api.commons.SimpleKeyValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SimpleCallData}
 */
proto.api.commons.SimpleCallData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SimpleCallData;
  return proto.api.commons.SimpleCallData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SimpleCallData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SimpleCallData}
 */
proto.api.commons.SimpleCallData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskGroupSid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClientSid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCountrySid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallerId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeliveryDuration(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLinkCallDuration(value);
      break;
    case 13:
      var value = /** @type {!proto.api.commons.CallResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSipCode(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoRecord(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordingFileName(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDialValidationOk(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTimeZoneScrubOk(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCellPhoneScrubOk(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCustomCallingRulesScrubOk(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDnclScrubOk(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseGlobalTimeZoneScrub(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoCellPhoneScrub(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDoDnclScrub(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallDataType(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallerIdCountryCode(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallerIdCountrySid(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipCode(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPreviewByRecord(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setRuleSetName(value);
      break;
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNaturalComplianceOk(value);
      break;
    case 34:
      var value = new proto.api.commons.SimpleKeyValue;
      reader.readMessage(value,proto.api.commons.SimpleKeyValue.deserializeBinaryFromReader);
      msg.addSimpleMetaData(value);
      break;
    case 35:
      var value = new proto.api.commons.SimpleKeyValue;
      reader.readMessage(value,proto.api.commons.SimpleKeyValue.deserializeBinaryFromReader);
      msg.addSimpleResultMetaData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SimpleCallData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SimpleCallData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SimpleCallData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleCallData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTaskGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getClientSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCountrySid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAgentSid();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getCallerId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDeliveryDuration();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getLinkCallDuration();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getSipCode();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getDoRecord();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getRecordingFileName();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIsDialValidationOk();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsTimeZoneScrubOk();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsCellPhoneScrubOk();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getIsCustomCallingRulesScrubOk();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getIsDnclScrubOk();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getUseGlobalTimeZoneScrub();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getDoCellPhoneScrub();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getDoDnclScrub();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getCallDataType();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getCallerIdCountryCode();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getCallerIdCountrySid();
  if (f !== 0) {
    writer.writeInt64(
      29,
      f
    );
  }
  f = message.getZipCode();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getIsPreviewByRecord();
  if (f) {
    writer.writeBool(
      31,
      f
    );
  }
  f = message.getRuleSetName();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getIsNaturalComplianceOk();
  if (f) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getSimpleMetaDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      34,
      f,
      proto.api.commons.SimpleKeyValue.serializeBinaryToWriter
    );
  }
  f = message.getSimpleResultMetaDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      35,
      f,
      proto.api.commons.SimpleKeyValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 task_sid = 1;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getTaskSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setTaskSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 call_sid = 2;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 task_group_sid = 3;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getTaskGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setTaskGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 client_sid = 4;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getClientSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setClientSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 country_sid = 5;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getCountrySid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setCountrySid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 agent_sid = 6;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getAgentSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setAgentSid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 start_time = 7;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string caller_id = 8;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getCallerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setCallerId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string phone_number = 9;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string country_code = 10;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 delivery_duration = 11;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getDeliveryDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setDeliveryDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 link_call_duration = 12;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getLinkCallDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setLinkCallDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional CallResult result = 13;
 * @return {!proto.api.commons.CallResult}
 */
proto.api.commons.SimpleCallData.prototype.getResult = function() {
  return /** @type {!proto.api.commons.CallResult} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.api.commons.CallResult} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional int32 sip_code = 14;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getSipCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setSipCode = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bool do_record = 15;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getDoRecord = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setDoRecord = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string recording_file_name = 16;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getRecordingFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setRecordingFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bool is_dial_validation_ok = 17;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getIsDialValidationOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setIsDialValidationOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool is_time_zone_scrub_ok = 18;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getIsTimeZoneScrubOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setIsTimeZoneScrubOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool is_cell_phone_scrub_ok = 19;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getIsCellPhoneScrubOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setIsCellPhoneScrubOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool is_custom_calling_rules_scrub_ok = 20;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getIsCustomCallingRulesScrubOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setIsCustomCallingRulesScrubOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool is_dncl_scrub_ok = 21;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getIsDnclScrubOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setIsDnclScrubOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool use_global_time_zone_scrub = 22;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getUseGlobalTimeZoneScrub = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setUseGlobalTimeZoneScrub = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool do_cell_phone_scrub = 23;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getDoCellPhoneScrub = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setDoCellPhoneScrub = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool do_dncl_scrub = 25;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getDoDnclScrub = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setDoDnclScrub = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional string call_data_type = 26;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getCallDataType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setCallDataType = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string caller_id_country_code = 28;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getCallerIdCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setCallerIdCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional int64 caller_id_country_sid = 29;
 * @return {number}
 */
proto.api.commons.SimpleCallData.prototype.getCallerIdCountrySid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setCallerIdCountrySid = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional string zip_code = 30;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getZipCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setZipCode = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional bool is_preview_by_record = 31;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getIsPreviewByRecord = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 31, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setIsPreviewByRecord = function(value) {
  return jspb.Message.setProto3BooleanField(this, 31, value);
};


/**
 * optional string rule_set_name = 32;
 * @return {string}
 */
proto.api.commons.SimpleCallData.prototype.getRuleSetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setRuleSetName = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional bool is_natural_compliance_ok = 33;
 * @return {boolean}
 */
proto.api.commons.SimpleCallData.prototype.getIsNaturalComplianceOk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.setIsNaturalComplianceOk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 33, value);
};


/**
 * repeated SimpleKeyValue simple_meta_data = 34;
 * @return {!Array<!proto.api.commons.SimpleKeyValue>}
 */
proto.api.commons.SimpleCallData.prototype.getSimpleMetaDataList = function() {
  return /** @type{!Array<!proto.api.commons.SimpleKeyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.SimpleKeyValue, 34));
};


/**
 * @param {!Array<!proto.api.commons.SimpleKeyValue>} value
 * @return {!proto.api.commons.SimpleCallData} returns this
*/
proto.api.commons.SimpleCallData.prototype.setSimpleMetaDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 34, value);
};


/**
 * @param {!proto.api.commons.SimpleKeyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.SimpleKeyValue}
 */
proto.api.commons.SimpleCallData.prototype.addSimpleMetaData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 34, opt_value, proto.api.commons.SimpleKeyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.clearSimpleMetaDataList = function() {
  return this.setSimpleMetaDataList([]);
};


/**
 * repeated SimpleKeyValue simple_result_meta_data = 35;
 * @return {!Array<!proto.api.commons.SimpleKeyValue>}
 */
proto.api.commons.SimpleCallData.prototype.getSimpleResultMetaDataList = function() {
  return /** @type{!Array<!proto.api.commons.SimpleKeyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.SimpleKeyValue, 35));
};


/**
 * @param {!Array<!proto.api.commons.SimpleKeyValue>} value
 * @return {!proto.api.commons.SimpleCallData} returns this
*/
proto.api.commons.SimpleCallData.prototype.setSimpleResultMetaDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 35, value);
};


/**
 * @param {!proto.api.commons.SimpleKeyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.SimpleKeyValue}
 */
proto.api.commons.SimpleCallData.prototype.addSimpleResultMetaData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 35, opt_value, proto.api.commons.SimpleKeyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.SimpleCallData} returns this
 */
proto.api.commons.SimpleCallData.prototype.clearSimpleResultMetaDataList = function() {
  return this.setSimpleResultMetaDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SimpleKeyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SimpleKeyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SimpleKeyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleKeyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SimpleKeyValue}
 */
proto.api.commons.SimpleKeyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SimpleKeyValue;
  return proto.api.commons.SimpleKeyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SimpleKeyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SimpleKeyValue}
 */
proto.api.commons.SimpleKeyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SimpleKeyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SimpleKeyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SimpleKeyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleKeyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.commons.SimpleKeyValue.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleKeyValue} returns this
 */
proto.api.commons.SimpleKeyValue.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api.commons.SimpleKeyValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleKeyValue} returns this
 */
proto.api.commons.SimpleKeyValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SimpleRecordData.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SimpleRecordData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SimpleRecordData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleRecordData.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    taskGroupSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    agentSid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    stopTime: (f = msg.getStopTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SimpleRecordData}
 */
proto.api.commons.SimpleRecordData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SimpleRecordData;
  return proto.api.commons.SimpleRecordData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SimpleRecordData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SimpleRecordData}
 */
proto.api.commons.SimpleRecordData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskGroupSid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSid(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStopTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SimpleRecordData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SimpleRecordData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SimpleRecordData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleRecordData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTaskGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAgentSid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStopTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 task_sid = 1;
 * @return {number}
 */
proto.api.commons.SimpleRecordData.prototype.getTaskSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleRecordData} returns this
 */
proto.api.commons.SimpleRecordData.prototype.setTaskSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 task_group_sid = 2;
 * @return {number}
 */
proto.api.commons.SimpleRecordData.prototype.getTaskGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleRecordData} returns this
 */
proto.api.commons.SimpleRecordData.prototype.setTaskGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 agent_sid = 3;
 * @return {number}
 */
proto.api.commons.SimpleRecordData.prototype.getAgentSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleRecordData} returns this
 */
proto.api.commons.SimpleRecordData.prototype.setAgentSid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SimpleRecordData.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SimpleRecordData} returns this
*/
proto.api.commons.SimpleRecordData.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SimpleRecordData} returns this
 */
proto.api.commons.SimpleRecordData.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SimpleRecordData.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp stop_time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SimpleRecordData.prototype.getStopTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SimpleRecordData} returns this
*/
proto.api.commons.SimpleRecordData.prototype.setStopTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SimpleRecordData} returns this
 */
proto.api.commons.SimpleRecordData.prototype.clearStopTime = function() {
  return this.setStopTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SimpleRecordData.prototype.hasStopTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.api.commons.CallStatus = {
  CALL_UNKNOWN: 0,
  CALL_SCHEDULED: 3100,
  CALL_RUNNING: 3200,
  CALL_COMPLETED: 3300
};

goog.object.extend(exports, proto.api.commons);
