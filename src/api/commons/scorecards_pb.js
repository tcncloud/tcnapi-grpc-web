// source: api/commons/scorecards.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_acd_pb = require('../../api/commons/acd_pb.js');
goog.object.extend(proto, api_commons_acd_pb);
var api_commons_omnichannel_pb = require('../../api/commons/omnichannel_pb.js');
goog.object.extend(proto, api_commons_omnichannel_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.commons.AutoEvaluation', null, global);
goog.exportSymbol('proto.api.commons.AutoEvaluation.CategoryInfo', null, global);
goog.exportSymbol('proto.api.commons.AutoEvaluation.ScorecardInfo', null, global);
goog.exportSymbol('proto.api.commons.AutoEvaluationQuestion', null, global);
goog.exportSymbol('proto.api.commons.AutoEvaluationSection', null, global);
goog.exportSymbol('proto.api.commons.AutoQuestion', null, global);
goog.exportSymbol('proto.api.commons.AutoQuestion.FlagExpr', null, global);
goog.exportSymbol('proto.api.commons.AutoQuestion.FlagExpr.Flag', null, global);
goog.exportSymbol('proto.api.commons.Category', null, global);
goog.exportSymbol('proto.api.commons.CategoryType', null, global);
goog.exportSymbol('proto.api.commons.Evaluation', null, global);
goog.exportSymbol('proto.api.commons.Evaluation.CustomField', null, global);
goog.exportSymbol('proto.api.commons.EvaluationQuestion', null, global);
goog.exportSymbol('proto.api.commons.EvaluationQuestion.Answer', null, global);
goog.exportSymbol('proto.api.commons.EvaluationQuestion.Answer.ResultCase', null, global);
goog.exportSymbol('proto.api.commons.EvaluationSection', null, global);
goog.exportSymbol('proto.api.commons.EvaluationState', null, global);
goog.exportSymbol('proto.api.commons.EvaluationType', null, global);
goog.exportSymbol('proto.api.commons.FailType', null, global);
goog.exportSymbol('proto.api.commons.Question', null, global);
goog.exportSymbol('proto.api.commons.QuestionFocus', null, global);
goog.exportSymbol('proto.api.commons.RiskLevel', null, global);
goog.exportSymbol('proto.api.commons.ScoreType', null, global);
goog.exportSymbol('proto.api.commons.Scorecard', null, global);
goog.exportSymbol('proto.api.commons.ScorecardQuestion', null, global);
goog.exportSymbol('proto.api.commons.ScorecardQuestion.Answer', null, global);
goog.exportSymbol('proto.api.commons.ScorecardQuestion.Answer.ResultCase', null, global);
goog.exportSymbol('proto.api.commons.ScorecardQuestion.MultiSelect', null, global);
goog.exportSymbol('proto.api.commons.ScorecardState', null, global);
goog.exportSymbol('proto.api.commons.Section', null, global);
goog.exportSymbol('proto.api.commons.SmartEvaluation', null, global);
goog.exportSymbol('proto.api.commons.SmartEvaluationQuestion', null, global);
goog.exportSymbol('proto.api.commons.SmartEvaluationQuestion.Answer', null, global);
goog.exportSymbol('proto.api.commons.SmartEvaluationQuestion.Answer.ResultCase', null, global);
goog.exportSymbol('proto.api.commons.SmartEvaluationSection', null, global);
goog.exportSymbol('proto.api.commons.SmartQuestion', null, global);
goog.exportSymbol('proto.api.commons.SmartQuestion.Answer', null, global);
goog.exportSymbol('proto.api.commons.SmartQuestion.Answer.ResultCase', null, global);
goog.exportSymbol('proto.api.commons.TimeFilter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TimeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.TimeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TimeFilter.displayName = 'proto.api.commons.TimeFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.Category.repeatedFields_, null);
};
goog.inherits(proto.api.commons.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Category.displayName = 'proto.api.commons.Category';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Evaluation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.Evaluation.repeatedFields_, null);
};
goog.inherits(proto.api.commons.Evaluation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Evaluation.displayName = 'proto.api.commons.Evaluation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Evaluation.CustomField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Evaluation.CustomField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Evaluation.CustomField.displayName = 'proto.api.commons.Evaluation.CustomField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.EvaluationSection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.EvaluationSection.repeatedFields_, null);
};
goog.inherits(proto.api.commons.EvaluationSection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.EvaluationSection.displayName = 'proto.api.commons.EvaluationSection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.EvaluationQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.EvaluationQuestion.repeatedFields_, null);
};
goog.inherits(proto.api.commons.EvaluationQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.EvaluationQuestion.displayName = 'proto.api.commons.EvaluationQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.EvaluationQuestion.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_);
};
goog.inherits(proto.api.commons.EvaluationQuestion.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.EvaluationQuestion.Answer.displayName = 'proto.api.commons.EvaluationQuestion.Answer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoEvaluation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.AutoEvaluation.repeatedFields_, null);
};
goog.inherits(proto.api.commons.AutoEvaluation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoEvaluation.displayName = 'proto.api.commons.AutoEvaluation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoEvaluation.ScorecardInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AutoEvaluation.ScorecardInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoEvaluation.ScorecardInfo.displayName = 'proto.api.commons.AutoEvaluation.ScorecardInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoEvaluation.CategoryInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AutoEvaluation.CategoryInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoEvaluation.CategoryInfo.displayName = 'proto.api.commons.AutoEvaluation.CategoryInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoEvaluationQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.AutoEvaluationQuestion.repeatedFields_, null);
};
goog.inherits(proto.api.commons.AutoEvaluationQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoEvaluationQuestion.displayName = 'proto.api.commons.AutoEvaluationQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoEvaluationSection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.AutoEvaluationSection.repeatedFields_, null);
};
goog.inherits(proto.api.commons.AutoEvaluationSection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoEvaluationSection.displayName = 'proto.api.commons.AutoEvaluationSection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Question = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.Question.repeatedFields_, null);
};
goog.inherits(proto.api.commons.Question, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Question.displayName = 'proto.api.commons.Question';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ScorecardQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.ScorecardQuestion.repeatedFields_, null);
};
goog.inherits(proto.api.commons.ScorecardQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ScorecardQuestion.displayName = 'proto.api.commons.ScorecardQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ScorecardQuestion.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_);
};
goog.inherits(proto.api.commons.ScorecardQuestion.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ScorecardQuestion.Answer.displayName = 'proto.api.commons.ScorecardQuestion.Answer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ScorecardQuestion.MultiSelect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ScorecardQuestion.MultiSelect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ScorecardQuestion.MultiSelect.displayName = 'proto.api.commons.ScorecardQuestion.MultiSelect';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Section = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.Section.repeatedFields_, null);
};
goog.inherits(proto.api.commons.Section, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Section.displayName = 'proto.api.commons.Section';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Scorecard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.Scorecard.repeatedFields_, null);
};
goog.inherits(proto.api.commons.Scorecard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Scorecard.displayName = 'proto.api.commons.Scorecard';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AutoQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoQuestion.displayName = 'proto.api.commons.AutoQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoQuestion.FlagExpr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.AutoQuestion.FlagExpr.repeatedFields_, null);
};
goog.inherits(proto.api.commons.AutoQuestion.FlagExpr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoQuestion.FlagExpr.displayName = 'proto.api.commons.AutoQuestion.FlagExpr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.AutoQuestion.FlagExpr.Flag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AutoQuestion.FlagExpr.Flag.displayName = 'proto.api.commons.AutoQuestion.FlagExpr.Flag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SmartQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.SmartQuestion.repeatedFields_, null);
};
goog.inherits(proto.api.commons.SmartQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SmartQuestion.displayName = 'proto.api.commons.SmartQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SmartQuestion.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.SmartQuestion.Answer.oneofGroups_);
};
goog.inherits(proto.api.commons.SmartQuestion.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SmartQuestion.Answer.displayName = 'proto.api.commons.SmartQuestion.Answer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SmartEvaluation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.SmartEvaluation.repeatedFields_, null);
};
goog.inherits(proto.api.commons.SmartEvaluation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SmartEvaluation.displayName = 'proto.api.commons.SmartEvaluation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SmartEvaluationSection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.SmartEvaluationSection.repeatedFields_, null);
};
goog.inherits(proto.api.commons.SmartEvaluationSection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SmartEvaluationSection.displayName = 'proto.api.commons.SmartEvaluationSection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SmartEvaluationQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.SmartEvaluationQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SmartEvaluationQuestion.displayName = 'proto.api.commons.SmartEvaluationQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SmartEvaluationQuestion.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_);
};
goog.inherits(proto.api.commons.SmartEvaluationQuestion.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SmartEvaluationQuestion.Answer.displayName = 'proto.api.commons.SmartEvaluationQuestion.Answer';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TimeFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TimeFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TimeFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TimeFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
eq: (f = msg.getEq()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
gte: (f = msg.getGte()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
lte: (f = msg.getLte()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
gt: (f = msg.getGt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
lt: (f = msg.getLt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TimeFilter}
 */
proto.api.commons.TimeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TimeFilter;
  return proto.api.commons.TimeFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TimeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TimeFilter}
 */
proto.api.commons.TimeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEq(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setGte(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLte(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setGt(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TimeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TimeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TimeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TimeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEq();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getGte();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLte();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getGt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp eq = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TimeFilter.prototype.getEq = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TimeFilter} returns this
*/
proto.api.commons.TimeFilter.prototype.setEq = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TimeFilter} returns this
 */
proto.api.commons.TimeFilter.prototype.clearEq = function() {
  return this.setEq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TimeFilter.prototype.hasEq = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp gte = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TimeFilter.prototype.getGte = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TimeFilter} returns this
*/
proto.api.commons.TimeFilter.prototype.setGte = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TimeFilter} returns this
 */
proto.api.commons.TimeFilter.prototype.clearGte = function() {
  return this.setGte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TimeFilter.prototype.hasGte = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp lte = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TimeFilter.prototype.getLte = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TimeFilter} returns this
*/
proto.api.commons.TimeFilter.prototype.setLte = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TimeFilter} returns this
 */
proto.api.commons.TimeFilter.prototype.clearLte = function() {
  return this.setLte(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TimeFilter.prototype.hasLte = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp gt = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TimeFilter.prototype.getGt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TimeFilter} returns this
*/
proto.api.commons.TimeFilter.prototype.setGt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TimeFilter} returns this
 */
proto.api.commons.TimeFilter.prototype.clearGt = function() {
  return this.setGt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TimeFilter.prototype.hasGt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp lt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TimeFilter.prototype.getLt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TimeFilter} returns this
*/
proto.api.commons.TimeFilter.prototype.setLt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TimeFilter} returns this
 */
proto.api.commons.TimeFilter.prototype.clearLt = function() {
  return this.setLt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TimeFilter.prototype.hasLt = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.Category.repeatedFields_ = [6,10,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
categoryId: jspb.Message.getFieldWithDefault(msg, 1, 0),
authorId: jspb.Message.getFieldWithDefault(msg, 3, ""),
title: jspb.Message.getFieldWithDefault(msg, 4, ""),
description: jspb.Message.getFieldWithDefault(msg, 5, ""),
skillProfilesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
version: jspb.Message.getFieldWithDefault(msg, 7, 0),
callTypesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
isSystem: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
categoryType: jspb.Message.getFieldWithDefault(msg, 12, 0),
skillProfileGroupSidsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Category}
 */
proto.api.commons.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Category;
  return proto.api.commons.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Category}
 */
proto.api.commons.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCategoryId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSkillProfiles(values[i]);
      }
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 10:
      var values = /** @type {!Array<!proto.api.commons.CallType.Enum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCallTypes(values[i]);
      }
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSystem(value);
      break;
    case 12:
      var value = /** @type {!proto.api.commons.CategoryType} */ (reader.readEnum());
      msg.setCategoryType(value);
      break;
    case 13:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSkillProfileGroupSids(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSkillProfilesList();
  if (f.length > 0) {
    writer.writePackedInt64(
      6,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCallTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      10,
      f
    );
  }
  f = message.getIsSystem();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getCategoryType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getSkillProfileGroupSidsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      13,
      f
    );
  }
};


/**
 * optional int64 category_id = 1;
 * @return {number}
 */
proto.api.commons.Category.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setCategoryId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string author_id = 3;
 * @return {string}
 */
proto.api.commons.Category.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.api.commons.Category.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.api.commons.Category.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated int64 skill_profiles = 6;
 * @return {!Array<number>}
 */
proto.api.commons.Category.prototype.getSkillProfilesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setSkillProfilesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.addSkillProfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.clearSkillProfilesList = function() {
  return this.setSkillProfilesList([]);
};


/**
 * optional int32 version = 7;
 * @return {number}
 */
proto.api.commons.Category.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated CallType.Enum call_types = 10;
 * @return {!Array<!proto.api.commons.CallType.Enum>}
 */
proto.api.commons.Category.prototype.getCallTypesList = function() {
  return /** @type {!Array<!proto.api.commons.CallType.Enum>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<!proto.api.commons.CallType.Enum>} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setCallTypesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.addCallTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.clearCallTypesList = function() {
  return this.setCallTypesList([]);
};


/**
 * optional bool is_system = 11;
 * @return {boolean}
 */
proto.api.commons.Category.prototype.getIsSystem = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setIsSystem = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional CategoryType category_type = 12;
 * @return {!proto.api.commons.CategoryType}
 */
proto.api.commons.Category.prototype.getCategoryType = function() {
  return /** @type {!proto.api.commons.CategoryType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.api.commons.CategoryType} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setCategoryType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * repeated int64 skill_profile_group_sids = 13;
 * @return {!Array<number>}
 */
proto.api.commons.Category.prototype.getSkillProfileGroupSidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.setSkillProfileGroupSidsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.addSkillProfileGroupSids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Category} returns this
 */
proto.api.commons.Category.prototype.clearSkillProfileGroupSidsList = function() {
  return this.setSkillProfileGroupSidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.Evaluation.repeatedFields_ = [9,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Evaluation.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Evaluation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Evaluation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Evaluation.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 3, 0),
scorerId: jspb.Message.getFieldWithDefault(msg, 4, ""),
callSid: jspb.Message.getFieldWithDefault(msg, 6, 0),
score: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
evaluationState: jspb.Message.getFieldWithDefault(msg, 8, 0),
evaluationSectionsList: jspb.Message.toObjectList(msg.getEvaluationSectionsList(),
    proto.api.commons.EvaluationSection.toObject, includeInstance),
completedAt: (f = msg.getCompletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
deletedAt: (f = msg.getDeletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
agentUserId: jspb.Message.getFieldWithDefault(msg, 13, ""),
callType: jspb.Message.getFieldWithDefault(msg, 14, 0),
transcriptSid: jspb.Message.getFieldWithDefault(msg, 15, 0),
customFieldsList: jspb.Message.toObjectList(msg.getCustomFieldsList(),
    proto.api.commons.Evaluation.CustomField.toObject, includeInstance),
deletedBy: jspb.Message.getFieldWithDefault(msg, 18, ""),
isRecoverable: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
channelType: jspb.Message.getFieldWithDefault(msg, 22, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Evaluation}
 */
proto.api.commons.Evaluation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Evaluation;
  return proto.api.commons.Evaluation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Evaluation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Evaluation}
 */
proto.api.commons.Evaluation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScorerId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    case 8:
      var value = /** @type {!proto.api.commons.EvaluationState} */ (reader.readEnum());
      msg.setEvaluationState(value);
      break;
    case 9:
      var value = new proto.api.commons.EvaluationSection;
      reader.readMessage(value,proto.api.commons.EvaluationSection.deserializeBinaryFromReader);
      msg.addEvaluationSections(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCompletedAt(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentUserId(value);
      break;
    case 14:
      var value = /** @type {!proto.api.commons.CallType.Enum} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTranscriptSid(value);
      break;
    case 17:
      var value = new proto.api.commons.Evaluation.CustomField;
      reader.readMessage(value,proto.api.commons.Evaluation.CustomField.deserializeBinaryFromReader);
      msg.addCustomFields(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeletedBy(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRecoverable(value);
      break;
    case 22:
      var value = /** @type {!proto.api.commons.ChannelType} */ (reader.readEnum());
      msg.setChannelType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Evaluation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Evaluation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Evaluation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Evaluation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getScorerId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getEvaluationState();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getEvaluationSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.api.commons.EvaluationSection.serializeBinaryToWriter
    );
  }
  f = message.getCompletedAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAgentUserId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getTranscriptSid();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getCustomFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.api.commons.Evaluation.CustomField.serializeBinaryToWriter
    );
  }
  f = message.getDeletedBy();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getIsRecoverable();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getChannelType();
  if (f !== 0.0) {
    writer.writeEnum(
      22,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Evaluation.CustomField.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Evaluation.CustomField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Evaluation.CustomField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Evaluation.CustomField.toObject = function(includeInstance, msg) {
  var f, obj = {
key: jspb.Message.getFieldWithDefault(msg, 1, ""),
field: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Evaluation.CustomField}
 */
proto.api.commons.Evaluation.CustomField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Evaluation.CustomField;
  return proto.api.commons.Evaluation.CustomField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Evaluation.CustomField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Evaluation.CustomField}
 */
proto.api.commons.Evaluation.CustomField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Evaluation.CustomField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Evaluation.CustomField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Evaluation.CustomField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Evaluation.CustomField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.commons.Evaluation.CustomField.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Evaluation.CustomField} returns this
 */
proto.api.commons.Evaluation.CustomField.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string field = 2;
 * @return {string}
 */
proto.api.commons.Evaluation.CustomField.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Evaluation.CustomField} returns this
 */
proto.api.commons.Evaluation.CustomField.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 evaluation_id = 2;
 * @return {number}
 */
proto.api.commons.Evaluation.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_id = 3;
 * @return {number}
 */
proto.api.commons.Evaluation.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string scorer_id = 4;
 * @return {string}
 */
proto.api.commons.Evaluation.prototype.getScorerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setScorerId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 call_sid = 6;
 * @return {number}
 */
proto.api.commons.Evaluation.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double score = 7;
 * @return {number}
 */
proto.api.commons.Evaluation.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional EvaluationState evaluation_state = 8;
 * @return {!proto.api.commons.EvaluationState}
 */
proto.api.commons.Evaluation.prototype.getEvaluationState = function() {
  return /** @type {!proto.api.commons.EvaluationState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.api.commons.EvaluationState} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setEvaluationState = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * repeated EvaluationSection evaluation_sections = 9;
 * @return {!Array<!proto.api.commons.EvaluationSection>}
 */
proto.api.commons.Evaluation.prototype.getEvaluationSectionsList = function() {
  return /** @type{!Array<!proto.api.commons.EvaluationSection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.EvaluationSection, 9));
};


/**
 * @param {!Array<!proto.api.commons.EvaluationSection>} value
 * @return {!proto.api.commons.Evaluation} returns this
*/
proto.api.commons.Evaluation.prototype.setEvaluationSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.api.commons.EvaluationSection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.EvaluationSection}
 */
proto.api.commons.Evaluation.prototype.addEvaluationSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.api.commons.EvaluationSection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.clearEvaluationSectionsList = function() {
  return this.setEvaluationSectionsList([]);
};


/**
 * optional google.protobuf.Timestamp completed_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Evaluation.prototype.getCompletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Evaluation} returns this
*/
proto.api.commons.Evaluation.prototype.setCompletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.clearCompletedAt = function() {
  return this.setCompletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Evaluation.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp deleted_at = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Evaluation.prototype.getDeletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Evaluation} returns this
*/
proto.api.commons.Evaluation.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Evaluation.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string agent_user_id = 13;
 * @return {string}
 */
proto.api.commons.Evaluation.prototype.getAgentUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setAgentUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional CallType.Enum call_type = 14;
 * @return {!proto.api.commons.CallType.Enum}
 */
proto.api.commons.Evaluation.prototype.getCallType = function() {
  return /** @type {!proto.api.commons.CallType.Enum} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional int64 transcript_sid = 15;
 * @return {number}
 */
proto.api.commons.Evaluation.prototype.getTranscriptSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setTranscriptSid = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * repeated CustomField custom_fields = 17;
 * @return {!Array<!proto.api.commons.Evaluation.CustomField>}
 */
proto.api.commons.Evaluation.prototype.getCustomFieldsList = function() {
  return /** @type{!Array<!proto.api.commons.Evaluation.CustomField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.Evaluation.CustomField, 17));
};


/**
 * @param {!Array<!proto.api.commons.Evaluation.CustomField>} value
 * @return {!proto.api.commons.Evaluation} returns this
*/
proto.api.commons.Evaluation.prototype.setCustomFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.api.commons.Evaluation.CustomField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Evaluation.CustomField}
 */
proto.api.commons.Evaluation.prototype.addCustomFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.api.commons.Evaluation.CustomField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.clearCustomFieldsList = function() {
  return this.setCustomFieldsList([]);
};


/**
 * optional string deleted_by = 18;
 * @return {string}
 */
proto.api.commons.Evaluation.prototype.getDeletedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setDeletedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bool is_recoverable = 20;
 * @return {boolean}
 */
proto.api.commons.Evaluation.prototype.getIsRecoverable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setIsRecoverable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional ChannelType channel_type = 22;
 * @return {!proto.api.commons.ChannelType}
 */
proto.api.commons.Evaluation.prototype.getChannelType = function() {
  return /** @type {!proto.api.commons.ChannelType} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {!proto.api.commons.ChannelType} value
 * @return {!proto.api.commons.Evaluation} returns this
 */
proto.api.commons.Evaluation.prototype.setChannelType = function(value) {
  return jspb.Message.setProto3EnumField(this, 22, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.EvaluationSection.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.EvaluationSection.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.EvaluationSection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.EvaluationSection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EvaluationSection.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationSectionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
evaluationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
sectionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
points: jspb.Message.getFieldWithDefault(msg, 5, 0),
possiblePoints: jspb.Message.getFieldWithDefault(msg, 6, 0),
sortOrder: jspb.Message.getFieldWithDefault(msg, 7, 0),
deletedAt: (f = msg.getDeletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
evaluationQuestionsList: jspb.Message.toObjectList(msg.getEvaluationQuestionsList(),
    proto.api.commons.EvaluationQuestion.toObject, includeInstance),
autoEvaluationQuestionsList: jspb.Message.toObjectList(msg.getAutoEvaluationQuestionsList(),
    proto.api.commons.AutoEvaluationQuestion.toObject, includeInstance),
skipped: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.EvaluationSection}
 */
proto.api.commons.EvaluationSection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.EvaluationSection;
  return proto.api.commons.EvaluationSection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.EvaluationSection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.EvaluationSection}
 */
proto.api.commons.EvaluationSection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationSectionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSectionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPoints(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPossiblePoints(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new proto.api.commons.EvaluationQuestion;
      reader.readMessage(value,proto.api.commons.EvaluationQuestion.deserializeBinaryFromReader);
      msg.addEvaluationQuestions(value);
      break;
    case 11:
      var value = new proto.api.commons.AutoEvaluationQuestion;
      reader.readMessage(value,proto.api.commons.AutoEvaluationQuestion.deserializeBinaryFromReader);
      msg.addAutoEvaluationQuestions(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.EvaluationSection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.EvaluationSection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.EvaluationSection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EvaluationSection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationSectionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSectionId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPossiblePoints();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEvaluationQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.api.commons.EvaluationQuestion.serializeBinaryToWriter
    );
  }
  f = message.getAutoEvaluationQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.api.commons.AutoEvaluationQuestion.serializeBinaryToWriter
    );
  }
  f = message.getSkipped();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional int64 evaluation_section_id = 2;
 * @return {number}
 */
proto.api.commons.EvaluationSection.prototype.getEvaluationSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.setEvaluationSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 evaluation_id = 3;
 * @return {number}
 */
proto.api.commons.EvaluationSection.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 section_id = 4;
 * @return {number}
 */
proto.api.commons.EvaluationSection.prototype.getSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.setSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 points = 5;
 * @return {number}
 */
proto.api.commons.EvaluationSection.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 possible_points = 6;
 * @return {number}
 */
proto.api.commons.EvaluationSection.prototype.getPossiblePoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.setPossiblePoints = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 sort_order = 7;
 * @return {number}
 */
proto.api.commons.EvaluationSection.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp deleted_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.EvaluationSection.prototype.getDeletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.EvaluationSection} returns this
*/
proto.api.commons.EvaluationSection.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.EvaluationSection.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.EvaluationSection.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.EvaluationSection} returns this
*/
proto.api.commons.EvaluationSection.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.EvaluationSection.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated EvaluationQuestion evaluation_questions = 10;
 * @return {!Array<!proto.api.commons.EvaluationQuestion>}
 */
proto.api.commons.EvaluationSection.prototype.getEvaluationQuestionsList = function() {
  return /** @type{!Array<!proto.api.commons.EvaluationQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.EvaluationQuestion, 10));
};


/**
 * @param {!Array<!proto.api.commons.EvaluationQuestion>} value
 * @return {!proto.api.commons.EvaluationSection} returns this
*/
proto.api.commons.EvaluationSection.prototype.setEvaluationQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.api.commons.EvaluationQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.EvaluationQuestion}
 */
proto.api.commons.EvaluationSection.prototype.addEvaluationQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.api.commons.EvaluationQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.clearEvaluationQuestionsList = function() {
  return this.setEvaluationQuestionsList([]);
};


/**
 * repeated AutoEvaluationQuestion auto_evaluation_questions = 11;
 * @return {!Array<!proto.api.commons.AutoEvaluationQuestion>}
 */
proto.api.commons.EvaluationSection.prototype.getAutoEvaluationQuestionsList = function() {
  return /** @type{!Array<!proto.api.commons.AutoEvaluationQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.AutoEvaluationQuestion, 11));
};


/**
 * @param {!Array<!proto.api.commons.AutoEvaluationQuestion>} value
 * @return {!proto.api.commons.EvaluationSection} returns this
*/
proto.api.commons.EvaluationSection.prototype.setAutoEvaluationQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.api.commons.AutoEvaluationQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AutoEvaluationQuestion}
 */
proto.api.commons.EvaluationSection.prototype.addAutoEvaluationQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.api.commons.AutoEvaluationQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.clearAutoEvaluationQuestionsList = function() {
  return this.setAutoEvaluationQuestionsList([]);
};


/**
 * optional bool skipped = 12;
 * @return {boolean}
 */
proto.api.commons.EvaluationSection.prototype.getSkipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.EvaluationSection} returns this
 */
proto.api.commons.EvaluationSection.prototype.setSkipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.EvaluationQuestion.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.EvaluationQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.EvaluationQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.EvaluationQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EvaluationQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
evaluationQuestionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
evaluationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
scorecardQuestionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
skipped: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
points: jspb.Message.getFieldWithDefault(msg, 6, 0),
answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api.commons.EvaluationQuestion.Answer.toObject, includeInstance),
evaluationSectionId: jspb.Message.getFieldWithDefault(msg, 8, 0),
comment: jspb.Message.getFieldWithDefault(msg, 9, ""),
sortOrder: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.EvaluationQuestion}
 */
proto.api.commons.EvaluationQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.EvaluationQuestion;
  return proto.api.commons.EvaluationQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.EvaluationQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.EvaluationQuestion}
 */
proto.api.commons.EvaluationQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationQuestionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardQuestionId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipped(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPoints(value);
      break;
    case 7:
      var value = new proto.api.commons.EvaluationQuestion.Answer;
      reader.readMessage(value,proto.api.commons.EvaluationQuestion.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationSectionId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.EvaluationQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.EvaluationQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.EvaluationQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EvaluationQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluationQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getScorecardQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSkipped();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.api.commons.EvaluationQuestion.Answer.serializeBinaryToWriter
    );
  }
  f = message.getEvaluationSectionId();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.EvaluationQuestion.Answer.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.api.commons.EvaluationQuestion.Answer.ResultCase = {
  RESULT_NOT_SET: 0,
  POINTS: 2,
  FAIL_TYPE: 3,
  ANSWER_POINTS: 4
};

/**
 * @return {proto.api.commons.EvaluationQuestion.Answer.ResultCase}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.getResultCase = function() {
  return /** @type {proto.api.commons.EvaluationQuestion.Answer.ResultCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.EvaluationQuestion.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.EvaluationQuestion.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EvaluationQuestion.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
answerOption: jspb.Message.getFieldWithDefault(msg, 1, ""),
points: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
failType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
answerPoints: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.EvaluationQuestion.Answer}
 */
proto.api.commons.EvaluationQuestion.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.EvaluationQuestion.Answer;
  return proto.api.commons.EvaluationQuestion.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.EvaluationQuestion.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.EvaluationQuestion.Answer}
 */
proto.api.commons.EvaluationQuestion.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswerOption(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPoints(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.FailType} */ (reader.readEnum());
      msg.setFailType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAnswerPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.EvaluationQuestion.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.EvaluationQuestion.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EvaluationQuestion.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswerOption();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {!proto.api.commons.FailType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string answer_option = 1;
 * @return {string}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.getAnswerOption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EvaluationQuestion.Answer} returns this
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.setAnswerOption = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 points = 2;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion.Answer} returns this
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.setPoints = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.EvaluationQuestion.Answer} returns this
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.clearPoints = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.hasPoints = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FailType fail_type = 3;
 * @return {!proto.api.commons.FailType}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.getFailType = function() {
  return /** @type {!proto.api.commons.FailType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.FailType} value
 * @return {!proto.api.commons.EvaluationQuestion.Answer} returns this
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.setFailType = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.EvaluationQuestion.Answer} returns this
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.clearFailType = function() {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.hasFailType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 answer_points = 4;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.getAnswerPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion.Answer} returns this
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.setAnswerPoints = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.EvaluationQuestion.Answer} returns this
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.clearAnswerPoints = function() {
  return jspb.Message.setOneofField(this, 4, proto.api.commons.EvaluationQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.EvaluationQuestion.Answer.prototype.hasAnswerPoints = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 evaluation_question_id = 2;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.prototype.getEvaluationQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setEvaluationQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 evaluation_id = 3;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.prototype.getEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 scorecard_question_id = 4;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.prototype.getScorecardQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setScorecardQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool skipped = 5;
 * @return {boolean}
 */
proto.api.commons.EvaluationQuestion.prototype.getSkipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setSkipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int64 points = 6;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated Answer answers = 7;
 * @return {!Array<!proto.api.commons.EvaluationQuestion.Answer>}
 */
proto.api.commons.EvaluationQuestion.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api.commons.EvaluationQuestion.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.EvaluationQuestion.Answer, 7));
};


/**
 * @param {!Array<!proto.api.commons.EvaluationQuestion.Answer>} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
*/
proto.api.commons.EvaluationQuestion.prototype.setAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.api.commons.EvaluationQuestion.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.EvaluationQuestion.Answer}
 */
proto.api.commons.EvaluationQuestion.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.api.commons.EvaluationQuestion.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};


/**
 * optional int64 evaluation_section_id = 8;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.prototype.getEvaluationSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setEvaluationSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string comment = 9;
 * @return {string}
 */
proto.api.commons.EvaluationQuestion.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 sort_order = 10;
 * @return {number}
 */
proto.api.commons.EvaluationQuestion.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.EvaluationQuestion} returns this
 */
proto.api.commons.EvaluationQuestion.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.AutoEvaluation.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoEvaluation.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoEvaluation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoEvaluation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluation.toObject = function(includeInstance, msg) {
  var f, obj = {
autoEvaluationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 3, 0),
callSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
agentUserId: jspb.Message.getFieldWithDefault(msg, 5, ""),
autoEvaluationSectionsList: jspb.Message.toObjectList(msg.getAutoEvaluationSectionsList(),
    proto.api.commons.AutoEvaluationSection.toObject, includeInstance),
completedAt: (f = msg.getCompletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
deletedAt: (f = msg.getDeletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
callType: jspb.Message.getFieldWithDefault(msg, 9, 0),
transcriptSid: jspb.Message.getFieldWithDefault(msg, 10, 0),
expressionMatched: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
riskLevel: jspb.Message.getFieldWithDefault(msg, 12, 0),
callLength: jspb.Message.getFieldWithDefault(msg, 16, 0),
scorecardInfo: (f = msg.getScorecardInfo()) && proto.api.commons.AutoEvaluation.ScorecardInfo.toObject(includeInstance, f),
categoryInfo: (f = msg.getCategoryInfo()) && proto.api.commons.AutoEvaluation.CategoryInfo.toObject(includeInstance, f),
channelType: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoEvaluation}
 */
proto.api.commons.AutoEvaluation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoEvaluation;
  return proto.api.commons.AutoEvaluation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoEvaluation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoEvaluation}
 */
proto.api.commons.AutoEvaluation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoEvaluationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentUserId(value);
      break;
    case 6:
      var value = new proto.api.commons.AutoEvaluationSection;
      reader.readMessage(value,proto.api.commons.AutoEvaluationSection.deserializeBinaryFromReader);
      msg.addAutoEvaluationSections(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCompletedAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    case 9:
      var value = /** @type {!proto.api.commons.CallType.Enum} */ (reader.readEnum());
      msg.setCallType(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTranscriptSid(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpressionMatched(value);
      break;
    case 12:
      var value = /** @type {!proto.api.commons.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCallLength(value);
      break;
    case 17:
      var value = new proto.api.commons.AutoEvaluation.ScorecardInfo;
      reader.readMessage(value,proto.api.commons.AutoEvaluation.ScorecardInfo.deserializeBinaryFromReader);
      msg.setScorecardInfo(value);
      break;
    case 18:
      var value = new proto.api.commons.AutoEvaluation.CategoryInfo;
      reader.readMessage(value,proto.api.commons.AutoEvaluation.CategoryInfo.deserializeBinaryFromReader);
      msg.setCategoryInfo(value);
      break;
    case 19:
      var value = /** @type {!proto.api.commons.ChannelType} */ (reader.readEnum());
      msg.setChannelType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoEvaluation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoEvaluation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoEvaluation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAgentUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAutoEvaluationSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.api.commons.AutoEvaluationSection.serializeBinaryToWriter
    );
  }
  f = message.getCompletedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCallType();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getTranscriptSid();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getExpressionMatched();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getRiskLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getCallLength();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getScorecardInfo();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.api.commons.AutoEvaluation.ScorecardInfo.serializeBinaryToWriter
    );
  }
  f = message.getCategoryInfo();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.api.commons.AutoEvaluation.CategoryInfo.serializeBinaryToWriter
    );
  }
  f = message.getChannelType();
  if (f !== 0.0) {
    writer.writeEnum(
      19,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoEvaluation.ScorecardInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoEvaluation.ScorecardInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
title: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoEvaluation.ScorecardInfo}
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoEvaluation.ScorecardInfo;
  return proto.api.commons.AutoEvaluation.ScorecardInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoEvaluation.ScorecardInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoEvaluation.ScorecardInfo}
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoEvaluation.ScorecardInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoEvaluation.ScorecardInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AutoEvaluation.ScorecardInfo} returns this
 */
proto.api.commons.AutoEvaluation.ScorecardInfo.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoEvaluation.CategoryInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoEvaluation.CategoryInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoEvaluation.CategoryInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluation.CategoryInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
title: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoEvaluation.CategoryInfo}
 */
proto.api.commons.AutoEvaluation.CategoryInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoEvaluation.CategoryInfo;
  return proto.api.commons.AutoEvaluation.CategoryInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoEvaluation.CategoryInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoEvaluation.CategoryInfo}
 */
proto.api.commons.AutoEvaluation.CategoryInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoEvaluation.CategoryInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoEvaluation.CategoryInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoEvaluation.CategoryInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluation.CategoryInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.api.commons.AutoEvaluation.CategoryInfo.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AutoEvaluation.CategoryInfo} returns this
 */
proto.api.commons.AutoEvaluation.CategoryInfo.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 auto_evaluation_id = 2;
 * @return {number}
 */
proto.api.commons.AutoEvaluation.prototype.getAutoEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setAutoEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_id = 3;
 * @return {number}
 */
proto.api.commons.AutoEvaluation.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 call_sid = 4;
 * @return {number}
 */
proto.api.commons.AutoEvaluation.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string agent_user_id = 5;
 * @return {string}
 */
proto.api.commons.AutoEvaluation.prototype.getAgentUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setAgentUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated AutoEvaluationSection auto_evaluation_sections = 6;
 * @return {!Array<!proto.api.commons.AutoEvaluationSection>}
 */
proto.api.commons.AutoEvaluation.prototype.getAutoEvaluationSectionsList = function() {
  return /** @type{!Array<!proto.api.commons.AutoEvaluationSection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.AutoEvaluationSection, 6));
};


/**
 * @param {!Array<!proto.api.commons.AutoEvaluationSection>} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
*/
proto.api.commons.AutoEvaluation.prototype.setAutoEvaluationSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.api.commons.AutoEvaluationSection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AutoEvaluationSection}
 */
proto.api.commons.AutoEvaluation.prototype.addAutoEvaluationSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.api.commons.AutoEvaluationSection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.clearAutoEvaluationSectionsList = function() {
  return this.setAutoEvaluationSectionsList([]);
};


/**
 * optional google.protobuf.Timestamp completed_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.AutoEvaluation.prototype.getCompletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
*/
proto.api.commons.AutoEvaluation.prototype.setCompletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.clearCompletedAt = function() {
  return this.setCompletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoEvaluation.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp deleted_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.AutoEvaluation.prototype.getDeletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
*/
proto.api.commons.AutoEvaluation.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoEvaluation.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional CallType.Enum call_type = 9;
 * @return {!proto.api.commons.CallType.Enum}
 */
proto.api.commons.AutoEvaluation.prototype.getCallType = function() {
  return /** @type {!proto.api.commons.CallType.Enum} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setCallType = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional int64 transcript_sid = 10;
 * @return {number}
 */
proto.api.commons.AutoEvaluation.prototype.getTranscriptSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setTranscriptSid = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool expression_matched = 11;
 * @return {boolean}
 */
proto.api.commons.AutoEvaluation.prototype.getExpressionMatched = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setExpressionMatched = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional RiskLevel risk_level = 12;
 * @return {!proto.api.commons.RiskLevel}
 */
proto.api.commons.AutoEvaluation.prototype.getRiskLevel = function() {
  return /** @type {!proto.api.commons.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.api.commons.RiskLevel} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setRiskLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional int32 call_length = 16;
 * @return {number}
 */
proto.api.commons.AutoEvaluation.prototype.getCallLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setCallLength = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional ScorecardInfo scorecard_info = 17;
 * @return {?proto.api.commons.AutoEvaluation.ScorecardInfo}
 */
proto.api.commons.AutoEvaluation.prototype.getScorecardInfo = function() {
  return /** @type{?proto.api.commons.AutoEvaluation.ScorecardInfo} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AutoEvaluation.ScorecardInfo, 17));
};


/**
 * @param {?proto.api.commons.AutoEvaluation.ScorecardInfo|undefined} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
*/
proto.api.commons.AutoEvaluation.prototype.setScorecardInfo = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.clearScorecardInfo = function() {
  return this.setScorecardInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoEvaluation.prototype.hasScorecardInfo = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional CategoryInfo category_info = 18;
 * @return {?proto.api.commons.AutoEvaluation.CategoryInfo}
 */
proto.api.commons.AutoEvaluation.prototype.getCategoryInfo = function() {
  return /** @type{?proto.api.commons.AutoEvaluation.CategoryInfo} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AutoEvaluation.CategoryInfo, 18));
};


/**
 * @param {?proto.api.commons.AutoEvaluation.CategoryInfo|undefined} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
*/
proto.api.commons.AutoEvaluation.prototype.setCategoryInfo = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.clearCategoryInfo = function() {
  return this.setCategoryInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoEvaluation.prototype.hasCategoryInfo = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ChannelType channel_type = 19;
 * @return {!proto.api.commons.ChannelType}
 */
proto.api.commons.AutoEvaluation.prototype.getChannelType = function() {
  return /** @type {!proto.api.commons.ChannelType} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.api.commons.ChannelType} value
 * @return {!proto.api.commons.AutoEvaluation} returns this
 */
proto.api.commons.AutoEvaluation.prototype.setChannelType = function(value) {
  return jspb.Message.setProto3EnumField(this, 19, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.AutoEvaluationQuestion.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoEvaluationQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoEvaluationQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluationQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
autoEvaluationQuestionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
autoEvaluationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
autoEvaluationSectionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
autoQuestionId: jspb.Message.getFieldWithDefault(msg, 5, 0),
flaggedList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
passed: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
sortOrder: jspb.Message.getFieldWithDefault(msg, 8, 0),
riskLevel: jspb.Message.getFieldWithDefault(msg, 11, 0),
expressionMatched: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoEvaluationQuestion}
 */
proto.api.commons.AutoEvaluationQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoEvaluationQuestion;
  return proto.api.commons.AutoEvaluationQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoEvaluationQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoEvaluationQuestion}
 */
proto.api.commons.AutoEvaluationQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoEvaluationQuestionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoEvaluationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoEvaluationSectionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoQuestionId(value);
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFlagged(values[i]);
      }
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPassed(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 11:
      var value = /** @type {!proto.api.commons.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevel(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpressionMatched(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoEvaluationQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoEvaluationQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluationQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoEvaluationQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAutoEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAutoEvaluationSectionId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAutoQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getFlaggedList();
  if (f.length > 0) {
    writer.writePackedInt64(
      6,
      f
    );
  }
  f = message.getPassed();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getRiskLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getExpressionMatched();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional int64 auto_evaluation_question_id = 2;
 * @return {number}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getAutoEvaluationQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setAutoEvaluationQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 auto_evaluation_id = 3;
 * @return {number}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getAutoEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setAutoEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 auto_evaluation_section_id = 4;
 * @return {number}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getAutoEvaluationSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setAutoEvaluationSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 auto_question_id = 5;
 * @return {number}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getAutoQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setAutoQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated int64 flagged = 6;
 * @return {!Array<number>}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getFlaggedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setFlaggedList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.addFlagged = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.clearFlaggedList = function() {
  return this.setFlaggedList([]);
};


/**
 * optional bool passed = 7;
 * @return {boolean}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getPassed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setPassed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 sort_order = 8;
 * @return {number}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional RiskLevel risk_level = 11;
 * @return {!proto.api.commons.RiskLevel}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getRiskLevel = function() {
  return /** @type {!proto.api.commons.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.api.commons.RiskLevel} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setRiskLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional bool expression_matched = 14;
 * @return {boolean}
 */
proto.api.commons.AutoEvaluationQuestion.prototype.getExpressionMatched = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.AutoEvaluationQuestion} returns this
 */
proto.api.commons.AutoEvaluationQuestion.prototype.setExpressionMatched = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.AutoEvaluationSection.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoEvaluationSection.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoEvaluationSection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoEvaluationSection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluationSection.toObject = function(includeInstance, msg) {
  var f, obj = {
autoEvaluationSectionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
autoEvaluationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
sectionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
sortOrder: jspb.Message.getFieldWithDefault(msg, 5, 0),
deletedAt: (f = msg.getDeletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
autoEvaluationQuestionsList: jspb.Message.toObjectList(msg.getAutoEvaluationQuestionsList(),
    proto.api.commons.AutoEvaluationQuestion.toObject, includeInstance),
riskLevel: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoEvaluationSection}
 */
proto.api.commons.AutoEvaluationSection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoEvaluationSection;
  return proto.api.commons.AutoEvaluationSection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoEvaluationSection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoEvaluationSection}
 */
proto.api.commons.AutoEvaluationSection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoEvaluationSectionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoEvaluationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSectionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new proto.api.commons.AutoEvaluationQuestion;
      reader.readMessage(value,proto.api.commons.AutoEvaluationQuestion.deserializeBinaryFromReader);
      msg.addAutoEvaluationQuestions(value);
      break;
    case 9:
      var value = /** @type {!proto.api.commons.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoEvaluationSection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoEvaluationSection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoEvaluationSection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoEvaluationSection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoEvaluationSectionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAutoEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSectionId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAutoEvaluationQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.api.commons.AutoEvaluationQuestion.serializeBinaryToWriter
    );
  }
  f = message.getRiskLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * optional int64 auto_evaluation_section_id = 2;
 * @return {number}
 */
proto.api.commons.AutoEvaluationSection.prototype.getAutoEvaluationSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.setAutoEvaluationSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 auto_evaluation_id = 3;
 * @return {number}
 */
proto.api.commons.AutoEvaluationSection.prototype.getAutoEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.setAutoEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 section_id = 4;
 * @return {number}
 */
proto.api.commons.AutoEvaluationSection.prototype.getSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.setSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 sort_order = 5;
 * @return {number}
 */
proto.api.commons.AutoEvaluationSection.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp deleted_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.AutoEvaluationSection.prototype.getDeletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
*/
proto.api.commons.AutoEvaluationSection.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoEvaluationSection.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.AutoEvaluationSection.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
*/
proto.api.commons.AutoEvaluationSection.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoEvaluationSection.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated AutoEvaluationQuestion auto_evaluation_questions = 8;
 * @return {!Array<!proto.api.commons.AutoEvaluationQuestion>}
 */
proto.api.commons.AutoEvaluationSection.prototype.getAutoEvaluationQuestionsList = function() {
  return /** @type{!Array<!proto.api.commons.AutoEvaluationQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.AutoEvaluationQuestion, 8));
};


/**
 * @param {!Array<!proto.api.commons.AutoEvaluationQuestion>} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
*/
proto.api.commons.AutoEvaluationSection.prototype.setAutoEvaluationQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.api.commons.AutoEvaluationQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AutoEvaluationQuestion}
 */
proto.api.commons.AutoEvaluationSection.prototype.addAutoEvaluationQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.api.commons.AutoEvaluationQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.clearAutoEvaluationQuestionsList = function() {
  return this.setAutoEvaluationQuestionsList([]);
};


/**
 * optional RiskLevel risk_level = 9;
 * @return {!proto.api.commons.RiskLevel}
 */
proto.api.commons.AutoEvaluationSection.prototype.getRiskLevel = function() {
  return /** @type {!proto.api.commons.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.api.commons.RiskLevel} value
 * @return {!proto.api.commons.AutoEvaluationSection} returns this
 */
proto.api.commons.AutoEvaluationSection.prototype.setRiskLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.Question.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Question.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Question.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Question} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Question.toObject = function(includeInstance, msg) {
  var f, obj = {
questionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
authorId: jspb.Message.getFieldWithDefault(msg, 3, ""),
question: jspb.Message.getFieldWithDefault(msg, 4, ""),
description: jspb.Message.getFieldWithDefault(msg, 5, ""),
categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    proto.api.commons.Category.toObject, includeInstance),
focus: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Question}
 */
proto.api.commons.Question.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Question;
  return proto.api.commons.Question.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Question} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Question}
 */
proto.api.commons.Question.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = new proto.api.commons.Category;
      reader.readMessage(value,proto.api.commons.Category.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    case 7:
      var value = /** @type {!proto.api.commons.QuestionFocus} */ (reader.readEnum());
      msg.setFocus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Question.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Question.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Question} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Question.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.api.commons.Category.serializeBinaryToWriter
    );
  }
  f = message.getFocus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional int64 question_id = 2;
 * @return {number}
 */
proto.api.commons.Question.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Question} returns this
 */
proto.api.commons.Question.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string author_id = 3;
 * @return {string}
 */
proto.api.commons.Question.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Question} returns this
 */
proto.api.commons.Question.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string question = 4;
 * @return {string}
 */
proto.api.commons.Question.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Question} returns this
 */
proto.api.commons.Question.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.api.commons.Question.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Question} returns this
 */
proto.api.commons.Question.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Category categories = 6;
 * @return {!Array<!proto.api.commons.Category>}
 */
proto.api.commons.Question.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.api.commons.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.Category, 6));
};


/**
 * @param {!Array<!proto.api.commons.Category>} value
 * @return {!proto.api.commons.Question} returns this
*/
proto.api.commons.Question.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.api.commons.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Category}
 */
proto.api.commons.Question.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.api.commons.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Question} returns this
 */
proto.api.commons.Question.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * optional QuestionFocus focus = 7;
 * @return {!proto.api.commons.QuestionFocus}
 */
proto.api.commons.Question.prototype.getFocus = function() {
  return /** @type {!proto.api.commons.QuestionFocus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.api.commons.QuestionFocus} value
 * @return {!proto.api.commons.Question} returns this
 */
proto.api.commons.Question.prototype.setFocus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.ScorecardQuestion.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ScorecardQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ScorecardQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ScorecardQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScorecardQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
scorecardQuestionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
question: jspb.Message.getFieldWithDefault(msg, 3, ""),
description: jspb.Message.getFieldWithDefault(msg, 4, ""),
questionId: jspb.Message.getFieldWithDefault(msg, 5, 0),
allowSkip: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api.commons.ScorecardQuestion.Answer.toObject, includeInstance),
multiSelect: (f = msg.getMultiSelect()) && proto.api.commons.ScorecardQuestion.MultiSelect.toObject(includeInstance, f),
scorecardId: jspb.Message.getFieldWithDefault(msg, 9, 0),
sectionId: jspb.Message.getFieldWithDefault(msg, 10, 0),
version: jspb.Message.getFieldWithDefault(msg, 11, 0),
sortOrder: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ScorecardQuestion}
 */
proto.api.commons.ScorecardQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ScorecardQuestion;
  return proto.api.commons.ScorecardQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ScorecardQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ScorecardQuestion}
 */
proto.api.commons.ScorecardQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuestionId(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowSkip(value);
      break;
    case 7:
      var value = new proto.api.commons.ScorecardQuestion.Answer;
      reader.readMessage(value,proto.api.commons.ScorecardQuestion.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    case 8:
      var value = new proto.api.commons.ScorecardQuestion.MultiSelect;
      reader.readMessage(value,proto.api.commons.ScorecardQuestion.MultiSelect.deserializeBinaryFromReader);
      msg.setMultiSelect(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSectionId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ScorecardQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ScorecardQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ScorecardQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScorecardQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecardQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAllowSkip();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.api.commons.ScorecardQuestion.Answer.serializeBinaryToWriter
    );
  }
  f = message.getMultiSelect();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.api.commons.ScorecardQuestion.MultiSelect.serializeBinaryToWriter
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getSectionId();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.ScorecardQuestion.Answer.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.api.commons.ScorecardQuestion.Answer.ResultCase = {
  RESULT_NOT_SET: 0,
  POINTS: 2,
  FAIL_TYPE: 3,
  ANSWER_POINTS: 4
};

/**
 * @return {proto.api.commons.ScorecardQuestion.Answer.ResultCase}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.getResultCase = function() {
  return /** @type {proto.api.commons.ScorecardQuestion.Answer.ResultCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ScorecardQuestion.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ScorecardQuestion.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScorecardQuestion.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
answerOption: jspb.Message.getFieldWithDefault(msg, 1, ""),
points: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
failType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
answerPoints: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ScorecardQuestion.Answer}
 */
proto.api.commons.ScorecardQuestion.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ScorecardQuestion.Answer;
  return proto.api.commons.ScorecardQuestion.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ScorecardQuestion.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ScorecardQuestion.Answer}
 */
proto.api.commons.ScorecardQuestion.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswerOption(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPoints(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.FailType} */ (reader.readEnum());
      msg.setFailType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAnswerPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ScorecardQuestion.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ScorecardQuestion.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScorecardQuestion.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswerOption();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {!proto.api.commons.FailType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string answer_option = 1;
 * @return {string}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.getAnswerOption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ScorecardQuestion.Answer} returns this
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.setAnswerOption = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 points = 2;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion.Answer} returns this
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.setPoints = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.ScorecardQuestion.Answer} returns this
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.clearPoints = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.hasPoints = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FailType fail_type = 3;
 * @return {!proto.api.commons.FailType}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.getFailType = function() {
  return /** @type {!proto.api.commons.FailType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.FailType} value
 * @return {!proto.api.commons.ScorecardQuestion.Answer} returns this
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.setFailType = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.ScorecardQuestion.Answer} returns this
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.clearFailType = function() {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.hasFailType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 answer_points = 4;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.getAnswerPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion.Answer} returns this
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.setAnswerPoints = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.ScorecardQuestion.Answer} returns this
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.clearAnswerPoints = function() {
  return jspb.Message.setOneofField(this, 4, proto.api.commons.ScorecardQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ScorecardQuestion.Answer.prototype.hasAnswerPoints = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ScorecardQuestion.MultiSelect.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ScorecardQuestion.MultiSelect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ScorecardQuestion.MultiSelect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScorecardQuestion.MultiSelect.toObject = function(includeInstance, msg) {
  var f, obj = {
maxPoints: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ScorecardQuestion.MultiSelect}
 */
proto.api.commons.ScorecardQuestion.MultiSelect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ScorecardQuestion.MultiSelect;
  return proto.api.commons.ScorecardQuestion.MultiSelect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ScorecardQuestion.MultiSelect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ScorecardQuestion.MultiSelect}
 */
proto.api.commons.ScorecardQuestion.MultiSelect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ScorecardQuestion.MultiSelect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ScorecardQuestion.MultiSelect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ScorecardQuestion.MultiSelect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScorecardQuestion.MultiSelect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxPoints();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 max_points = 1;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.MultiSelect.prototype.getMaxPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion.MultiSelect} returns this
 */
proto.api.commons.ScorecardQuestion.MultiSelect.prototype.setMaxPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 scorecard_question_id = 2;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.prototype.getScorecardQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setScorecardQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string question = 3;
 * @return {string}
 */
proto.api.commons.ScorecardQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.api.commons.ScorecardQuestion.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 question_id = 5;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool allow_skip = 6;
 * @return {boolean}
 */
proto.api.commons.ScorecardQuestion.prototype.getAllowSkip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setAllowSkip = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * repeated Answer answers = 7;
 * @return {!Array<!proto.api.commons.ScorecardQuestion.Answer>}
 */
proto.api.commons.ScorecardQuestion.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api.commons.ScorecardQuestion.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.ScorecardQuestion.Answer, 7));
};


/**
 * @param {!Array<!proto.api.commons.ScorecardQuestion.Answer>} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
*/
proto.api.commons.ScorecardQuestion.prototype.setAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.api.commons.ScorecardQuestion.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ScorecardQuestion.Answer}
 */
proto.api.commons.ScorecardQuestion.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.api.commons.ScorecardQuestion.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};


/**
 * optional MultiSelect multi_select = 8;
 * @return {?proto.api.commons.ScorecardQuestion.MultiSelect}
 */
proto.api.commons.ScorecardQuestion.prototype.getMultiSelect = function() {
  return /** @type{?proto.api.commons.ScorecardQuestion.MultiSelect} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.ScorecardQuestion.MultiSelect, 8));
};


/**
 * @param {?proto.api.commons.ScorecardQuestion.MultiSelect|undefined} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
*/
proto.api.commons.ScorecardQuestion.prototype.setMultiSelect = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.clearMultiSelect = function() {
  return this.setMultiSelect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ScorecardQuestion.prototype.hasMultiSelect = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 scorecard_id = 9;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 section_id = 10;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.prototype.getSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 version = 11;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 sort_order = 12;
 * @return {number}
 */
proto.api.commons.ScorecardQuestion.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScorecardQuestion} returns this
 */
proto.api.commons.ScorecardQuestion.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.Section.repeatedFields_ = [7,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Section.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Section.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Section} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Section.toObject = function(includeInstance, msg) {
  var f, obj = {
sectionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 3, 0),
title: jspb.Message.getFieldWithDefault(msg, 4, ""),
description: jspb.Message.getFieldWithDefault(msg, 5, ""),
weight: jspb.Message.getFieldWithDefault(msg, 6, 0),
questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
    proto.api.commons.ScorecardQuestion.toObject, includeInstance),
version: jspb.Message.getFieldWithDefault(msg, 8, 0),
sortOrder: jspb.Message.getFieldWithDefault(msg, 9, 0),
autoQuestionsList: jspb.Message.toObjectList(msg.getAutoQuestionsList(),
    proto.api.commons.AutoQuestion.toObject, includeInstance),
smartQuestionsList: jspb.Message.toObjectList(msg.getSmartQuestionsList(),
    proto.api.commons.SmartQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Section}
 */
proto.api.commons.Section.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Section;
  return proto.api.commons.Section.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Section} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Section}
 */
proto.api.commons.Section.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSectionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight(value);
      break;
    case 7:
      var value = new proto.api.commons.ScorecardQuestion;
      reader.readMessage(value,proto.api.commons.ScorecardQuestion.deserializeBinaryFromReader);
      msg.addQuestions(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 11:
      var value = new proto.api.commons.AutoQuestion;
      reader.readMessage(value,proto.api.commons.AutoQuestion.deserializeBinaryFromReader);
      msg.addAutoQuestions(value);
      break;
    case 12:
      var value = new proto.api.commons.SmartQuestion;
      reader.readMessage(value,proto.api.commons.SmartQuestion.deserializeBinaryFromReader);
      msg.addSmartQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Section.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Section.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Section} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Section.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.api.commons.ScorecardQuestion.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAutoQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.api.commons.AutoQuestion.serializeBinaryToWriter
    );
  }
  f = message.getSmartQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.api.commons.SmartQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 section_id = 2;
 * @return {number}
 */
proto.api.commons.Section.prototype.getSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.setSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_id = 3;
 * @return {number}
 */
proto.api.commons.Section.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.api.commons.Section.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.api.commons.Section.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 weight = 6;
 * @return {number}
 */
proto.api.commons.Section.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated ScorecardQuestion questions = 7;
 * @return {!Array<!proto.api.commons.ScorecardQuestion>}
 */
proto.api.commons.Section.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.api.commons.ScorecardQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.ScorecardQuestion, 7));
};


/**
 * @param {!Array<!proto.api.commons.ScorecardQuestion>} value
 * @return {!proto.api.commons.Section} returns this
*/
proto.api.commons.Section.prototype.setQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.api.commons.ScorecardQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ScorecardQuestion}
 */
proto.api.commons.Section.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.api.commons.ScorecardQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.clearQuestionsList = function() {
  return this.setQuestionsList([]);
};


/**
 * optional int32 version = 8;
 * @return {number}
 */
proto.api.commons.Section.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 sort_order = 9;
 * @return {number}
 */
proto.api.commons.Section.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated AutoQuestion auto_questions = 11;
 * @return {!Array<!proto.api.commons.AutoQuestion>}
 */
proto.api.commons.Section.prototype.getAutoQuestionsList = function() {
  return /** @type{!Array<!proto.api.commons.AutoQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.AutoQuestion, 11));
};


/**
 * @param {!Array<!proto.api.commons.AutoQuestion>} value
 * @return {!proto.api.commons.Section} returns this
*/
proto.api.commons.Section.prototype.setAutoQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.api.commons.AutoQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AutoQuestion}
 */
proto.api.commons.Section.prototype.addAutoQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.api.commons.AutoQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.clearAutoQuestionsList = function() {
  return this.setAutoQuestionsList([]);
};


/**
 * repeated SmartQuestion smart_questions = 12;
 * @return {!Array<!proto.api.commons.SmartQuestion>}
 */
proto.api.commons.Section.prototype.getSmartQuestionsList = function() {
  return /** @type{!Array<!proto.api.commons.SmartQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.SmartQuestion, 12));
};


/**
 * @param {!Array<!proto.api.commons.SmartQuestion>} value
 * @return {!proto.api.commons.Section} returns this
*/
proto.api.commons.Section.prototype.setSmartQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.api.commons.SmartQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.SmartQuestion}
 */
proto.api.commons.Section.prototype.addSmartQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.api.commons.SmartQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Section} returns this
 */
proto.api.commons.Section.prototype.clearSmartQuestionsList = function() {
  return this.setSmartQuestionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.Scorecard.repeatedFields_ = [13,19,20,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Scorecard.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Scorecard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Scorecard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Scorecard.toObject = function(includeInstance, msg) {
  var f, obj = {
scorecardId: jspb.Message.getFieldWithDefault(msg, 2, 0),
authorId: jspb.Message.getFieldWithDefault(msg, 3, ""),
title: jspb.Message.getFieldWithDefault(msg, 4, ""),
description: jspb.Message.getFieldWithDefault(msg, 5, ""),
passScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
scoreType: jspb.Message.getFieldWithDefault(msg, 7, 0),
evaluationType: jspb.Message.getFieldWithDefault(msg, 8, 0),
allowFeedback: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
distributeWeights: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
category: (f = msg.getCategory()) && proto.api.commons.Category.toObject(includeInstance, f),
sectionsList: jspb.Message.toObjectList(msg.getSectionsList(),
    proto.api.commons.Section.toObject, includeInstance),
version: jspb.Message.getFieldWithDefault(msg, 14, 0),
state: jspb.Message.getFieldWithDefault(msg, 15, 0),
isAdHoc: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
customFieldKeysList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
callTypesList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
channelsList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f,
minimumCallLength: (f = msg.getMinimumCallLength()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
minimumSmsMessageCount: jspb.Message.getFieldWithDefault(msg, 24, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Scorecard}
 */
proto.api.commons.Scorecard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Scorecard;
  return proto.api.commons.Scorecard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Scorecard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Scorecard}
 */
proto.api.commons.Scorecard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthorId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPassScore(value);
      break;
    case 7:
      var value = /** @type {!proto.api.commons.ScoreType} */ (reader.readEnum());
      msg.setScoreType(value);
      break;
    case 8:
      var value = /** @type {!proto.api.commons.EvaluationType} */ (reader.readEnum());
      msg.setEvaluationType(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowFeedback(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDistributeWeights(value);
      break;
    case 12:
      var value = new proto.api.commons.Category;
      reader.readMessage(value,proto.api.commons.Category.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 13:
      var value = new proto.api.commons.Section;
      reader.readMessage(value,proto.api.commons.Section.deserializeBinaryFromReader);
      msg.addSections(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 15:
      var value = /** @type {!proto.api.commons.ScorecardState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdHoc(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.addCustomFieldKeys(value);
      break;
    case 20:
      var values = /** @type {!Array<!proto.api.commons.CallType.Enum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCallTypes(values[i]);
      }
      break;
    case 21:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 22:
      var values = /** @type {!Array<!proto.api.commons.ChannelType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChannels(values[i]);
      }
      break;
    case 23:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMinimumCallLength(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumSmsMessageCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Scorecard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Scorecard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Scorecard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Scorecard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAuthorId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPassScore();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getScoreType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getEvaluationType();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getAllowFeedback();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getDistributeWeights();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.api.commons.Category.serializeBinaryToWriter
    );
  }
  f = message.getSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.api.commons.Section.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getIsAdHoc();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getCustomFieldKeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      19,
      f
    );
  }
  f = message.getCallTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      20,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      22,
      f
    );
  }
  f = message.getMinimumCallLength();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMinimumSmsMessageCount();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
};


/**
 * optional int64 scorecard_id = 2;
 * @return {number}
 */
proto.api.commons.Scorecard.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string author_id = 3;
 * @return {string}
 */
proto.api.commons.Scorecard.prototype.getAuthorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setAuthorId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.api.commons.Scorecard.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.api.commons.Scorecard.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double pass_score = 6;
 * @return {number}
 */
proto.api.commons.Scorecard.prototype.getPassScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setPassScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional ScoreType score_type = 7;
 * @return {!proto.api.commons.ScoreType}
 */
proto.api.commons.Scorecard.prototype.getScoreType = function() {
  return /** @type {!proto.api.commons.ScoreType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.api.commons.ScoreType} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setScoreType = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional EvaluationType evaluation_type = 8;
 * @return {!proto.api.commons.EvaluationType}
 */
proto.api.commons.Scorecard.prototype.getEvaluationType = function() {
  return /** @type {!proto.api.commons.EvaluationType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.api.commons.EvaluationType} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setEvaluationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional bool allow_feedback = 10;
 * @return {boolean}
 */
proto.api.commons.Scorecard.prototype.getAllowFeedback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setAllowFeedback = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool distribute_weights = 11;
 * @return {boolean}
 */
proto.api.commons.Scorecard.prototype.getDistributeWeights = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setDistributeWeights = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional Category category = 12;
 * @return {?proto.api.commons.Category}
 */
proto.api.commons.Scorecard.prototype.getCategory = function() {
  return /** @type{?proto.api.commons.Category} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.Category, 12));
};


/**
 * @param {?proto.api.commons.Category|undefined} value
 * @return {!proto.api.commons.Scorecard} returns this
*/
proto.api.commons.Scorecard.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Scorecard.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated Section sections = 13;
 * @return {!Array<!proto.api.commons.Section>}
 */
proto.api.commons.Scorecard.prototype.getSectionsList = function() {
  return /** @type{!Array<!proto.api.commons.Section>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.Section, 13));
};


/**
 * @param {!Array<!proto.api.commons.Section>} value
 * @return {!proto.api.commons.Scorecard} returns this
*/
proto.api.commons.Scorecard.prototype.setSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.api.commons.Section=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Section}
 */
proto.api.commons.Scorecard.prototype.addSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.api.commons.Section, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.clearSectionsList = function() {
  return this.setSectionsList([]);
};


/**
 * optional int32 version = 14;
 * @return {number}
 */
proto.api.commons.Scorecard.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional ScorecardState state = 15;
 * @return {!proto.api.commons.ScorecardState}
 */
proto.api.commons.Scorecard.prototype.getState = function() {
  return /** @type {!proto.api.commons.ScorecardState} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.api.commons.ScorecardState} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional bool is_ad_hoc = 16;
 * @return {boolean}
 */
proto.api.commons.Scorecard.prototype.getIsAdHoc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setIsAdHoc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * repeated string custom_field_keys = 19;
 * @return {!Array<string>}
 */
proto.api.commons.Scorecard.prototype.getCustomFieldKeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setCustomFieldKeysList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.addCustomFieldKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.clearCustomFieldKeysList = function() {
  return this.setCustomFieldKeysList([]);
};


/**
 * repeated CallType.Enum call_types = 20;
 * @return {!Array<!proto.api.commons.CallType.Enum>}
 */
proto.api.commons.Scorecard.prototype.getCallTypesList = function() {
  return /** @type {!Array<!proto.api.commons.CallType.Enum>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<!proto.api.commons.CallType.Enum>} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setCallTypesList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.addCallTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.clearCallTypesList = function() {
  return this.setCallTypesList([]);
};


/**
 * optional google.protobuf.Timestamp updated_at = 21;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Scorecard.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 21));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Scorecard} returns this
*/
proto.api.commons.Scorecard.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Scorecard.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated ChannelType channels = 22;
 * @return {!Array<!proto.api.commons.ChannelType>}
 */
proto.api.commons.Scorecard.prototype.getChannelsList = function() {
  return /** @type {!Array<!proto.api.commons.ChannelType>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<!proto.api.commons.ChannelType>} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setChannelsList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {!proto.api.commons.ChannelType} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.addChannels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};


/**
 * optional google.protobuf.Duration minimum_call_length = 23;
 * @return {?proto.google.protobuf.Duration}
 */
proto.api.commons.Scorecard.prototype.getMinimumCallLength = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 23));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.api.commons.Scorecard} returns this
*/
proto.api.commons.Scorecard.prototype.setMinimumCallLength = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.clearMinimumCallLength = function() {
  return this.setMinimumCallLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Scorecard.prototype.hasMinimumCallLength = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int32 minimum_sms_message_count = 24;
 * @return {number}
 */
proto.api.commons.Scorecard.prototype.getMinimumSmsMessageCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Scorecard} returns this
 */
proto.api.commons.Scorecard.prototype.setMinimumSmsMessageCount = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
autoQuestionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
flagSid: jspb.Message.getFieldWithDefault(msg, 3, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 5, 0),
autoSectionId: jspb.Message.getFieldWithDefault(msg, 6, 0),
sortOrder: jspb.Message.getFieldWithDefault(msg, 7, 0),
flagExpression: (f = msg.getFlagExpression()) && proto.api.commons.AutoQuestion.FlagExpr.toObject(includeInstance, f),
question: jspb.Message.getFieldWithDefault(msg, 11, ""),
description: jspb.Message.getFieldWithDefault(msg, 12, ""),
questionId: jspb.Message.getFieldWithDefault(msg, 13, 0),
riskLevel: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoQuestion}
 */
proto.api.commons.AutoQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoQuestion;
  return proto.api.commons.AutoQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoQuestion}
 */
proto.api.commons.AutoQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoQuestionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFlagSid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoSectionId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    case 10:
      var value = new proto.api.commons.AutoQuestion.FlagExpr;
      reader.readMessage(value,proto.api.commons.AutoQuestion.FlagExpr.deserializeBinaryFromReader);
      msg.setFlagExpression(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuestionId(value);
      break;
    case 14:
      var value = /** @type {!proto.api.commons.RiskLevel} */ (reader.readEnum());
      msg.setRiskLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFlagSid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAutoSectionId();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFlagExpression();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.api.commons.AutoQuestion.FlagExpr.serializeBinaryToWriter
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getRiskLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.AutoQuestion.FlagExpr.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoQuestion.FlagExpr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoQuestion.FlagExpr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoQuestion.FlagExpr.toObject = function(includeInstance, msg) {
  var f, obj = {
andList: jspb.Message.toObjectList(msg.getAndList(),
    proto.api.commons.AutoQuestion.FlagExpr.toObject, includeInstance),
orList: jspb.Message.toObjectList(msg.getOrList(),
    proto.api.commons.AutoQuestion.FlagExpr.toObject, includeInstance),
flag: (f = msg.getFlag()) && proto.api.commons.AutoQuestion.FlagExpr.Flag.toObject(includeInstance, f),
not: (f = msg.getNot()) && proto.api.commons.AutoQuestion.FlagExpr.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr}
 */
proto.api.commons.AutoQuestion.FlagExpr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoQuestion.FlagExpr;
  return proto.api.commons.AutoQuestion.FlagExpr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoQuestion.FlagExpr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr}
 */
proto.api.commons.AutoQuestion.FlagExpr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.commons.AutoQuestion.FlagExpr;
      reader.readMessage(value,proto.api.commons.AutoQuestion.FlagExpr.deserializeBinaryFromReader);
      msg.addAnd(value);
      break;
    case 2:
      var value = new proto.api.commons.AutoQuestion.FlagExpr;
      reader.readMessage(value,proto.api.commons.AutoQuestion.FlagExpr.deserializeBinaryFromReader);
      msg.addOr(value);
      break;
    case 3:
      var value = new proto.api.commons.AutoQuestion.FlagExpr.Flag;
      reader.readMessage(value,proto.api.commons.AutoQuestion.FlagExpr.Flag.deserializeBinaryFromReader);
      msg.setFlag(value);
      break;
    case 4:
      var value = new proto.api.commons.AutoQuestion.FlagExpr;
      reader.readMessage(value,proto.api.commons.AutoQuestion.FlagExpr.deserializeBinaryFromReader);
      msg.setNot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoQuestion.FlagExpr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoQuestion.FlagExpr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoQuestion.FlagExpr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAndList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.commons.AutoQuestion.FlagExpr.serializeBinaryToWriter
    );
  }
  f = message.getOrList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.commons.AutoQuestion.FlagExpr.serializeBinaryToWriter
    );
  }
  f = message.getFlag();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.AutoQuestion.FlagExpr.Flag.serializeBinaryToWriter
    );
  }
  f = message.getNot();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.commons.AutoQuestion.FlagExpr.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AutoQuestion.FlagExpr.Flag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AutoQuestion.FlagExpr.Flag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.toObject = function(includeInstance, msg) {
  var f, obj = {
flagSid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr.Flag}
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AutoQuestion.FlagExpr.Flag;
  return proto.api.commons.AutoQuestion.FlagExpr.Flag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AutoQuestion.FlagExpr.Flag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr.Flag}
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFlagSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AutoQuestion.FlagExpr.Flag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AutoQuestion.FlagExpr.Flag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlagSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 flag_sid = 1;
 * @return {number}
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.prototype.getFlagSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoQuestion.FlagExpr.Flag} returns this
 */
proto.api.commons.AutoQuestion.FlagExpr.Flag.prototype.setFlagSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated FlagExpr and = 1;
 * @return {!Array<!proto.api.commons.AutoQuestion.FlagExpr>}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.getAndList = function() {
  return /** @type{!Array<!proto.api.commons.AutoQuestion.FlagExpr>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.AutoQuestion.FlagExpr, 1));
};


/**
 * @param {!Array<!proto.api.commons.AutoQuestion.FlagExpr>} value
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
*/
proto.api.commons.AutoQuestion.FlagExpr.prototype.setAndList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.commons.AutoQuestion.FlagExpr=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AutoQuestion.FlagExpr}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.addAnd = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.commons.AutoQuestion.FlagExpr, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.clearAndList = function() {
  return this.setAndList([]);
};


/**
 * repeated FlagExpr or = 2;
 * @return {!Array<!proto.api.commons.AutoQuestion.FlagExpr>}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.getOrList = function() {
  return /** @type{!Array<!proto.api.commons.AutoQuestion.FlagExpr>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.AutoQuestion.FlagExpr, 2));
};


/**
 * @param {!Array<!proto.api.commons.AutoQuestion.FlagExpr>} value
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
*/
proto.api.commons.AutoQuestion.FlagExpr.prototype.setOrList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.commons.AutoQuestion.FlagExpr=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AutoQuestion.FlagExpr}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.addOr = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.commons.AutoQuestion.FlagExpr, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.clearOrList = function() {
  return this.setOrList([]);
};


/**
 * optional Flag flag = 3;
 * @return {?proto.api.commons.AutoQuestion.FlagExpr.Flag}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.getFlag = function() {
  return /** @type{?proto.api.commons.AutoQuestion.FlagExpr.Flag} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AutoQuestion.FlagExpr.Flag, 3));
};


/**
 * @param {?proto.api.commons.AutoQuestion.FlagExpr.Flag|undefined} value
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
*/
proto.api.commons.AutoQuestion.FlagExpr.prototype.setFlag = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.clearFlag = function() {
  return this.setFlag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.hasFlag = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FlagExpr not = 4;
 * @return {?proto.api.commons.AutoQuestion.FlagExpr}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.getNot = function() {
  return /** @type{?proto.api.commons.AutoQuestion.FlagExpr} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AutoQuestion.FlagExpr, 4));
};


/**
 * @param {?proto.api.commons.AutoQuestion.FlagExpr|undefined} value
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
*/
proto.api.commons.AutoQuestion.FlagExpr.prototype.setNot = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoQuestion.FlagExpr} returns this
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.clearNot = function() {
  return this.setNot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoQuestion.FlagExpr.prototype.hasNot = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 auto_question_id = 2;
 * @return {number}
 */
proto.api.commons.AutoQuestion.prototype.getAutoQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setAutoQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 flag_sid = 3;
 * @return {number}
 */
proto.api.commons.AutoQuestion.prototype.getFlagSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setFlagSid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 scorecard_id = 5;
 * @return {number}
 */
proto.api.commons.AutoQuestion.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 auto_section_id = 6;
 * @return {number}
 */
proto.api.commons.AutoQuestion.prototype.getAutoSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setAutoSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 sort_order = 7;
 * @return {number}
 */
proto.api.commons.AutoQuestion.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional FlagExpr flag_expression = 10;
 * @return {?proto.api.commons.AutoQuestion.FlagExpr}
 */
proto.api.commons.AutoQuestion.prototype.getFlagExpression = function() {
  return /** @type{?proto.api.commons.AutoQuestion.FlagExpr} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.AutoQuestion.FlagExpr, 10));
};


/**
 * @param {?proto.api.commons.AutoQuestion.FlagExpr|undefined} value
 * @return {!proto.api.commons.AutoQuestion} returns this
*/
proto.api.commons.AutoQuestion.prototype.setFlagExpression = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.clearFlagExpression = function() {
  return this.setFlagExpression(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.AutoQuestion.prototype.hasFlagExpression = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string question = 11;
 * @return {string}
 */
proto.api.commons.AutoQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.api.commons.AutoQuestion.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int64 question_id = 13;
 * @return {number}
 */
proto.api.commons.AutoQuestion.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional RiskLevel risk_level = 14;
 * @return {!proto.api.commons.RiskLevel}
 */
proto.api.commons.AutoQuestion.prototype.getRiskLevel = function() {
  return /** @type {!proto.api.commons.RiskLevel} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.api.commons.RiskLevel} value
 * @return {!proto.api.commons.AutoQuestion} returns this
 */
proto.api.commons.AutoQuestion.prototype.setRiskLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.SmartQuestion.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SmartQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SmartQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SmartQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
smartQuestionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 3, 0),
sectionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
questionId: jspb.Message.getFieldWithDefault(msg, 5, 0),
description: jspb.Message.getFieldWithDefault(msg, 6, ""),
question: jspb.Message.getFieldWithDefault(msg, 7, ""),
answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api.commons.SmartQuestion.Answer.toObject, includeInstance),
focus: jspb.Message.getFieldWithDefault(msg, 11, 0),
sortOrder: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SmartQuestion}
 */
proto.api.commons.SmartQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SmartQuestion;
  return proto.api.commons.SmartQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SmartQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SmartQuestion}
 */
proto.api.commons.SmartQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmartQuestionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSectionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuestionId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 8:
      var value = new proto.api.commons.SmartQuestion.Answer;
      reader.readMessage(value,proto.api.commons.SmartQuestion.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    case 11:
      var value = /** @type {!proto.api.commons.QuestionFocus} */ (reader.readEnum());
      msg.setFocus(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SmartQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SmartQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SmartQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSmartQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSectionId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.api.commons.SmartQuestion.Answer.serializeBinaryToWriter
    );
  }
  f = message.getFocus();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getSortOrder();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.SmartQuestion.Answer.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.api.commons.SmartQuestion.Answer.ResultCase = {
  RESULT_NOT_SET: 0,
  POINTS: 2,
  FAIL_TYPE: 3
};

/**
 * @return {proto.api.commons.SmartQuestion.Answer.ResultCase}
 */
proto.api.commons.SmartQuestion.Answer.prototype.getResultCase = function() {
  return /** @type {proto.api.commons.SmartQuestion.Answer.ResultCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.SmartQuestion.Answer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SmartQuestion.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SmartQuestion.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SmartQuestion.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartQuestion.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
answer: jspb.Message.getFieldWithDefault(msg, 1, ""),
points: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
failType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SmartQuestion.Answer}
 */
proto.api.commons.SmartQuestion.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SmartQuestion.Answer;
  return proto.api.commons.SmartQuestion.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SmartQuestion.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SmartQuestion.Answer}
 */
proto.api.commons.SmartQuestion.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPoints(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.FailType} */ (reader.readEnum());
      msg.setFailType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SmartQuestion.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SmartQuestion.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SmartQuestion.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartQuestion.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {!proto.api.commons.FailType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string answer = 1;
 * @return {string}
 */
proto.api.commons.SmartQuestion.Answer.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmartQuestion.Answer} returns this
 */
proto.api.commons.SmartQuestion.Answer.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 points = 2;
 * @return {number}
 */
proto.api.commons.SmartQuestion.Answer.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartQuestion.Answer} returns this
 */
proto.api.commons.SmartQuestion.Answer.prototype.setPoints = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.SmartQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.SmartQuestion.Answer} returns this
 */
proto.api.commons.SmartQuestion.Answer.prototype.clearPoints = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.SmartQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartQuestion.Answer.prototype.hasPoints = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FailType fail_type = 3;
 * @return {!proto.api.commons.FailType}
 */
proto.api.commons.SmartQuestion.Answer.prototype.getFailType = function() {
  return /** @type {!proto.api.commons.FailType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.FailType} value
 * @return {!proto.api.commons.SmartQuestion.Answer} returns this
 */
proto.api.commons.SmartQuestion.Answer.prototype.setFailType = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.SmartQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.SmartQuestion.Answer} returns this
 */
proto.api.commons.SmartQuestion.Answer.prototype.clearFailType = function() {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.SmartQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartQuestion.Answer.prototype.hasFailType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 smart_question_id = 2;
 * @return {number}
 */
proto.api.commons.SmartQuestion.prototype.getSmartQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setSmartQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_id = 3;
 * @return {number}
 */
proto.api.commons.SmartQuestion.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 section_id = 4;
 * @return {number}
 */
proto.api.commons.SmartQuestion.prototype.getSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 question_id = 5;
 * @return {number}
 */
proto.api.commons.SmartQuestion.prototype.getQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.api.commons.SmartQuestion.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string question = 7;
 * @return {string}
 */
proto.api.commons.SmartQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Answer answers = 8;
 * @return {!Array<!proto.api.commons.SmartQuestion.Answer>}
 */
proto.api.commons.SmartQuestion.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api.commons.SmartQuestion.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.SmartQuestion.Answer, 8));
};


/**
 * @param {!Array<!proto.api.commons.SmartQuestion.Answer>} value
 * @return {!proto.api.commons.SmartQuestion} returns this
*/
proto.api.commons.SmartQuestion.prototype.setAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.api.commons.SmartQuestion.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.SmartQuestion.Answer}
 */
proto.api.commons.SmartQuestion.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.api.commons.SmartQuestion.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};


/**
 * optional QuestionFocus focus = 11;
 * @return {!proto.api.commons.QuestionFocus}
 */
proto.api.commons.SmartQuestion.prototype.getFocus = function() {
  return /** @type {!proto.api.commons.QuestionFocus} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.api.commons.QuestionFocus} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setFocus = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional int32 sort_order = 12;
 * @return {number}
 */
proto.api.commons.SmartQuestion.prototype.getSortOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartQuestion} returns this
 */
proto.api.commons.SmartQuestion.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.SmartEvaluation.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SmartEvaluation.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SmartEvaluation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SmartEvaluation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluation.toObject = function(includeInstance, msg) {
  var f, obj = {
smartEvaluationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
scorecardId: jspb.Message.getFieldWithDefault(msg, 3, 0),
transcriptSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
agentUserId: jspb.Message.getFieldWithDefault(msg, 5, ""),
score: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
scoringVersion: jspb.Message.getFieldWithDefault(msg, 7, 0),
scorecardVersion: jspb.Message.getFieldWithDefault(msg, 8, 0),
completeTime: (f = msg.getCompleteTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
deleteTime: (f = msg.getDeleteTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
smartEvaluationSectionsList: jspb.Message.toObjectList(msg.getSmartEvaluationSectionsList(),
    proto.api.commons.SmartEvaluationSection.toObject, includeInstance),
channelType: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SmartEvaluation}
 */
proto.api.commons.SmartEvaluation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SmartEvaluation;
  return proto.api.commons.SmartEvaluation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SmartEvaluation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SmartEvaluation}
 */
proto.api.commons.SmartEvaluation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmartEvaluationId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTranscriptSid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentUserId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScoringVersion(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScorecardVersion(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCompleteTime(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeleteTime(value);
      break;
    case 11:
      var value = new proto.api.commons.SmartEvaluationSection;
      reader.readMessage(value,proto.api.commons.SmartEvaluationSection.deserializeBinaryFromReader);
      msg.addSmartEvaluationSections(value);
      break;
    case 12:
      var value = /** @type {!proto.api.commons.ChannelType} */ (reader.readEnum());
      msg.setChannelType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SmartEvaluation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SmartEvaluation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SmartEvaluation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSmartEvaluationId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTranscriptSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAgentUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getScoringVersion();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getScorecardVersion();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCompleteTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeleteTime();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSmartEvaluationSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.api.commons.SmartEvaluationSection.serializeBinaryToWriter
    );
  }
  f = message.getChannelType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional int64 smart_evaluation_id = 2;
 * @return {number}
 */
proto.api.commons.SmartEvaluation.prototype.getSmartEvaluationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setSmartEvaluationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 scorecard_id = 3;
 * @return {number}
 */
proto.api.commons.SmartEvaluation.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 transcript_sid = 4;
 * @return {number}
 */
proto.api.commons.SmartEvaluation.prototype.getTranscriptSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setTranscriptSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string agent_user_id = 5;
 * @return {string}
 */
proto.api.commons.SmartEvaluation.prototype.getAgentUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setAgentUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double score = 6;
 * @return {number}
 */
proto.api.commons.SmartEvaluation.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 scoring_version = 7;
 * @return {number}
 */
proto.api.commons.SmartEvaluation.prototype.getScoringVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setScoringVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 scorecard_version = 8;
 * @return {number}
 */
proto.api.commons.SmartEvaluation.prototype.getScorecardVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setScorecardVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp complete_time = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SmartEvaluation.prototype.getCompleteTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
*/
proto.api.commons.SmartEvaluation.prototype.setCompleteTime = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.clearCompleteTime = function() {
  return this.setCompleteTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluation.prototype.hasCompleteTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp delete_time = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SmartEvaluation.prototype.getDeleteTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
*/
proto.api.commons.SmartEvaluation.prototype.setDeleteTime = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.clearDeleteTime = function() {
  return this.setDeleteTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluation.prototype.hasDeleteTime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated SmartEvaluationSection smart_evaluation_sections = 11;
 * @return {!Array<!proto.api.commons.SmartEvaluationSection>}
 */
proto.api.commons.SmartEvaluation.prototype.getSmartEvaluationSectionsList = function() {
  return /** @type{!Array<!proto.api.commons.SmartEvaluationSection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.SmartEvaluationSection, 11));
};


/**
 * @param {!Array<!proto.api.commons.SmartEvaluationSection>} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
*/
proto.api.commons.SmartEvaluation.prototype.setSmartEvaluationSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.api.commons.SmartEvaluationSection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.SmartEvaluationSection}
 */
proto.api.commons.SmartEvaluation.prototype.addSmartEvaluationSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.api.commons.SmartEvaluationSection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.clearSmartEvaluationSectionsList = function() {
  return this.setSmartEvaluationSectionsList([]);
};


/**
 * optional ChannelType channel_type = 12;
 * @return {!proto.api.commons.ChannelType}
 */
proto.api.commons.SmartEvaluation.prototype.getChannelType = function() {
  return /** @type {!proto.api.commons.ChannelType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.api.commons.ChannelType} value
 * @return {!proto.api.commons.SmartEvaluation} returns this
 */
proto.api.commons.SmartEvaluation.prototype.setChannelType = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.SmartEvaluationSection.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SmartEvaluationSection.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SmartEvaluationSection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SmartEvaluationSection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluationSection.toObject = function(includeInstance, msg) {
  var f, obj = {
sectionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
points: jspb.Message.getFieldWithDefault(msg, 5, 0),
possiblePoints: jspb.Message.getFieldWithDefault(msg, 6, 0),
createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
deleteTime: (f = msg.getDeleteTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
smartEvaluationQuestionsList: jspb.Message.toObjectList(msg.getSmartEvaluationQuestionsList(),
    proto.api.commons.SmartEvaluationQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SmartEvaluationSection}
 */
proto.api.commons.SmartEvaluationSection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SmartEvaluationSection;
  return proto.api.commons.SmartEvaluationSection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SmartEvaluationSection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SmartEvaluationSection}
 */
proto.api.commons.SmartEvaluationSection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSectionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPoints(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPossiblePoints(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeleteTime(value);
      break;
    case 9:
      var value = new proto.api.commons.SmartEvaluationQuestion;
      reader.readMessage(value,proto.api.commons.SmartEvaluationQuestion.deserializeBinaryFromReader);
      msg.addSmartEvaluationQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SmartEvaluationSection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SmartEvaluationSection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SmartEvaluationSection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluationSection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPossiblePoints();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeleteTime();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSmartEvaluationQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.api.commons.SmartEvaluationQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 section_id = 4;
 * @return {number}
 */
proto.api.commons.SmartEvaluationSection.prototype.getSectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
 */
proto.api.commons.SmartEvaluationSection.prototype.setSectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 points = 5;
 * @return {number}
 */
proto.api.commons.SmartEvaluationSection.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
 */
proto.api.commons.SmartEvaluationSection.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 possible_points = 6;
 * @return {number}
 */
proto.api.commons.SmartEvaluationSection.prototype.getPossiblePoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
 */
proto.api.commons.SmartEvaluationSection.prototype.setPossiblePoints = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp create_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SmartEvaluationSection.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
*/
proto.api.commons.SmartEvaluationSection.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
 */
proto.api.commons.SmartEvaluationSection.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationSection.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp delete_time = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SmartEvaluationSection.prototype.getDeleteTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
*/
proto.api.commons.SmartEvaluationSection.prototype.setDeleteTime = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
 */
proto.api.commons.SmartEvaluationSection.prototype.clearDeleteTime = function() {
  return this.setDeleteTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationSection.prototype.hasDeleteTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated SmartEvaluationQuestion smart_evaluation_questions = 9;
 * @return {!Array<!proto.api.commons.SmartEvaluationQuestion>}
 */
proto.api.commons.SmartEvaluationSection.prototype.getSmartEvaluationQuestionsList = function() {
  return /** @type{!Array<!proto.api.commons.SmartEvaluationQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.SmartEvaluationQuestion, 9));
};


/**
 * @param {!Array<!proto.api.commons.SmartEvaluationQuestion>} value
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
*/
proto.api.commons.SmartEvaluationSection.prototype.setSmartEvaluationQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.api.commons.SmartEvaluationQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.SmartEvaluationQuestion}
 */
proto.api.commons.SmartEvaluationSection.prototype.addSmartEvaluationQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.api.commons.SmartEvaluationQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.SmartEvaluationSection} returns this
 */
proto.api.commons.SmartEvaluationSection.prototype.clearSmartEvaluationQuestionsList = function() {
  return this.setSmartEvaluationQuestionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SmartEvaluationQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SmartEvaluationQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluationQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
smartQuestionId: jspb.Message.getFieldWithDefault(msg, 5, 0),
points: jspb.Message.getFieldWithDefault(msg, 6, 0),
possiblePoints: jspb.Message.getFieldWithDefault(msg, 7, 0),
answer: (f = msg.getAnswer()) && proto.api.commons.SmartEvaluationQuestion.Answer.toObject(includeInstance, f),
createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
deleteTime: (f = msg.getDeleteTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SmartEvaluationQuestion}
 */
proto.api.commons.SmartEvaluationQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SmartEvaluationQuestion;
  return proto.api.commons.SmartEvaluationQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SmartEvaluationQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SmartEvaluationQuestion}
 */
proto.api.commons.SmartEvaluationQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmartQuestionId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPoints(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPossiblePoints(value);
      break;
    case 8:
      var value = new proto.api.commons.SmartEvaluationQuestion.Answer;
      reader.readMessage(value,proto.api.commons.SmartEvaluationQuestion.Answer.deserializeBinaryFromReader);
      msg.setAnswer(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeleteTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SmartEvaluationQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SmartEvaluationQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluationQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSmartQuestionId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPossiblePoints();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAnswer();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.api.commons.SmartEvaluationQuestion.Answer.serializeBinaryToWriter
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeleteTime();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.ResultCase = {
  RESULT_NOT_SET: 0,
  POINTS: 2,
  FAIL_TYPE: 3,
  ANSWER_POINTS: 4
};

/**
 * @return {proto.api.commons.SmartEvaluationQuestion.Answer.ResultCase}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.getResultCase = function() {
  return /** @type {proto.api.commons.SmartEvaluationQuestion.Answer.ResultCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SmartEvaluationQuestion.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SmartEvaluationQuestion.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluationQuestion.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
answer: jspb.Message.getFieldWithDefault(msg, 1, ""),
points: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
failType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
answerPoints: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SmartEvaluationQuestion.Answer;
  return proto.api.commons.SmartEvaluationQuestion.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SmartEvaluationQuestion.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPoints(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.FailType} */ (reader.readEnum());
      msg.setFailType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAnswerPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SmartEvaluationQuestion.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SmartEvaluationQuestion.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmartEvaluationQuestion.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {!proto.api.commons.FailType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string answer = 1;
 * @return {string}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer} returns this
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 points = 2;
 * @return {number}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer} returns this
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.setPoints = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer} returns this
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.clearPoints = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.hasPoints = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FailType fail_type = 3;
 * @return {!proto.api.commons.FailType}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.getFailType = function() {
  return /** @type {!proto.api.commons.FailType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.FailType} value
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer} returns this
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.setFailType = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer} returns this
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.clearFailType = function() {
  return jspb.Message.setOneofField(this, 3, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.hasFailType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 answer_points = 4;
 * @return {number}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.getAnswerPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer} returns this
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.setAnswerPoints = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationQuestion.Answer} returns this
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.clearAnswerPoints = function() {
  return jspb.Message.setOneofField(this, 4, proto.api.commons.SmartEvaluationQuestion.Answer.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationQuestion.Answer.prototype.hasAnswerPoints = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 smart_question_id = 5;
 * @return {number}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.getSmartQuestionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
 */
proto.api.commons.SmartEvaluationQuestion.prototype.setSmartQuestionId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 points = 6;
 * @return {number}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
 */
proto.api.commons.SmartEvaluationQuestion.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 possible_points = 7;
 * @return {number}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.getPossiblePoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
 */
proto.api.commons.SmartEvaluationQuestion.prototype.setPossiblePoints = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Answer answer = 8;
 * @return {?proto.api.commons.SmartEvaluationQuestion.Answer}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.getAnswer = function() {
  return /** @type{?proto.api.commons.SmartEvaluationQuestion.Answer} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.SmartEvaluationQuestion.Answer, 8));
};


/**
 * @param {?proto.api.commons.SmartEvaluationQuestion.Answer|undefined} value
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
*/
proto.api.commons.SmartEvaluationQuestion.prototype.setAnswer = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
 */
proto.api.commons.SmartEvaluationQuestion.prototype.clearAnswer = function() {
  return this.setAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.hasAnswer = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp create_time = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
*/
proto.api.commons.SmartEvaluationQuestion.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
 */
proto.api.commons.SmartEvaluationQuestion.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp delete_time = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.getDeleteTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
*/
proto.api.commons.SmartEvaluationQuestion.prototype.setDeleteTime = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.SmartEvaluationQuestion} returns this
 */
proto.api.commons.SmartEvaluationQuestion.prototype.clearDeleteTime = function() {
  return this.setDeleteTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.SmartEvaluationQuestion.prototype.hasDeleteTime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * @enum {number}
 */
proto.api.commons.CategoryType = {
  INVALID: 0,
  SKILL_CALLS: 1,
  MANUAL_DIAL: 2
};

/**
 * @enum {number}
 */
proto.api.commons.EvaluationType = {
  EVALUATE_MANUAL: 0,
  EVALUATE_AUTO: 1,
  EVALUATE_SMART: 2
};

/**
 * @enum {number}
 */
proto.api.commons.ScoreType = {
  SCORE_SIMPLE_SUM: 0,
  SCORE_WEIGHTED_SUM: 1,
  SCORE_EVEN_WEIGHTED_SUM: 2
};

/**
 * @enum {number}
 */
proto.api.commons.FailType = {
  FAIL_QUESTION: 0,
  FAIL_SECTION: 1,
  FAIL_SCORECARD: 2
};

/**
 * @enum {number}
 */
proto.api.commons.QuestionFocus = {
  QUESTION_FOCUS_UNSPECIFIED: 0,
  QUESTION_FOCUS_AGENT: 1,
  QUESTION_FOCUS_CUSTOMER: 2
};

/**
 * @enum {number}
 */
proto.api.commons.ScorecardState = {
  SCORECARD_IS_DRAFT: 0,
  SCORECARD_IS_READY: 1,
  SCORECARD_IS_IN_USE: 2,
  SCORECARD_IS_TEMPLATE: 3,
  SCORECARD_IS_READY_DISABLED: 4,
  SCORECARD_IS_IN_USE_DISABLED: 5
};

/**
 * @enum {number}
 */
proto.api.commons.EvaluationState = {
  EVALUATION_IN_PROGRESS: 0,
  EVALUATION_PASSED: 1,
  EVALUATION_FAILED: 2
};

/**
 * @enum {number}
 */
proto.api.commons.RiskLevel = {
  RISK_LEVEL_NONE: 0,
  RISK_LEVEL_LOW: 1,
  RISK_LEVEL_MEDIUM: 2,
  RISK_LEVEL_HIGH: 3,
  RISK_LEVEL_RISK_FREE: 4
};

goog.object.extend(exports, proto.api.commons);
