// source: api/commons/wfm.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.commons.AvailabilityOption', null, global);
goog.exportSymbol('proto.api.commons.BitmapType', null, global);
goog.exportSymbol('proto.api.commons.CallProfileGroupAvgs', null, global);
goog.exportSymbol('proto.api.commons.CallProfileGroupCalls', null, global);
goog.exportSymbol('proto.api.commons.ConfigEntityType', null, global);
goog.exportSymbol('proto.api.commons.ConfigRelationshipType', null, global);
goog.exportSymbol('proto.api.commons.ConstraintRuleType', null, global);
goog.exportSymbol('proto.api.commons.ConstraintTimeUnit', null, global);
goog.exportSymbol('proto.api.commons.DOWPlacementType', null, global);
goog.exportSymbol('proto.api.commons.DatetimeRange', null, global);
goog.exportSymbol('proto.api.commons.DayOfWeek', null, global);
goog.exportSymbol('proto.api.commons.DiagnosticCode', null, global);
goog.exportSymbol('proto.api.commons.DiagnosticLevel', null, global);
goog.exportSymbol('proto.api.commons.DistributionProfile', null, global);
goog.exportSymbol('proto.api.commons.ForecastingParameters', null, global);
goog.exportSymbol('proto.api.commons.ForecastingParameters.ForecastRangeCase', null, global);
goog.exportSymbol('proto.api.commons.ForecastingParameters.HistoricalDataRangeCase', null, global);
goog.exportSymbol('proto.api.commons.ForecastingParameters.TrainingDataRangeCase', null, global);
goog.exportSymbol('proto.api.commons.OpenTimesOption', null, global);
goog.exportSymbol('proto.api.commons.OptionTypes', null, global);
goog.exportSymbol('proto.api.commons.OptionTypes.DesiredOptionCase', null, global);
goog.exportSymbol('proto.api.commons.PerformanceMetricType', null, global);
goog.exportSymbol('proto.api.commons.ProfileDOW', null, global);
goog.exportSymbol('proto.api.commons.ProfileMOY', null, global);
goog.exportSymbol('proto.api.commons.ProfileTOD', null, global);
goog.exportSymbol('proto.api.commons.ProfileWOMS', null, global);
goog.exportSymbol('proto.api.commons.RegressionForecasterAvgsProcessingType', null, global);
goog.exportSymbol('proto.api.commons.RegressionForecasterModelTypes', null, global);
goog.exportSymbol('proto.api.commons.ScheduleSelector', null, global);
goog.exportSymbol('proto.api.commons.ScheduleShouldInclude', null, global);
goog.exportSymbol('proto.api.commons.ScheduleType', null, global);
goog.exportSymbol('proto.api.commons.SchedulingTargetType', null, global);
goog.exportSymbol('proto.api.commons.SkillType', null, global);
goog.exportSymbol('proto.api.commons.SkillType.Enum', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SkillType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.SkillType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SkillType.displayName = 'proto.api.commons.SkillType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.DatetimeRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.DatetimeRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.DatetimeRange.displayName = 'proto.api.commons.DatetimeRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ForecastingParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.ForecastingParameters.oneofGroups_);
};
goog.inherits(proto.api.commons.ForecastingParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ForecastingParameters.displayName = 'proto.api.commons.ForecastingParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ProfileTOD = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.ProfileTOD.repeatedFields_, null);
};
goog.inherits(proto.api.commons.ProfileTOD, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ProfileTOD.displayName = 'proto.api.commons.ProfileTOD';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ProfileWOMS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.ProfileWOMS.repeatedFields_, null);
};
goog.inherits(proto.api.commons.ProfileWOMS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ProfileWOMS.displayName = 'proto.api.commons.ProfileWOMS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ProfileDOW = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ProfileDOW, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ProfileDOW.displayName = 'proto.api.commons.ProfileDOW';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ProfileMOY = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ProfileMOY, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ProfileMOY.displayName = 'proto.api.commons.ProfileMOY';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.DistributionProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.DistributionProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.DistributionProfile.displayName = 'proto.api.commons.DistributionProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallProfileGroupCalls = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallProfileGroupCalls, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallProfileGroupCalls.displayName = 'proto.api.commons.CallProfileGroupCalls';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallProfileGroupAvgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallProfileGroupAvgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallProfileGroupAvgs.displayName = 'proto.api.commons.CallProfileGroupAvgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.OptionTypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.commons.OptionTypes.oneofGroups_);
};
goog.inherits(proto.api.commons.OptionTypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.OptionTypes.displayName = 'proto.api.commons.OptionTypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ScheduleSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ScheduleSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ScheduleSelector.displayName = 'proto.api.commons.ScheduleSelector';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SkillType.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SkillType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SkillType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SkillType.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SkillType}
 */
proto.api.commons.SkillType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SkillType;
  return proto.api.commons.SkillType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SkillType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SkillType}
 */
proto.api.commons.SkillType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SkillType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SkillType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SkillType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SkillType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.SkillType.Enum = {
  AGENT_SKILL: 0,
  HUNT_GROUP: 1,
  AGENT_PBX: 2,
  HUNT_GROUP_PBX: 3,
  PBX: 4,
  AGENT: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.DatetimeRange.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.DatetimeRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.DatetimeRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.DatetimeRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startDatetime: (f = msg.getStartDatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endDatetime: (f = msg.getEndDatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.DatetimeRange}
 */
proto.api.commons.DatetimeRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.DatetimeRange;
  return proto.api.commons.DatetimeRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.DatetimeRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.DatetimeRange}
 */
proto.api.commons.DatetimeRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartDatetime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndDatetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.DatetimeRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.DatetimeRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.DatetimeRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.DatetimeRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartDatetime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndDatetime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_datetime = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.DatetimeRange.prototype.getStartDatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.DatetimeRange} returns this
*/
proto.api.commons.DatetimeRange.prototype.setStartDatetime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DatetimeRange} returns this
 */
proto.api.commons.DatetimeRange.prototype.clearStartDatetime = function() {
  return this.setStartDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DatetimeRange.prototype.hasStartDatetime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_datetime = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.DatetimeRange.prototype.getEndDatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.DatetimeRange} returns this
*/
proto.api.commons.DatetimeRange.prototype.setEndDatetime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DatetimeRange} returns this
 */
proto.api.commons.DatetimeRange.prototype.clearEndDatetime = function() {
  return this.setEndDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DatetimeRange.prototype.hasEndDatetime = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.ForecastingParameters.oneofGroups_ = [[6,7],[9,10],[11,12]];

/**
 * @enum {number}
 */
proto.api.commons.ForecastingParameters.HistoricalDataRangeCase = {
  HISTORICAL_DATA_RANGE_NOT_SET: 0,
  HISTORICAL_DATA_RANGE_IN_MONTHS: 6,
  HISTORICAL_DATA_RANGE_START_DATETIME: 7
};

/**
 * @return {proto.api.commons.ForecastingParameters.HistoricalDataRangeCase}
 */
proto.api.commons.ForecastingParameters.prototype.getHistoricalDataRangeCase = function() {
  return /** @type {proto.api.commons.ForecastingParameters.HistoricalDataRangeCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.ForecastingParameters.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.api.commons.ForecastingParameters.ForecastRangeCase = {
  FORECAST_RANGE_NOT_SET: 0,
  FORECAST_RANGE_IN_WEEKS: 9,
  FORECAST_DATETIME_RANGE: 10
};

/**
 * @return {proto.api.commons.ForecastingParameters.ForecastRangeCase}
 */
proto.api.commons.ForecastingParameters.prototype.getForecastRangeCase = function() {
  return /** @type {proto.api.commons.ForecastingParameters.ForecastRangeCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.ForecastingParameters.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.api.commons.ForecastingParameters.TrainingDataRangeCase = {
  TRAINING_DATA_RANGE_NOT_SET: 0,
  TRAINING_DATA_RANGE_IN_MONTHS: 11,
  TRAINING_DATA_DATETIME_RANGE: 12
};

/**
 * @return {proto.api.commons.ForecastingParameters.TrainingDataRangeCase}
 */
proto.api.commons.ForecastingParameters.prototype.getTrainingDataRangeCase = function() {
  return /** @type {proto.api.commons.ForecastingParameters.TrainingDataRangeCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.ForecastingParameters.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ForecastingParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ForecastingParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ForecastingParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ForecastingParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    intervalWidthInMinutes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    historicalDataRangeInMonths: jspb.Message.getFieldWithDefault(msg, 6, 0),
    historicalDataRangeStartDatetime: (f = msg.getHistoricalDataRangeStartDatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    forecastTestRangeInWeeks: jspb.Message.getFieldWithDefault(msg, 8, 0),
    forecastRangeInWeeks: jspb.Message.getFieldWithDefault(msg, 9, 0),
    forecastDatetimeRange: (f = msg.getForecastDatetimeRange()) && proto.api.commons.DatetimeRange.toObject(includeInstance, f),
    trainingDataRangeInMonths: jspb.Message.getFieldWithDefault(msg, 11, 0),
    trainingDataDatetimeRange: (f = msg.getTrainingDataDatetimeRange()) && proto.api.commons.DatetimeRange.toObject(includeInstance, f),
    averagesCalculationRangeInMonths: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ForecastingParameters}
 */
proto.api.commons.ForecastingParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ForecastingParameters;
  return proto.api.commons.ForecastingParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ForecastingParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ForecastingParameters}
 */
proto.api.commons.ForecastingParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIntervalWidthInMinutes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHistoricalDataRangeInMonths(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setHistoricalDataRangeStartDatetime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setForecastTestRangeInWeeks(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setForecastRangeInWeeks(value);
      break;
    case 10:
      var value = new proto.api.commons.DatetimeRange;
      reader.readMessage(value,proto.api.commons.DatetimeRange.deserializeBinaryFromReader);
      msg.setForecastDatetimeRange(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTrainingDataRangeInMonths(value);
      break;
    case 12:
      var value = new proto.api.commons.DatetimeRange;
      reader.readMessage(value,proto.api.commons.DatetimeRange.deserializeBinaryFromReader);
      msg.setTrainingDataDatetimeRange(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAveragesCalculationRangeInMonths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ForecastingParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ForecastingParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ForecastingParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ForecastingParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntervalWidthInMinutes();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getHistoricalDataRangeStartDatetime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getForecastTestRangeInWeeks();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getForecastDatetimeRange();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.api.commons.DatetimeRange.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getTrainingDataDatetimeRange();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.api.commons.DatetimeRange.serializeBinaryToWriter
    );
  }
  f = message.getAveragesCalculationRangeInMonths();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
};


/**
 * optional int32 interval_width_in_minutes = 1;
 * @return {number}
 */
proto.api.commons.ForecastingParameters.prototype.getIntervalWidthInMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.setIntervalWidthInMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 historical_data_range_in_months = 6;
 * @return {number}
 */
proto.api.commons.ForecastingParameters.prototype.getHistoricalDataRangeInMonths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.setHistoricalDataRangeInMonths = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.api.commons.ForecastingParameters.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.clearHistoricalDataRangeInMonths = function() {
  return jspb.Message.setOneofField(this, 6, proto.api.commons.ForecastingParameters.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ForecastingParameters.prototype.hasHistoricalDataRangeInMonths = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp historical_data_range_start_datetime = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.ForecastingParameters.prototype.getHistoricalDataRangeStartDatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
*/
proto.api.commons.ForecastingParameters.prototype.setHistoricalDataRangeStartDatetime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api.commons.ForecastingParameters.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.clearHistoricalDataRangeStartDatetime = function() {
  return this.setHistoricalDataRangeStartDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ForecastingParameters.prototype.hasHistoricalDataRangeStartDatetime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 forecast_test_range_in_weeks = 8;
 * @return {number}
 */
proto.api.commons.ForecastingParameters.prototype.getForecastTestRangeInWeeks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.setForecastTestRangeInWeeks = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 forecast_range_in_weeks = 9;
 * @return {number}
 */
proto.api.commons.ForecastingParameters.prototype.getForecastRangeInWeeks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.setForecastRangeInWeeks = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.api.commons.ForecastingParameters.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.clearForecastRangeInWeeks = function() {
  return jspb.Message.setOneofField(this, 9, proto.api.commons.ForecastingParameters.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ForecastingParameters.prototype.hasForecastRangeInWeeks = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional DatetimeRange forecast_datetime_range = 10;
 * @return {?proto.api.commons.DatetimeRange}
 */
proto.api.commons.ForecastingParameters.prototype.getForecastDatetimeRange = function() {
  return /** @type{?proto.api.commons.DatetimeRange} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.DatetimeRange, 10));
};


/**
 * @param {?proto.api.commons.DatetimeRange|undefined} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
*/
proto.api.commons.ForecastingParameters.prototype.setForecastDatetimeRange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.api.commons.ForecastingParameters.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.clearForecastDatetimeRange = function() {
  return this.setForecastDatetimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ForecastingParameters.prototype.hasForecastDatetimeRange = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 training_data_range_in_months = 11;
 * @return {number}
 */
proto.api.commons.ForecastingParameters.prototype.getTrainingDataRangeInMonths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.setTrainingDataRangeInMonths = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.api.commons.ForecastingParameters.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.clearTrainingDataRangeInMonths = function() {
  return jspb.Message.setOneofField(this, 11, proto.api.commons.ForecastingParameters.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ForecastingParameters.prototype.hasTrainingDataRangeInMonths = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DatetimeRange training_data_datetime_range = 12;
 * @return {?proto.api.commons.DatetimeRange}
 */
proto.api.commons.ForecastingParameters.prototype.getTrainingDataDatetimeRange = function() {
  return /** @type{?proto.api.commons.DatetimeRange} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.DatetimeRange, 12));
};


/**
 * @param {?proto.api.commons.DatetimeRange|undefined} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
*/
proto.api.commons.ForecastingParameters.prototype.setTrainingDataDatetimeRange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.api.commons.ForecastingParameters.oneofGroups_[2], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.clearTrainingDataDatetimeRange = function() {
  return this.setTrainingDataDatetimeRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ForecastingParameters.prototype.hasTrainingDataDatetimeRange = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 averages_calculation_range_in_months = 13;
 * @return {number}
 */
proto.api.commons.ForecastingParameters.prototype.getAveragesCalculationRangeInMonths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ForecastingParameters} returns this
 */
proto.api.commons.ForecastingParameters.prototype.setAveragesCalculationRangeInMonths = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.ProfileTOD.repeatedFields_ = [1,2,3,4,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ProfileTOD.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ProfileTOD.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ProfileTOD} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileTOD.toObject = function(includeInstance, msg) {
  var f, obj = {
    sundayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    mondayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    tuesdayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    wednesdayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    thursdayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 5)) == null ? undefined : f,
    fridayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null ? undefined : f,
    saturdayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ProfileTOD}
 */
proto.api.commons.ProfileTOD.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ProfileTOD;
  return proto.api.commons.ProfileTOD.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ProfileTOD} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ProfileTOD}
 */
proto.api.commons.ProfileTOD.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSunday(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMonday(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTuesday(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addWednesday(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addThursday(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFriday(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSaturday(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ProfileTOD.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ProfileTOD.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ProfileTOD} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileTOD.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSundayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
  f = message.getMondayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = message.getTuesdayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
  f = message.getWednesdayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      4,
      f
    );
  }
  f = message.getThursdayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      5,
      f
    );
  }
  f = message.getFridayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      6,
      f
    );
  }
  f = message.getSaturdayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      7,
      f
    );
  }
};


/**
 * repeated float sunday = 1;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileTOD.prototype.getSundayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.setSundayList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.addSunday = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.clearSundayList = function() {
  return this.setSundayList([]);
};


/**
 * repeated float monday = 2;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileTOD.prototype.getMondayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.setMondayList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.addMonday = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.clearMondayList = function() {
  return this.setMondayList([]);
};


/**
 * repeated float tuesday = 3;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileTOD.prototype.getTuesdayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.setTuesdayList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.addTuesday = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.clearTuesdayList = function() {
  return this.setTuesdayList([]);
};


/**
 * repeated float wednesday = 4;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileTOD.prototype.getWednesdayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.setWednesdayList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.addWednesday = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.clearWednesdayList = function() {
  return this.setWednesdayList([]);
};


/**
 * repeated float thursday = 5;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileTOD.prototype.getThursdayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.setThursdayList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.addThursday = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.clearThursdayList = function() {
  return this.setThursdayList([]);
};


/**
 * repeated float friday = 6;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileTOD.prototype.getFridayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.setFridayList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.addFriday = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.clearFridayList = function() {
  return this.setFridayList([]);
};


/**
 * repeated float saturday = 7;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileTOD.prototype.getSaturdayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.setSaturdayList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.addSaturday = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileTOD} returns this
 */
proto.api.commons.ProfileTOD.prototype.clearSaturdayList = function() {
  return this.setSaturdayList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.ProfileWOMS.repeatedFields_ = [1,2,3,4,5,6,7,8,9,10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ProfileWOMS.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ProfileWOMS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ProfileWOMS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileWOMS.toObject = function(includeInstance, msg) {
  var f, obj = {
    januaryList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    februaryList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    marchList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    aprilList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    mayList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 5)) == null ? undefined : f,
    juneList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null ? undefined : f,
    julyList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f,
    augustList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    septemberList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 9)) == null ? undefined : f,
    octoberList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 10)) == null ? undefined : f,
    novemberList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 11)) == null ? undefined : f,
    decemberList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ProfileWOMS}
 */
proto.api.commons.ProfileWOMS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ProfileWOMS;
  return proto.api.commons.ProfileWOMS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ProfileWOMS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ProfileWOMS}
 */
proto.api.commons.ProfileWOMS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addJanuary(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFebruary(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMarch(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addApril(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMay(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addJune(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addJuly(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAugust(values[i]);
      }
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSeptember(values[i]);
      }
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addOctober(values[i]);
      }
      break;
    case 11:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNovember(values[i]);
      }
      break;
    case 12:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDecember(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ProfileWOMS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ProfileWOMS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ProfileWOMS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileWOMS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJanuaryList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
  f = message.getFebruaryList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = message.getMarchList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
  f = message.getAprilList();
  if (f.length > 0) {
    writer.writePackedFloat(
      4,
      f
    );
  }
  f = message.getMayList();
  if (f.length > 0) {
    writer.writePackedFloat(
      5,
      f
    );
  }
  f = message.getJuneList();
  if (f.length > 0) {
    writer.writePackedFloat(
      6,
      f
    );
  }
  f = message.getJulyList();
  if (f.length > 0) {
    writer.writePackedFloat(
      7,
      f
    );
  }
  f = message.getAugustList();
  if (f.length > 0) {
    writer.writePackedFloat(
      8,
      f
    );
  }
  f = message.getSeptemberList();
  if (f.length > 0) {
    writer.writePackedFloat(
      9,
      f
    );
  }
  f = message.getOctoberList();
  if (f.length > 0) {
    writer.writePackedFloat(
      10,
      f
    );
  }
  f = message.getNovemberList();
  if (f.length > 0) {
    writer.writePackedFloat(
      11,
      f
    );
  }
  f = message.getDecemberList();
  if (f.length > 0) {
    writer.writePackedFloat(
      12,
      f
    );
  }
};


/**
 * repeated float january = 1;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getJanuaryList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setJanuaryList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addJanuary = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearJanuaryList = function() {
  return this.setJanuaryList([]);
};


/**
 * repeated float february = 2;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getFebruaryList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setFebruaryList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addFebruary = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearFebruaryList = function() {
  return this.setFebruaryList([]);
};


/**
 * repeated float march = 3;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getMarchList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setMarchList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addMarch = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearMarchList = function() {
  return this.setMarchList([]);
};


/**
 * repeated float april = 4;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getAprilList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setAprilList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addApril = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearAprilList = function() {
  return this.setAprilList([]);
};


/**
 * repeated float may = 5;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getMayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setMayList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addMay = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearMayList = function() {
  return this.setMayList([]);
};


/**
 * repeated float june = 6;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getJuneList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setJuneList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addJune = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearJuneList = function() {
  return this.setJuneList([]);
};


/**
 * repeated float july = 7;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getJulyList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setJulyList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addJuly = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearJulyList = function() {
  return this.setJulyList([]);
};


/**
 * repeated float august = 8;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getAugustList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setAugustList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addAugust = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearAugustList = function() {
  return this.setAugustList([]);
};


/**
 * repeated float september = 9;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getSeptemberList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setSeptemberList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addSeptember = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearSeptemberList = function() {
  return this.setSeptemberList([]);
};


/**
 * repeated float october = 10;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getOctoberList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setOctoberList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addOctober = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearOctoberList = function() {
  return this.setOctoberList([]);
};


/**
 * repeated float november = 11;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getNovemberList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setNovemberList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addNovember = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearNovemberList = function() {
  return this.setNovemberList([]);
};


/**
 * repeated float december = 12;
 * @return {!Array<number>}
 */
proto.api.commons.ProfileWOMS.prototype.getDecemberList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 12));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.setDecemberList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.addDecember = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ProfileWOMS} returns this
 */
proto.api.commons.ProfileWOMS.prototype.clearDecemberList = function() {
  return this.setDecemberList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ProfileDOW.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ProfileDOW.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ProfileDOW} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileDOW.toObject = function(includeInstance, msg) {
  var f, obj = {
    sunday: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    monday: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    tuesday: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    wednesday: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    thursday: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    friday: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    saturday: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ProfileDOW}
 */
proto.api.commons.ProfileDOW.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ProfileDOW;
  return proto.api.commons.ProfileDOW.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ProfileDOW} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ProfileDOW}
 */
proto.api.commons.ProfileDOW.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSunday(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMonday(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTuesday(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWednesday(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setThursday(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFriday(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSaturday(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ProfileDOW.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ProfileDOW.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ProfileDOW} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileDOW.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSunday();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getMonday();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getTuesday();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getWednesday();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getThursday();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getFriday();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getSaturday();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
};


/**
 * optional float sunday = 1;
 * @return {number}
 */
proto.api.commons.ProfileDOW.prototype.getSunday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileDOW} returns this
 */
proto.api.commons.ProfileDOW.prototype.setSunday = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float monday = 2;
 * @return {number}
 */
proto.api.commons.ProfileDOW.prototype.getMonday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileDOW} returns this
 */
proto.api.commons.ProfileDOW.prototype.setMonday = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float tuesday = 3;
 * @return {number}
 */
proto.api.commons.ProfileDOW.prototype.getTuesday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileDOW} returns this
 */
proto.api.commons.ProfileDOW.prototype.setTuesday = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float wednesday = 4;
 * @return {number}
 */
proto.api.commons.ProfileDOW.prototype.getWednesday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileDOW} returns this
 */
proto.api.commons.ProfileDOW.prototype.setWednesday = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float thursday = 5;
 * @return {number}
 */
proto.api.commons.ProfileDOW.prototype.getThursday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileDOW} returns this
 */
proto.api.commons.ProfileDOW.prototype.setThursday = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float friday = 6;
 * @return {number}
 */
proto.api.commons.ProfileDOW.prototype.getFriday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileDOW} returns this
 */
proto.api.commons.ProfileDOW.prototype.setFriday = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float saturday = 7;
 * @return {number}
 */
proto.api.commons.ProfileDOW.prototype.getSaturday = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileDOW} returns this
 */
proto.api.commons.ProfileDOW.prototype.setSaturday = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ProfileMOY.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ProfileMOY.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ProfileMOY} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileMOY.toObject = function(includeInstance, msg) {
  var f, obj = {
    january: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    february: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    march: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    april: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    may: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    june: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    july: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    august: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    september: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    october: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    november: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    december: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ProfileMOY}
 */
proto.api.commons.ProfileMOY.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ProfileMOY;
  return proto.api.commons.ProfileMOY.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ProfileMOY} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ProfileMOY}
 */
proto.api.commons.ProfileMOY.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setJanuary(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFebruary(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMarch(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setApril(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMay(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setJune(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setJuly(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAugust(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSeptember(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOctober(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setNovember(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDecember(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ProfileMOY.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ProfileMOY.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ProfileMOY} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProfileMOY.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJanuary();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getFebruary();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getMarch();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getApril();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getMay();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getJune();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getJuly();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getAugust();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getSeptember();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getOctober();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getNovember();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getDecember();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
};


/**
 * optional float january = 1;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getJanuary = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setJanuary = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float february = 2;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getFebruary = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setFebruary = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float march = 3;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getMarch = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setMarch = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float april = 4;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getApril = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setApril = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float may = 5;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getMay = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setMay = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float june = 6;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getJune = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setJune = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float july = 7;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getJuly = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setJuly = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float august = 8;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getAugust = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setAugust = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float september = 9;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getSeptember = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setSeptember = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float october = 10;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getOctober = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setOctober = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float november = 11;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getNovember = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setNovember = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float december = 12;
 * @return {number}
 */
proto.api.commons.ProfileMOY.prototype.getDecember = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ProfileMOY} returns this
 */
proto.api.commons.ProfileMOY.prototype.setDecember = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.DistributionProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.DistributionProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.DistributionProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.DistributionProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileTod: (f = msg.getProfileTod()) && proto.api.commons.ProfileTOD.toObject(includeInstance, f),
    profileWoms: (f = msg.getProfileWoms()) && proto.api.commons.ProfileWOMS.toObject(includeInstance, f),
    profileDow: (f = msg.getProfileDow()) && proto.api.commons.ProfileDOW.toObject(includeInstance, f),
    profileMoy: (f = msg.getProfileMoy()) && proto.api.commons.ProfileMOY.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.DistributionProfile}
 */
proto.api.commons.DistributionProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.DistributionProfile;
  return proto.api.commons.DistributionProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.DistributionProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.DistributionProfile}
 */
proto.api.commons.DistributionProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.commons.ProfileTOD;
      reader.readMessage(value,proto.api.commons.ProfileTOD.deserializeBinaryFromReader);
      msg.setProfileTod(value);
      break;
    case 2:
      var value = new proto.api.commons.ProfileWOMS;
      reader.readMessage(value,proto.api.commons.ProfileWOMS.deserializeBinaryFromReader);
      msg.setProfileWoms(value);
      break;
    case 3:
      var value = new proto.api.commons.ProfileDOW;
      reader.readMessage(value,proto.api.commons.ProfileDOW.deserializeBinaryFromReader);
      msg.setProfileDow(value);
      break;
    case 4:
      var value = new proto.api.commons.ProfileMOY;
      reader.readMessage(value,proto.api.commons.ProfileMOY.deserializeBinaryFromReader);
      msg.setProfileMoy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.DistributionProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.DistributionProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.DistributionProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.DistributionProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileTod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.commons.ProfileTOD.serializeBinaryToWriter
    );
  }
  f = message.getProfileWoms();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.commons.ProfileWOMS.serializeBinaryToWriter
    );
  }
  f = message.getProfileDow();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.ProfileDOW.serializeBinaryToWriter
    );
  }
  f = message.getProfileMoy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.commons.ProfileMOY.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProfileTOD profile_tod = 1;
 * @return {?proto.api.commons.ProfileTOD}
 */
proto.api.commons.DistributionProfile.prototype.getProfileTod = function() {
  return /** @type{?proto.api.commons.ProfileTOD} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.ProfileTOD, 1));
};


/**
 * @param {?proto.api.commons.ProfileTOD|undefined} value
 * @return {!proto.api.commons.DistributionProfile} returns this
*/
proto.api.commons.DistributionProfile.prototype.setProfileTod = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DistributionProfile} returns this
 */
proto.api.commons.DistributionProfile.prototype.clearProfileTod = function() {
  return this.setProfileTod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DistributionProfile.prototype.hasProfileTod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProfileWOMS profile_woms = 2;
 * @return {?proto.api.commons.ProfileWOMS}
 */
proto.api.commons.DistributionProfile.prototype.getProfileWoms = function() {
  return /** @type{?proto.api.commons.ProfileWOMS} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.ProfileWOMS, 2));
};


/**
 * @param {?proto.api.commons.ProfileWOMS|undefined} value
 * @return {!proto.api.commons.DistributionProfile} returns this
*/
proto.api.commons.DistributionProfile.prototype.setProfileWoms = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DistributionProfile} returns this
 */
proto.api.commons.DistributionProfile.prototype.clearProfileWoms = function() {
  return this.setProfileWoms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DistributionProfile.prototype.hasProfileWoms = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ProfileDOW profile_dow = 3;
 * @return {?proto.api.commons.ProfileDOW}
 */
proto.api.commons.DistributionProfile.prototype.getProfileDow = function() {
  return /** @type{?proto.api.commons.ProfileDOW} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.ProfileDOW, 3));
};


/**
 * @param {?proto.api.commons.ProfileDOW|undefined} value
 * @return {!proto.api.commons.DistributionProfile} returns this
*/
proto.api.commons.DistributionProfile.prototype.setProfileDow = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DistributionProfile} returns this
 */
proto.api.commons.DistributionProfile.prototype.clearProfileDow = function() {
  return this.setProfileDow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DistributionProfile.prototype.hasProfileDow = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ProfileMOY profile_moy = 4;
 * @return {?proto.api.commons.ProfileMOY}
 */
proto.api.commons.DistributionProfile.prototype.getProfileMoy = function() {
  return /** @type{?proto.api.commons.ProfileMOY} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.ProfileMOY, 4));
};


/**
 * @param {?proto.api.commons.ProfileMOY|undefined} value
 * @return {!proto.api.commons.DistributionProfile} returns this
*/
proto.api.commons.DistributionProfile.prototype.setProfileMoy = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DistributionProfile} returns this
 */
proto.api.commons.DistributionProfile.prototype.clearProfileMoy = function() {
  return this.setProfileMoy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DistributionProfile.prototype.hasProfileMoy = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallProfileGroupCalls.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallProfileGroupCalls.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallProfileGroupCalls} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallProfileGroupCalls.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCalls: jspb.Message.getFieldWithDefault(msg, 1, 0),
    distributionProfile: (f = msg.getDistributionProfile()) && proto.api.commons.DistributionProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallProfileGroupCalls}
 */
proto.api.commons.CallProfileGroupCalls.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallProfileGroupCalls;
  return proto.api.commons.CallProfileGroupCalls.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallProfileGroupCalls} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallProfileGroupCalls}
 */
proto.api.commons.CallProfileGroupCalls.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCalls(value);
      break;
    case 2:
      var value = new proto.api.commons.DistributionProfile;
      reader.readMessage(value,proto.api.commons.DistributionProfile.deserializeBinaryFromReader);
      msg.setDistributionProfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallProfileGroupCalls.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallProfileGroupCalls.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallProfileGroupCalls} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallProfileGroupCalls.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalCalls();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDistributionProfile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.commons.DistributionProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 total_calls = 1;
 * @return {number}
 */
proto.api.commons.CallProfileGroupCalls.prototype.getTotalCalls = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.CallProfileGroupCalls} returns this
 */
proto.api.commons.CallProfileGroupCalls.prototype.setTotalCalls = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional DistributionProfile distribution_profile = 2;
 * @return {?proto.api.commons.DistributionProfile}
 */
proto.api.commons.CallProfileGroupCalls.prototype.getDistributionProfile = function() {
  return /** @type{?proto.api.commons.DistributionProfile} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.DistributionProfile, 2));
};


/**
 * @param {?proto.api.commons.DistributionProfile|undefined} value
 * @return {!proto.api.commons.CallProfileGroupCalls} returns this
*/
proto.api.commons.CallProfileGroupCalls.prototype.setDistributionProfile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.CallProfileGroupCalls} returns this
 */
proto.api.commons.CallProfileGroupCalls.prototype.clearDistributionProfile = function() {
  return this.setDistributionProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.CallProfileGroupCalls.prototype.hasDistributionProfile = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallProfileGroupAvgs.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallProfileGroupAvgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallProfileGroupAvgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallProfileGroupAvgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    minAverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    maxAverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    distributionProfile: (f = msg.getDistributionProfile()) && proto.api.commons.DistributionProfile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallProfileGroupAvgs}
 */
proto.api.commons.CallProfileGroupAvgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallProfileGroupAvgs;
  return proto.api.commons.CallProfileGroupAvgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallProfileGroupAvgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallProfileGroupAvgs}
 */
proto.api.commons.CallProfileGroupAvgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinAverage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxAverage(value);
      break;
    case 3:
      var value = new proto.api.commons.DistributionProfile;
      reader.readMessage(value,proto.api.commons.DistributionProfile.deserializeBinaryFromReader);
      msg.setDistributionProfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallProfileGroupAvgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallProfileGroupAvgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallProfileGroupAvgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallProfileGroupAvgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinAverage();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getMaxAverage();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getDistributionProfile();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.DistributionProfile.serializeBinaryToWriter
    );
  }
};


/**
 * optional float min_average = 1;
 * @return {number}
 */
proto.api.commons.CallProfileGroupAvgs.prototype.getMinAverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.CallProfileGroupAvgs} returns this
 */
proto.api.commons.CallProfileGroupAvgs.prototype.setMinAverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float max_average = 2;
 * @return {number}
 */
proto.api.commons.CallProfileGroupAvgs.prototype.getMaxAverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.CallProfileGroupAvgs} returns this
 */
proto.api.commons.CallProfileGroupAvgs.prototype.setMaxAverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional DistributionProfile distribution_profile = 3;
 * @return {?proto.api.commons.DistributionProfile}
 */
proto.api.commons.CallProfileGroupAvgs.prototype.getDistributionProfile = function() {
  return /** @type{?proto.api.commons.DistributionProfile} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.DistributionProfile, 3));
};


/**
 * @param {?proto.api.commons.DistributionProfile|undefined} value
 * @return {!proto.api.commons.CallProfileGroupAvgs} returns this
*/
proto.api.commons.CallProfileGroupAvgs.prototype.setDistributionProfile = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.CallProfileGroupAvgs} returns this
 */
proto.api.commons.CallProfileGroupAvgs.prototype.clearDistributionProfile = function() {
  return this.setDistributionProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.CallProfileGroupAvgs.prototype.hasDistributionProfile = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.OptionTypes.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api.commons.OptionTypes.DesiredOptionCase = {
  DESIRED_OPTION_NOT_SET: 0,
  OPEN_TIMES_OPTION: 1,
  AVAILABILITY_OPTION: 2
};

/**
 * @return {proto.api.commons.OptionTypes.DesiredOptionCase}
 */
proto.api.commons.OptionTypes.prototype.getDesiredOptionCase = function() {
  return /** @type {proto.api.commons.OptionTypes.DesiredOptionCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.OptionTypes.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.OptionTypes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.OptionTypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.OptionTypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.OptionTypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    openTimesOption: jspb.Message.getFieldWithDefault(msg, 1, 0),
    availabilityOption: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.OptionTypes}
 */
proto.api.commons.OptionTypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.OptionTypes;
  return proto.api.commons.OptionTypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.OptionTypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.OptionTypes}
 */
proto.api.commons.OptionTypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.commons.OpenTimesOption} */ (reader.readEnum());
      msg.setOpenTimesOption(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.AvailabilityOption} */ (reader.readEnum());
      msg.setAvailabilityOption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.OptionTypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.OptionTypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.OptionTypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.OptionTypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.api.commons.OpenTimesOption} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.api.commons.AvailabilityOption} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional OpenTimesOption open_times_option = 1;
 * @return {!proto.api.commons.OpenTimesOption}
 */
proto.api.commons.OptionTypes.prototype.getOpenTimesOption = function() {
  return /** @type {!proto.api.commons.OpenTimesOption} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.commons.OpenTimesOption} value
 * @return {!proto.api.commons.OptionTypes} returns this
 */
proto.api.commons.OptionTypes.prototype.setOpenTimesOption = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.api.commons.OptionTypes.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.OptionTypes} returns this
 */
proto.api.commons.OptionTypes.prototype.clearOpenTimesOption = function() {
  return jspb.Message.setOneofField(this, 1, proto.api.commons.OptionTypes.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.OptionTypes.prototype.hasOpenTimesOption = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AvailabilityOption availability_option = 2;
 * @return {!proto.api.commons.AvailabilityOption}
 */
proto.api.commons.OptionTypes.prototype.getAvailabilityOption = function() {
  return /** @type {!proto.api.commons.AvailabilityOption} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.AvailabilityOption} value
 * @return {!proto.api.commons.OptionTypes} returns this
 */
proto.api.commons.OptionTypes.prototype.setAvailabilityOption = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.OptionTypes.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.commons.OptionTypes} returns this
 */
proto.api.commons.OptionTypes.prototype.clearAvailabilityOption = function() {
  return jspb.Message.setOneofField(this, 2, proto.api.commons.OptionTypes.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.OptionTypes.prototype.hasAvailabilityOption = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ScheduleSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ScheduleSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ScheduleSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScheduleSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    scheduleSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scheduleType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ScheduleSelector}
 */
proto.api.commons.ScheduleSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ScheduleSelector;
  return proto.api.commons.ScheduleSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ScheduleSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ScheduleSelector}
 */
proto.api.commons.ScheduleSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScheduleSid(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.ScheduleType} */ (reader.readEnum());
      msg.setScheduleType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ScheduleSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ScheduleSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ScheduleSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ScheduleSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScheduleSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getScheduleType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int64 schedule_sid = 1;
 * @return {number}
 */
proto.api.commons.ScheduleSelector.prototype.getScheduleSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ScheduleSelector} returns this
 */
proto.api.commons.ScheduleSelector.prototype.setScheduleSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ScheduleType schedule_type = 2;
 * @return {!proto.api.commons.ScheduleType}
 */
proto.api.commons.ScheduleSelector.prototype.getScheduleType = function() {
  return /** @type {!proto.api.commons.ScheduleType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.ScheduleType} value
 * @return {!proto.api.commons.ScheduleSelector} returns this
 */
proto.api.commons.ScheduleSelector.prototype.setScheduleType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.api.commons.RegressionForecasterModelTypes = {
  RANDOM_FOREST: 0,
  ADABOOST: 1,
  GRADIENT_BOOSTING: 2,
  LINEAR_REGRESSION: 3,
  LINEAR_AVG: 4,
  SEGMENTED_LINEAR: 5,
  MLP: 6,
  AUTO: 7
};

/**
 * @enum {number}
 */
proto.api.commons.RegressionForecasterAvgsProcessingType = {
  FORECAST: 0,
  AVERAGES: 1,
  FIXED_AVERAGES: 2
};

/**
 * @enum {number}
 */
proto.api.commons.ConstraintTimeUnit = {
  MINUTES: 0,
  HOURS: 1,
  SHIFTS: 2,
  DAYS: 3,
  WEEKS: 4,
  MONTHS: 5,
  YEARS: 6
};

/**
 * @enum {number}
 */
proto.api.commons.ConfigEntityType = {
  CALL_CENTER_NODE: 0,
  CLIENT_NODE: 1,
  LOCATION_NODE: 2,
  PROGRAM_NODE: 3,
  AGENT_GROUP: 4,
  SHIFT_TEMPLATE: 5,
  WFM_AGENT: 6,
  PLACEMENT_RULE: 7,
  CONSTRAINT_RULE: 8,
  NON_SKILL_ACTIVITY: 9,
  AGENT_AVAILABILITY: 10,
  OPEN_TIMES: 11,
  SCHEDULING_ACTIVITY: 12,
  SKILL_PROFICIENCY: 13,
  SCHEDULE_SCENARIO: 14
};

/**
 * @enum {number}
 */
proto.api.commons.ConstraintRuleType = {
  MIN_CONSEC_ON: 0,
  MAX_CONSEC_ON: 1,
  MIN_CONSEC_OFF: 2,
  MAX_CONSEC_OFF: 3,
  MIN_TOTAL_ON: 4,
  MAX_TOTAL_ON: 5,
  MIN_TOTAL_OFF: 6,
  MAX_TOTAL_OFF: 7,
  MIN_SKILL_LEVEL: 8
};

/**
 * @enum {number}
 */
proto.api.commons.DOWPlacementType = {
  MUST_NOT: 0,
  MAY: 1,
  MUST: 2
};

/**
 * @enum {number}
 */
proto.api.commons.OpenTimesOption = {
  CLOSED: 0,
  OPEN: 1
};

/**
 * @enum {number}
 */
proto.api.commons.AvailabilityOption = {
  AVAILABLE: 0,
  NOT_AVAILABLE: 1,
  PREFER_NOT_AVAILABLE: 2
};

/**
 * @enum {number}
 */
proto.api.commons.DayOfWeek = {
  MON: 0,
  TUE: 1,
  WED: 2,
  THU: 3,
  FRI: 4,
  SAT: 5,
  SUN: 6
};

/**
 * @enum {number}
 */
proto.api.commons.ConfigRelationshipType = {
  IS_ASSOCIATED_WITH: 0,
  IS_NOT_ASSOCIATED_WITH: 1,
  IS_MEMBER_OF: 2
};

/**
 * @enum {number}
 */
proto.api.commons.DiagnosticLevel = {
  INFORMATION: 0,
  SUGGESTION: 1,
  WARNING: 2,
  DIAGNOSTIC_ERROR: 3,
  INTERNAL_ERROR: 4
};

/**
 * @enum {number}
 */
proto.api.commons.DiagnosticCode = {
  GENERAL: 0,
  OK: 1,
  NO_SKILLS_IN_DICTIONARY: 2,
  AGENT_HAS_NO_SKILL_PROFICIENCIES: 3,
  AGENT_HAS_NO_SKILLS: 4,
  NO_SCHEDULING_ACTIVITIES_FOR_CONSTRAINT_RULES: 5,
  SCHEDULING_ACTIVITY_FOR_CONSTRAINT_RULE_NOT_FOUND: 6,
  SHIFT_TEMPLATE_CANNOT_BE_NONE: 7,
  SHIFT_TEMPLATE_HAS_NO_PLACEMENT_RULES: 8,
  NO_ONCALL_IN_SHIFT_TEMPLATE_PLACEMENT_RULES: 9,
  MIN_GT_MAX_DURATION_IN_SHIFT_TEMPLATE_PLACEMENT_RULES: 10,
  MIN_GT_MAX_AGENTS_IN_SHIFT_TEMPLATE: 11,
  NO_PLACEMENT_RULES_FOR_SHIFT_TEMPLATE: 12,
  ACTIVITIES_SHORTER_THAN_SHIFT: 13,
  NOT_ENOUGH_AGENTS_FOR_SHIFT: 14,
  PROGRAM_HAS_NO_AGENT_GROUPS: 15,
  PROGRAM_HAS_NO_SHIFT_TEMPLATES: 16,
  LOCATION_HAS_NO_PROGRAMS: 17,
  CLIENT_HAS_NO_LOCATIONS: 18,
  CALL_CENTER_HAS_NO_CLIENTS: 19,
  PROGRAM_HAS_INVALID_PARENT_LOCATION: 20,
  LOCATION_HAS_INVALID_PARENT_CLIENT: 21,
  CLIENT_HAS_INVALID_PARENT_CALL_CENTER: 22,
  AGENT_GROUP_HAS_INVALID_PARENT_NODE: 23,
  SHIFT_TEMPLATE_HAS_INVALID_PARENT_PROGRAM: 24,
  NO_SKILL_PROFICIENCY_FOR_MIN_SKILL_PROFICIENCY_CONSTRAINT_RULE: 25
};

/**
 * @enum {number}
 */
proto.api.commons.PerformanceMetricType = {
  FTE_REQUIRED_VS_ACHIEVED_SIMPLE: 0,
  FTE_REQUIRED_VS_ACHIEVED_EXTENDED: 1,
  SERVICE_LEVEL_ANALYSIS: 2,
  SERVICE_LEVEL_MATRIX: 3,
  CONTACT_HANDLING_METRICS: 4,
  LOAD_FORECAST: 5
};

/**
 * @enum {number}
 */
proto.api.commons.ScheduleShouldInclude = {
  ONLY_SHIFT_INSTANCES: 0,
  ONLY_PERFORMANCE_METRICS: 1,
  SHIFT_INSTANCES_AND_PERFORMANCE_METRICS: 2
};

/**
 * @enum {number}
 */
proto.api.commons.ScheduleType = {
  DRAFT: 0,
  PUBLISHED: 1
};

/**
 * @enum {number}
 */
proto.api.commons.SchedulingTargetType = {
  COVERAGE: 0,
  SERVICE_LEVEL: 1
};

/**
 * @enum {number}
 */
proto.api.commons.BitmapType = {
  COMPLETE: 0,
  ONLY_WEEKMAPS: 1,
  ONLY_CALENDAR_ITEMS: 2
};

goog.object.extend(exports, proto.api.commons);
