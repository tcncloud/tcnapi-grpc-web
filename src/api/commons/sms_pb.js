// source: api/commons/sms.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.api.commons.SMSConversationAuditAction', null, global);
goog.exportSymbol('proto.api.commons.SMSIBGroupStatus', null, global);
goog.exportSymbol('proto.api.commons.SMSIBTaskStatus', null, global);
goog.exportSymbol('proto.api.commons.SMSMamStatus', null, global);
goog.exportSymbol('proto.api.commons.SMSStatus', null, global);
goog.exportSymbol('proto.api.commons.SimpleSmsMamData', null, global);
goog.exportSymbol('proto.api.commons.SimpleSmsMamKeyValue', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SimpleSmsMamData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.SimpleSmsMamData.repeatedFields_, null);
};
goog.inherits(proto.api.commons.SimpleSmsMamData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SimpleSmsMamData.displayName = 'proto.api.commons.SimpleSmsMamData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SimpleSmsMamKeyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.SimpleSmsMamKeyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SimpleSmsMamKeyValue.displayName = 'proto.api.commons.SimpleSmsMamKeyValue';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.SimpleSmsMamData.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SimpleSmsMamData.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SimpleSmsMamData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SimpleSmsMamData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleSmsMamData.toObject = function(includeInstance, msg) {
  var f, obj = {
src: jspb.Message.getFieldWithDefault(msg, 1, ""),
dst: jspb.Message.getFieldWithDefault(msg, 2, ""),
msg: jspb.Message.getFieldWithDefault(msg, 3, ""),
smsGroupSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
smsTaskSid: jspb.Message.getFieldWithDefault(msg, 5, 0),
isTollFree: jspb.Message.getFieldWithDefault(msg, 6, ""),
isTimeZone: jspb.Message.getFieldWithDefault(msg, 7, ""),
providerName: jspb.Message.getFieldWithDefault(msg, 8, ""),
huntGroupSid: jspb.Message.getFieldWithDefault(msg, 9, 0),
clientSid: jspb.Message.getFieldWithDefault(msg, 10, 0),
simpleSmsMamMetaDataList: jspb.Message.toObjectList(msg.getSimpleSmsMamMetaDataList(),
    proto.api.commons.SimpleSmsMamKeyValue.toObject, includeInstance),
dstCountryCode: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SimpleSmsMamData}
 */
proto.api.commons.SimpleSmsMamData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SimpleSmsMamData;
  return proto.api.commons.SimpleSmsMamData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SimpleSmsMamData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SimpleSmsMamData}
 */
proto.api.commons.SimpleSmsMamData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDst(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmsGroupSid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmsTaskSid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsTollFree(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsTimeZone(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderName(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClientSid(value);
      break;
    case 11:
      var value = new proto.api.commons.SimpleSmsMamKeyValue;
      reader.readMessage(value,proto.api.commons.SimpleSmsMamKeyValue.deserializeBinaryFromReader);
      msg.addSimpleSmsMamMetaData(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDstCountryCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SimpleSmsMamData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SimpleSmsMamData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SimpleSmsMamData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleSmsMamData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDst();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSmsGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSmsTaskSid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getIsTollFree();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsTimeZone();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProviderName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getClientSid();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getSimpleSmsMamMetaDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.api.commons.SimpleSmsMamKeyValue.serializeBinaryToWriter
    );
  }
  f = message.getDstCountryCode();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
};


/**
 * optional string src = 1;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamData.prototype.getSrc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setSrc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dst = 2;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamData.prototype.getDst = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setDst = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string msg = 3;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamData.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 sms_group_sid = 4;
 * @return {number}
 */
proto.api.commons.SimpleSmsMamData.prototype.getSmsGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setSmsGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 sms_task_sid = 5;
 * @return {number}
 */
proto.api.commons.SimpleSmsMamData.prototype.getSmsTaskSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setSmsTaskSid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string is_toll_free = 6;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamData.prototype.getIsTollFree = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setIsTollFree = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string is_time_zone = 7;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamData.prototype.getIsTimeZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setIsTimeZone = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string provider_name = 8;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamData.prototype.getProviderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setProviderName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 hunt_group_sid = 9;
 * @return {number}
 */
proto.api.commons.SimpleSmsMamData.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 client_sid = 10;
 * @return {number}
 */
proto.api.commons.SimpleSmsMamData.prototype.getClientSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setClientSid = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * repeated SimpleSmsMamKeyValue simple_sms_mam_meta_data = 11;
 * @return {!Array<!proto.api.commons.SimpleSmsMamKeyValue>}
 */
proto.api.commons.SimpleSmsMamData.prototype.getSimpleSmsMamMetaDataList = function() {
  return /** @type{!Array<!proto.api.commons.SimpleSmsMamKeyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.SimpleSmsMamKeyValue, 11));
};


/**
 * @param {!Array<!proto.api.commons.SimpleSmsMamKeyValue>} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
*/
proto.api.commons.SimpleSmsMamData.prototype.setSimpleSmsMamMetaDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.api.commons.SimpleSmsMamKeyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.SimpleSmsMamKeyValue}
 */
proto.api.commons.SimpleSmsMamData.prototype.addSimpleSmsMamMetaData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.api.commons.SimpleSmsMamKeyValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.clearSimpleSmsMamMetaDataList = function() {
  return this.setSimpleSmsMamMetaDataList([]);
};


/**
 * optional int64 dst_country_code = 12;
 * @return {number}
 */
proto.api.commons.SimpleSmsMamData.prototype.getDstCountryCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.SimpleSmsMamData} returns this
 */
proto.api.commons.SimpleSmsMamData.prototype.setDstCountryCode = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SimpleSmsMamKeyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SimpleSmsMamKeyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SimpleSmsMamKeyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleSmsMamKeyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
key: jspb.Message.getFieldWithDefault(msg, 1, ""),
value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SimpleSmsMamKeyValue}
 */
proto.api.commons.SimpleSmsMamKeyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SimpleSmsMamKeyValue;
  return proto.api.commons.SimpleSmsMamKeyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SimpleSmsMamKeyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SimpleSmsMamKeyValue}
 */
proto.api.commons.SimpleSmsMamKeyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SimpleSmsMamKeyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SimpleSmsMamKeyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SimpleSmsMamKeyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SimpleSmsMamKeyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamKeyValue.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamKeyValue} returns this
 */
proto.api.commons.SimpleSmsMamKeyValue.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api.commons.SimpleSmsMamKeyValue.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SimpleSmsMamKeyValue} returns this
 */
proto.api.commons.SimpleSmsMamKeyValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.api.commons.SMSStatus = {
  SMS_UNKWNON: 0,
  SMS_PREPARING: 7000,
  SMS_SCHEDULED: 7100,
  SMS_RESUME: 7150,
  SMS_RUNNING: 7200,
  SMS_COMPLETED: 7300,
  SMS_CANCELLED: 7310,
  SMS_CANCELLED_ADMIN: 7320,
  SMS_SUMMED_COMPLETED: 7400,
  SMS_SUMMED_CANCELLED: 7410,
  SMS_SUMMED_CANCELLED_ADMIN: 7420,
  SMS_PAUSED: 7500,
  SMS_TASK_WAITING: 7600,
  SMS_TASK_PROCESSING: 7700,
  SMS_TASK_DNC: 7710,
  SMS_TASK_INVALID: 7720,
  SMS_TASK_QUEUED: 7800,
  SMS_TASK_SENT: 7900,
  SMS_TASK_DELIVERED: 7910,
  SMS_TASK_NOT_DELIVERED: 7920,
  SMS_TASK_CANCELED: 7930
};

/**
 * @enum {number}
 */
proto.api.commons.SMSIBGroupStatus = {
  IB_SMS_GROUP_UNKNOWN: 0,
  IB_SMS_GROUP_PREPARING: 11000,
  IB_SMS_GROUP_SCHEDULED: 11010,
  IB_SMS_GROUP_RUNNING: 11020,
  IB_SMS_GROUP_PAUSED: 11030,
  IB_SMS_GROUP_RESUME: 11040,
  IB_SMS_GROUP_COMPLETED: 11050,
  IB_SMS_GROUP_CANCELLED_USER: 11060,
  IB_SMS_GROUP_CANCELLED_ADMIN: 11070,
  IB_SMS_GROUP_SUMMED_COMPLETED: 11150,
  IB_SMS_GROUP_SUMMED_CANCELLED_USER: 11160,
  IB_SMS_GROUP_SUMMED_CANCELLED_ADMIN: 11170
};

/**
 * @enum {number}
 */
proto.api.commons.SMSIBTaskStatus = {
  IB_SMS_TASK_UNKNOWN: 0,
  IB_SMS_TASK_COMPLETED: 13000
};

/**
 * @enum {number}
 */
proto.api.commons.SMSConversationAuditAction = {
  SMS_AUDIT_ACTION_CONVERSATION_START: 0,
  SMS_AUDIT_ACTION_CONVERSATION_MSG_SENT: 1,
  SMS_AUDIT_ACTION_CONVERSATION_MSG_READ: 2,
  SMS_AUDIT_ACTION_CONVERSATION_UNASSIGNED: 3,
  SMS_AUDIT_ACTION_CONVERSATION_ASSIGNED: 4,
  SMS_AUDIT_ACTION_CONVERSATION_TRANSFERRED: 5
};

/**
 * @enum {number}
 */
proto.api.commons.SMSMamStatus = {
  QUEUED: 0,
  APPROVED: 1,
  REJECTED: 2
};

goog.object.extend(exports, proto.api.commons);
