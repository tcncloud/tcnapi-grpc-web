// source: api/commons/tickets.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var globalThis = require("../../global.js");
var proto = globalThis.proto;
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.commons.ActionType', null, global);
goog.exportSymbol('proto.api.commons.AssignProjectTemplate', null, global);
goog.exportSymbol('proto.api.commons.CallbackContext', null, global);
goog.exportSymbol('proto.api.commons.CloseTicket', null, global);
goog.exportSymbol('proto.api.commons.Comment', null, global);
goog.exportSymbol('proto.api.commons.ConfirmClose', null, global);
goog.exportSymbol('proto.api.commons.ConfirmReplyComment', null, global);
goog.exportSymbol('proto.api.commons.Duration', null, global);
goog.exportSymbol('proto.api.commons.EditAttribute', null, global);
goog.exportSymbol('proto.api.commons.EditTicket', null, global);
goog.exportSymbol('proto.api.commons.EmailbackContext', null, global);
goog.exportSymbol('proto.api.commons.ListTemplate', null, global);
goog.exportSymbol('proto.api.commons.Metadata', null, global);
goog.exportSymbol('proto.api.commons.PhoneNumberType', null, global);
goog.exportSymbol('proto.api.commons.ProjectDescription', null, global);
goog.exportSymbol('proto.api.commons.ReplyComment', null, global);
goog.exportSymbol('proto.api.commons.Skills', null, global);
goog.exportSymbol('proto.api.commons.Sla', null, global);
goog.exportSymbol('proto.api.commons.SlaConditions', null, global);
goog.exportSymbol('proto.api.commons.SmsbackContext', null, global);
goog.exportSymbol('proto.api.commons.TemplateDescription', null, global);
goog.exportSymbol('proto.api.commons.Ticket', null, global);
goog.exportSymbol('proto.api.commons.TicketAction', null, global);
goog.exportSymbol('proto.api.commons.TicketAction.ContextCase', null, global);
goog.exportSymbol('proto.api.commons.TicketAuditLog', null, global);
goog.exportSymbol('proto.api.commons.TicketProject', null, global);
goog.exportSymbol('proto.api.commons.TicketProjectTemplate', null, global);
goog.exportSymbol('proto.api.commons.TicketSla', null, global);
goog.exportSymbol('proto.api.commons.TicketStatus', null, global);
goog.exportSymbol('proto.api.commons.TicketTemplate', null, global);
goog.exportSymbol('proto.api.commons.TimeScale', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Ticket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.Ticket.repeatedFields_, null);
};
goog.inherits(proto.api.commons.Ticket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Ticket.displayName = 'proto.api.commons.Ticket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TicketTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.TicketTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TicketTemplate.displayName = 'proto.api.commons.TicketTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TicketProjectTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.TicketProjectTemplate.repeatedFields_, null);
};
goog.inherits(proto.api.commons.TicketProjectTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TicketProjectTemplate.displayName = 'proto.api.commons.TicketProjectTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ProjectDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ProjectDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ProjectDescription.displayName = 'proto.api.commons.ProjectDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ListTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.ListTemplate.repeatedFields_, null);
};
goog.inherits(proto.api.commons.ListTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ListTemplate.displayName = 'proto.api.commons.ListTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.AssignProjectTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.AssignProjectTemplate.repeatedFields_, null);
};
goog.inherits(proto.api.commons.AssignProjectTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.AssignProjectTemplate.displayName = 'proto.api.commons.AssignProjectTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Duration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Duration.displayName = 'proto.api.commons.Duration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TicketAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.TicketAction.repeatedFields_, proto.api.commons.TicketAction.oneofGroups_);
};
goog.inherits(proto.api.commons.TicketAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TicketAction.displayName = 'proto.api.commons.TicketAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallbackContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallbackContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallbackContext.displayName = 'proto.api.commons.CallbackContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SmsbackContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.SmsbackContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SmsbackContext.displayName = 'proto.api.commons.SmsbackContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ActionType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ActionType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ActionType.displayName = 'proto.api.commons.ActionType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.EmailbackContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.EmailbackContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.EmailbackContext.displayName = 'proto.api.commons.EmailbackContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Metadata.displayName = 'proto.api.commons.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Skills = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Skills, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Skills.displayName = 'proto.api.commons.Skills';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Sla = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Sla, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Sla.displayName = 'proto.api.commons.Sla';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.Comment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.Comment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.Comment.displayName = 'proto.api.commons.Comment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CloseTicket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CloseTicket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CloseTicket.displayName = 'proto.api.commons.CloseTicket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ConfirmClose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ConfirmClose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ConfirmClose.displayName = 'proto.api.commons.ConfirmClose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TicketProject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.TicketProject.repeatedFields_, null);
};
goog.inherits(proto.api.commons.TicketProject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TicketProject.displayName = 'proto.api.commons.TicketProject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TemplateDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.TemplateDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TemplateDescription.displayName = 'proto.api.commons.TemplateDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TicketSla = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.TicketSla, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TicketSla.displayName = 'proto.api.commons.TicketSla';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.SlaConditions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.SlaConditions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.SlaConditions.displayName = 'proto.api.commons.SlaConditions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ReplyComment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ReplyComment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ReplyComment.displayName = 'proto.api.commons.ReplyComment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ConfirmReplyComment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ConfirmReplyComment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ConfirmReplyComment.displayName = 'proto.api.commons.ConfirmReplyComment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.TicketAuditLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.TicketAuditLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.TicketAuditLog.displayName = 'proto.api.commons.TicketAuditLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.EditTicket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.EditTicket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.EditTicket.displayName = 'proto.api.commons.EditTicket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.EditAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.EditAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.EditAttribute.displayName = 'proto.api.commons.EditAttribute';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.Ticket.repeatedFields_ = [14,15,17,19,21,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Ticket.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Ticket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Ticket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Ticket.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    projectSid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    projectTitle: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ticketCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    orgId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdById: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdByName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdByDate: (f = msg.getCreatedByDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    dueDate: (f = msg.getDueDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    assigneeList: jspb.Message.getFieldWithDefault(msg, 12, ""),
    metadataList: jspb.Message.toObjectList(msg.getMetadataList(),
    proto.api.commons.Metadata.toObject, includeInstance),
    ticketSkillsList: jspb.Message.toObjectList(msg.getTicketSkillsList(),
    proto.api.commons.Skills.toObject, includeInstance),
    status: jspb.Message.getFieldWithDefault(msg, 16, 0),
    ticketSlaList: jspb.Message.toObjectList(msg.getTicketSlaList(),
    proto.api.commons.Sla.toObject, includeInstance),
    assignee: jspb.Message.getFieldWithDefault(msg, 18, ""),
    ticketActionList: jspb.Message.toObjectList(msg.getTicketActionList(),
    proto.api.commons.TicketAction.toObject, includeInstance),
    ticketStatus: jspb.Message.getFieldWithDefault(msg, 20, 0),
    ticketAssigneeList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    ticketParticipantList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Ticket}
 */
proto.api.commons.Ticket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Ticket;
  return proto.api.commons.Ticket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Ticket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Ticket}
 */
proto.api.commons.Ticket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectSid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedById(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedByName(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedByDate(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDueDate(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssigneeList(value);
      break;
    case 14:
      var value = new proto.api.commons.Metadata;
      reader.readMessage(value,proto.api.commons.Metadata.deserializeBinaryFromReader);
      msg.addMetadata(value);
      break;
    case 15:
      var value = new proto.api.commons.Skills;
      reader.readMessage(value,proto.api.commons.Skills.deserializeBinaryFromReader);
      msg.addTicketSkills(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 17:
      var value = new proto.api.commons.Sla;
      reader.readMessage(value,proto.api.commons.Sla.deserializeBinaryFromReader);
      msg.addTicketSla(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssignee(value);
      break;
    case 19:
      var value = new proto.api.commons.TicketAction;
      reader.readMessage(value,proto.api.commons.TicketAction.deserializeBinaryFromReader);
      msg.addTicketAction(value);
      break;
    case 20:
      var value = /** @type {!proto.api.commons.TicketStatus} */ (reader.readEnum());
      msg.setTicketStatus(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addTicketAssignee(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addTicketParticipant(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Ticket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Ticket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Ticket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Ticket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getProjectSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getProjectTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTicketCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreatedById();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreatedByName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreatedByDate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDueDate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAssigneeList();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.api.commons.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getTicketSkillsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.api.commons.Skills.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getTicketSlaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.api.commons.Sla.serializeBinaryToWriter
    );
  }
  f = message.getAssignee();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getTicketActionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.api.commons.TicketAction.serializeBinaryToWriter
    );
  }
  f = message.getTicketStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = message.getTicketAssigneeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getTicketParticipantList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
};


/**
 * optional int64 ticket_sid = 1;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getTicketSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setTicketSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int64 project_sid = 2;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getProjectSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setProjectSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string project_title = 3;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getProjectTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setProjectTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ticket_code = 4;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getTicketCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setTicketCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string org_id = 7;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string created_by_id = 8;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getCreatedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setCreatedById = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string created_by_name = 9;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getCreatedByName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setCreatedByName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp created_by_date = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Ticket.prototype.getCreatedByDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Ticket} returns this
*/
proto.api.commons.Ticket.prototype.setCreatedByDate = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearCreatedByDate = function() {
  return this.setCreatedByDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Ticket.prototype.hasCreatedByDate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp due_date = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Ticket.prototype.getDueDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Ticket} returns this
*/
proto.api.commons.Ticket.prototype.setDueDate = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearDueDate = function() {
  return this.setDueDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Ticket.prototype.hasDueDate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string assignee_list = 12;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getAssigneeList = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setAssigneeList = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated Metadata metadata = 14;
 * @return {!Array<!proto.api.commons.Metadata>}
 */
proto.api.commons.Ticket.prototype.getMetadataList = function() {
  return /** @type{!Array<!proto.api.commons.Metadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.Metadata, 14));
};


/**
 * @param {!Array<!proto.api.commons.Metadata>} value
 * @return {!proto.api.commons.Ticket} returns this
*/
proto.api.commons.Ticket.prototype.setMetadataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.api.commons.Metadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Metadata}
 */
proto.api.commons.Ticket.prototype.addMetadata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.api.commons.Metadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearMetadataList = function() {
  return this.setMetadataList([]);
};


/**
 * repeated Skills ticket_skills = 15;
 * @return {!Array<!proto.api.commons.Skills>}
 */
proto.api.commons.Ticket.prototype.getTicketSkillsList = function() {
  return /** @type{!Array<!proto.api.commons.Skills>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.Skills, 15));
};


/**
 * @param {!Array<!proto.api.commons.Skills>} value
 * @return {!proto.api.commons.Ticket} returns this
*/
proto.api.commons.Ticket.prototype.setTicketSkillsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.api.commons.Skills=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Skills}
 */
proto.api.commons.Ticket.prototype.addTicketSkills = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.api.commons.Skills, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearTicketSkillsList = function() {
  return this.setTicketSkillsList([]);
};


/**
 * optional int64 status = 16;
 * @return {number}
 */
proto.api.commons.Ticket.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * repeated Sla ticket_sla = 17;
 * @return {!Array<!proto.api.commons.Sla>}
 */
proto.api.commons.Ticket.prototype.getTicketSlaList = function() {
  return /** @type{!Array<!proto.api.commons.Sla>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.Sla, 17));
};


/**
 * @param {!Array<!proto.api.commons.Sla>} value
 * @return {!proto.api.commons.Ticket} returns this
*/
proto.api.commons.Ticket.prototype.setTicketSlaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.api.commons.Sla=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Sla}
 */
proto.api.commons.Ticket.prototype.addTicketSla = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.api.commons.Sla, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearTicketSlaList = function() {
  return this.setTicketSlaList([]);
};


/**
 * optional string assignee = 18;
 * @return {string}
 */
proto.api.commons.Ticket.prototype.getAssignee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setAssignee = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * repeated TicketAction ticket_action = 19;
 * @return {!Array<!proto.api.commons.TicketAction>}
 */
proto.api.commons.Ticket.prototype.getTicketActionList = function() {
  return /** @type{!Array<!proto.api.commons.TicketAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.TicketAction, 19));
};


/**
 * @param {!Array<!proto.api.commons.TicketAction>} value
 * @return {!proto.api.commons.Ticket} returns this
*/
proto.api.commons.Ticket.prototype.setTicketActionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.api.commons.TicketAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.TicketAction}
 */
proto.api.commons.Ticket.prototype.addTicketAction = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.api.commons.TicketAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearTicketActionList = function() {
  return this.setTicketActionList([]);
};


/**
 * optional TicketStatus ticket_status = 20;
 * @return {!proto.api.commons.TicketStatus}
 */
proto.api.commons.Ticket.prototype.getTicketStatus = function() {
  return /** @type {!proto.api.commons.TicketStatus} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.api.commons.TicketStatus} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setTicketStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 20, value);
};


/**
 * repeated string ticket_assignee = 21;
 * @return {!Array<string>}
 */
proto.api.commons.Ticket.prototype.getTicketAssigneeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setTicketAssigneeList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.addTicketAssignee = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearTicketAssigneeList = function() {
  return this.setTicketAssigneeList([]);
};


/**
 * repeated string ticket_participant = 22;
 * @return {!Array<string>}
 */
proto.api.commons.Ticket.prototype.getTicketParticipantList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.setTicketParticipantList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.addTicketParticipant = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.Ticket} returns this
 */
proto.api.commons.Ticket.prototype.clearTicketParticipantList = function() {
  return this.setTicketParticipantList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TicketTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TicketTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TicketTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketTemplateId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    template: jspb.Message.getFieldWithDefault(msg, 3, ""),
    templateEntityVersion: jspb.Message.getFieldWithDefault(msg, 4, ""),
    templateName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdById: jspb.Message.getFieldWithDefault(msg, 6, ""),
    modifiedBy: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    modifiedDate: (f = msg.getModifiedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    templateId: jspb.Message.getFieldWithDefault(msg, 11, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TicketTemplate}
 */
proto.api.commons.TicketTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TicketTemplate;
  return proto.api.commons.TicketTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TicketTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TicketTemplate}
 */
proto.api.commons.TicketTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTicketTemplateId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateEntityVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedById(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setModifiedBy(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedDate(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setModifiedDate(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTemplateId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TicketTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TicketTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TicketTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketTemplateId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTemplate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTemplateEntityVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTemplateName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedById();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getModifiedBy();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getModifiedDate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getTemplateId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      11,
      f
    );
  }
};


/**
 * optional int64 ticket_template_id = 1;
 * @return {number}
 */
proto.api.commons.TicketTemplate.prototype.getTicketTemplateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setTicketTemplateId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.commons.TicketTemplate.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string template = 3;
 * @return {string}
 */
proto.api.commons.TicketTemplate.prototype.getTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string template_entity_version = 4;
 * @return {string}
 */
proto.api.commons.TicketTemplate.prototype.getTemplateEntityVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setTemplateEntityVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string template_name = 5;
 * @return {string}
 */
proto.api.commons.TicketTemplate.prototype.getTemplateName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setTemplateName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_by_id = 6;
 * @return {string}
 */
proto.api.commons.TicketTemplate.prototype.getCreatedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setCreatedById = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string modified_by = 7;
 * @return {string}
 */
proto.api.commons.TicketTemplate.prototype.getModifiedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setModifiedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TicketTemplate.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TicketTemplate} returns this
*/
proto.api.commons.TicketTemplate.prototype.setCreatedDate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.clearCreatedDate = function() {
  return this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketTemplate.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp modified_date = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TicketTemplate.prototype.getModifiedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TicketTemplate} returns this
*/
proto.api.commons.TicketTemplate.prototype.setModifiedDate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.clearModifiedDate = function() {
  return this.setModifiedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketTemplate.prototype.hasModifiedDate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool is_active = 10;
 * @return {boolean}
 */
proto.api.commons.TicketTemplate.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional int64 template_id = 11;
 * @return {string}
 */
proto.api.commons.TicketTemplate.prototype.getTemplateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketTemplate} returns this
 */
proto.api.commons.TicketTemplate.prototype.setTemplateId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.TicketProjectTemplate.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TicketProjectTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TicketProjectTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TicketProjectTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketProjectTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketTemplate: (f = msg.getTicketTemplate()) && proto.api.commons.TicketTemplate.toObject(includeInstance, f),
    projectDescriptionList: jspb.Message.toObjectList(msg.getProjectDescriptionList(),
    proto.api.commons.ProjectDescription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TicketProjectTemplate}
 */
proto.api.commons.TicketProjectTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TicketProjectTemplate;
  return proto.api.commons.TicketProjectTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TicketProjectTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TicketProjectTemplate}
 */
proto.api.commons.TicketProjectTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.commons.TicketTemplate;
      reader.readMessage(value,proto.api.commons.TicketTemplate.deserializeBinaryFromReader);
      msg.setTicketTemplate(value);
      break;
    case 2:
      var value = new proto.api.commons.ProjectDescription;
      reader.readMessage(value,proto.api.commons.ProjectDescription.deserializeBinaryFromReader);
      msg.addProjectDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TicketProjectTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TicketProjectTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TicketProjectTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketProjectTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketTemplate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.commons.TicketTemplate.serializeBinaryToWriter
    );
  }
  f = message.getProjectDescriptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.commons.ProjectDescription.serializeBinaryToWriter
    );
  }
};


/**
 * optional TicketTemplate ticket_template = 1;
 * @return {?proto.api.commons.TicketTemplate}
 */
proto.api.commons.TicketProjectTemplate.prototype.getTicketTemplate = function() {
  return /** @type{?proto.api.commons.TicketTemplate} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.TicketTemplate, 1));
};


/**
 * @param {?proto.api.commons.TicketTemplate|undefined} value
 * @return {!proto.api.commons.TicketProjectTemplate} returns this
*/
proto.api.commons.TicketProjectTemplate.prototype.setTicketTemplate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketProjectTemplate} returns this
 */
proto.api.commons.TicketProjectTemplate.prototype.clearTicketTemplate = function() {
  return this.setTicketTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketProjectTemplate.prototype.hasTicketTemplate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ProjectDescription project_description = 2;
 * @return {!Array<!proto.api.commons.ProjectDescription>}
 */
proto.api.commons.TicketProjectTemplate.prototype.getProjectDescriptionList = function() {
  return /** @type{!Array<!proto.api.commons.ProjectDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.ProjectDescription, 2));
};


/**
 * @param {!Array<!proto.api.commons.ProjectDescription>} value
 * @return {!proto.api.commons.TicketProjectTemplate} returns this
*/
proto.api.commons.TicketProjectTemplate.prototype.setProjectDescriptionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.commons.ProjectDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ProjectDescription}
 */
proto.api.commons.TicketProjectTemplate.prototype.addProjectDescription = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.commons.ProjectDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.TicketProjectTemplate} returns this
 */
proto.api.commons.TicketProjectTemplate.prototype.clearProjectDescriptionList = function() {
  return this.setProjectDescriptionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ProjectDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ProjectDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ProjectDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProjectDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    projectTitle: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ProjectDescription}
 */
proto.api.commons.ProjectDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ProjectDescription;
  return proto.api.commons.ProjectDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ProjectDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ProjectDescription}
 */
proto.api.commons.ProjectDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ProjectDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ProjectDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ProjectDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ProjectDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getProjectTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 project_id = 1;
 * @return {string}
 */
proto.api.commons.ProjectDescription.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ProjectDescription} returns this
 */
proto.api.commons.ProjectDescription.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string project_title = 2;
 * @return {string}
 */
proto.api.commons.ProjectDescription.prototype.getProjectTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ProjectDescription} returns this
 */
proto.api.commons.ProjectDescription.prototype.setProjectTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.ListTemplate.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ListTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ListTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ListTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ListTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketTemplateId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    templateName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    template: jspb.Message.getFieldWithDefault(msg, 4, ""),
    templateEntityVersion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    createdById: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdDate: (f = msg.getCreatedDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    projectTitle: jspb.Message.getFieldWithDefault(msg, 9, ""),
    assignedProjectList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ListTemplate}
 */
proto.api.commons.ListTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ListTemplate;
  return proto.api.commons.ListTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ListTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ListTemplate}
 */
proto.api.commons.ListTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketTemplateId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateEntityVersion(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedById(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedDate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectTitle(value);
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAssignedProject(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ListTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ListTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ListTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ListTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketTemplateId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getTemplateName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getTemplate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTemplateEntityVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getCreatedById();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreatedDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getProjectTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAssignedProjectList();
  if (f.length > 0) {
    writer.writePackedInt64(
      10,
      f
    );
  }
};


/**
 * optional int64 ticket_template_id = 1;
 * @return {string}
 */
proto.api.commons.ListTemplate.prototype.getTicketTemplateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setTicketTemplateId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string template_name = 2;
 * @return {string}
 */
proto.api.commons.ListTemplate.prototype.getTemplateName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setTemplateName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 project_id = 3;
 * @return {string}
 */
proto.api.commons.ListTemplate.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string template = 4;
 * @return {string}
 */
proto.api.commons.ListTemplate.prototype.getTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string template_entity_version = 5;
 * @return {string}
 */
proto.api.commons.ListTemplate.prototype.getTemplateEntityVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setTemplateEntityVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.api.commons.ListTemplate.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string created_by_id = 7;
 * @return {string}
 */
proto.api.commons.ListTemplate.prototype.getCreatedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setCreatedById = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp created_date = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.ListTemplate.prototype.getCreatedDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.ListTemplate} returns this
*/
proto.api.commons.ListTemplate.prototype.setCreatedDate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.clearCreatedDate = function() {
  return this.setCreatedDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ListTemplate.prototype.hasCreatedDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string project_title = 9;
 * @return {string}
 */
proto.api.commons.ListTemplate.prototype.getProjectTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setProjectTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated int64 assigned_project = 10;
 * @return {!Array<number>}
 */
proto.api.commons.ListTemplate.prototype.getAssignedProjectList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.setAssignedProjectList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.addAssignedProject = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.ListTemplate} returns this
 */
proto.api.commons.ListTemplate.prototype.clearAssignedProjectList = function() {
  return this.setAssignedProjectList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.AssignProjectTemplate.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.AssignProjectTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.AssignProjectTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.AssignProjectTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AssignProjectTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketTemplateIdList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    projectId: jspb.Message.getFieldWithDefault(msg, 2, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.AssignProjectTemplate}
 */
proto.api.commons.AssignProjectTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.AssignProjectTemplate;
  return proto.api.commons.AssignProjectTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.AssignProjectTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.AssignProjectTemplate}
 */
proto.api.commons.AssignProjectTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<string>} */ (reader.isDelimited() ? reader.readPackedInt64String() : [reader.readInt64String()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTicketTemplateId(values[i]);
      }
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.AssignProjectTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.AssignProjectTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.AssignProjectTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.AssignProjectTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketTemplateIdList();
  if (f.length > 0) {
    writer.writePackedInt64String(
      1,
      f
    );
  }
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
};


/**
 * repeated int64 ticket_template_id = 1;
 * @return {!Array<string>}
 */
proto.api.commons.AssignProjectTemplate.prototype.getTicketTemplateIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.commons.AssignProjectTemplate} returns this
 */
proto.api.commons.AssignProjectTemplate.prototype.setTicketTemplateIdList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.AssignProjectTemplate} returns this
 */
proto.api.commons.AssignProjectTemplate.prototype.addTicketTemplateId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.AssignProjectTemplate} returns this
 */
proto.api.commons.AssignProjectTemplate.prototype.clearTicketTemplateIdList = function() {
  return this.setTicketTemplateIdList([]);
};


/**
 * optional int64 project_id = 2;
 * @return {string}
 */
proto.api.commons.AssignProjectTemplate.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.AssignProjectTemplate} returns this
 */
proto.api.commons.AssignProjectTemplate.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Duration.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    scale: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Duration}
 */
proto.api.commons.Duration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Duration;
  return proto.api.commons.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Duration}
 */
proto.api.commons.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {!proto.api.commons.TimeScale} */ (reader.readEnum());
      msg.setScale(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Duration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getScale();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {string}
 */
proto.api.commons.Duration.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Duration} returns this
 */
proto.api.commons.Duration.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional TimeScale scale = 2;
 * @return {!proto.api.commons.TimeScale}
 */
proto.api.commons.Duration.prototype.getScale = function() {
  return /** @type {!proto.api.commons.TimeScale} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.api.commons.TimeScale} value
 * @return {!proto.api.commons.Duration} returns this
 */
proto.api.commons.Duration.prototype.setScale = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.TicketAction.repeatedFields_ = [9,10];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.commons.TicketAction.oneofGroups_ = [[12,13,14]];

/**
 * @enum {number}
 */
proto.api.commons.TicketAction.ContextCase = {
  CONTEXT_NOT_SET: 0,
  VOICE_CONTEXT: 12,
  SMS_CONTEXT: 13,
  EMAIL_CONTEXT: 14
};

/**
 * @return {proto.api.commons.TicketAction.ContextCase}
 */
proto.api.commons.TicketAction.prototype.getContextCase = function() {
  return /** @type {proto.api.commons.TicketAction.ContextCase} */(jspb.Message.computeOneofCase(this, proto.api.commons.TicketAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TicketAction.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TicketAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TicketAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketActionId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    actionId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    callbackContext: (f = msg.getCallbackContext()) && proto.api.commons.CallbackContext.toObject(includeInstance, f),
    ticketId: jspb.Message.getFieldWithDefault(msg, 4, "0"),
    startTs: (f = msg.getStartTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expiryTs: (f = msg.getExpiryTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 8, 0),
    actionSkillsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    actionSlaIdList: jspb.Message.toObjectList(msg.getActionSlaIdList(),
    proto.api.commons.Sla.toObject, includeInstance),
    workDoneBy: jspb.Message.getFieldWithDefault(msg, 11, ""),
    voiceContext: (f = msg.getVoiceContext()) && proto.api.commons.CallbackContext.toObject(includeInstance, f),
    smsContext: (f = msg.getSmsContext()) && proto.api.commons.SmsbackContext.toObject(includeInstance, f),
    emailContext: (f = msg.getEmailContext()) && proto.api.commons.EmailbackContext.toObject(includeInstance, f),
    actionType: (f = msg.getActionType()) && proto.api.commons.ActionType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TicketAction}
 */
proto.api.commons.TicketAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TicketAction;
  return proto.api.commons.TicketAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TicketAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TicketAction}
 */
proto.api.commons.TicketAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketActionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setActionId(value);
      break;
    case 3:
      var value = new proto.api.commons.CallbackContext;
      reader.readMessage(value,proto.api.commons.CallbackContext.deserializeBinaryFromReader);
      msg.setCallbackContext(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketId(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTs(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiryTs(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setState(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addActionSkills(value);
      break;
    case 10:
      var value = new proto.api.commons.Sla;
      reader.readMessage(value,proto.api.commons.Sla.deserializeBinaryFromReader);
      msg.addActionSlaId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkDoneBy(value);
      break;
    case 12:
      var value = new proto.api.commons.CallbackContext;
      reader.readMessage(value,proto.api.commons.CallbackContext.deserializeBinaryFromReader);
      msg.setVoiceContext(value);
      break;
    case 13:
      var value = new proto.api.commons.SmsbackContext;
      reader.readMessage(value,proto.api.commons.SmsbackContext.deserializeBinaryFromReader);
      msg.setSmsContext(value);
      break;
    case 14:
      var value = new proto.api.commons.EmailbackContext;
      reader.readMessage(value,proto.api.commons.EmailbackContext.deserializeBinaryFromReader);
      msg.setEmailContext(value);
      break;
    case 15:
      var value = new proto.api.commons.ActionType;
      reader.readMessage(value,proto.api.commons.ActionType.deserializeBinaryFromReader);
      msg.setActionType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TicketAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TicketAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TicketAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketActionId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getActionId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getCallbackContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.CallbackContext.serializeBinaryToWriter
    );
  }
  f = message.getTicketId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      4,
      f
    );
  }
  f = message.getStartTs();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiryTs();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getActionSkillsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getActionSlaIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.api.commons.Sla.serializeBinaryToWriter
    );
  }
  f = message.getWorkDoneBy();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getVoiceContext();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.api.commons.CallbackContext.serializeBinaryToWriter
    );
  }
  f = message.getSmsContext();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.api.commons.SmsbackContext.serializeBinaryToWriter
    );
  }
  f = message.getEmailContext();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.api.commons.EmailbackContext.serializeBinaryToWriter
    );
  }
  f = message.getActionType();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.api.commons.ActionType.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 ticket_action_id = 1;
 * @return {string}
 */
proto.api.commons.TicketAction.prototype.getTicketActionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.setTicketActionId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int64 action_id = 2;
 * @return {string}
 */
proto.api.commons.TicketAction.prototype.getActionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.setActionId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional CallbackContext callback_context = 3;
 * @return {?proto.api.commons.CallbackContext}
 */
proto.api.commons.TicketAction.prototype.getCallbackContext = function() {
  return /** @type{?proto.api.commons.CallbackContext} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.CallbackContext, 3));
};


/**
 * @param {?proto.api.commons.CallbackContext|undefined} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setCallbackContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearCallbackContext = function() {
  return this.setCallbackContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAction.prototype.hasCallbackContext = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 ticket_id = 4;
 * @return {string}
 */
proto.api.commons.TicketAction.prototype.getTicketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.setTicketId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp start_ts = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TicketAction.prototype.getStartTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setStartTs = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearStartTs = function() {
  return this.setStartTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAction.prototype.hasStartTs = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp expiry_ts = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TicketAction.prototype.getExpiryTs = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setExpiryTs = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearExpiryTs = function() {
  return this.setExpiryTs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAction.prototype.hasExpiryTs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 state = 8;
 * @return {number}
 */
proto.api.commons.TicketAction.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.setState = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated string action_skills = 9;
 * @return {!Array<string>}
 */
proto.api.commons.TicketAction.prototype.getActionSkillsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.setActionSkillsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.addActionSkills = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearActionSkillsList = function() {
  return this.setActionSkillsList([]);
};


/**
 * repeated Sla action_sla_id = 10;
 * @return {!Array<!proto.api.commons.Sla>}
 */
proto.api.commons.TicketAction.prototype.getActionSlaIdList = function() {
  return /** @type{!Array<!proto.api.commons.Sla>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.Sla, 10));
};


/**
 * @param {!Array<!proto.api.commons.Sla>} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setActionSlaIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.api.commons.Sla=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Sla}
 */
proto.api.commons.TicketAction.prototype.addActionSlaId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.api.commons.Sla, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearActionSlaIdList = function() {
  return this.setActionSlaIdList([]);
};


/**
 * optional string work_done_by = 11;
 * @return {string}
 */
proto.api.commons.TicketAction.prototype.getWorkDoneBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.setWorkDoneBy = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional CallbackContext voice_context = 12;
 * @return {?proto.api.commons.CallbackContext}
 */
proto.api.commons.TicketAction.prototype.getVoiceContext = function() {
  return /** @type{?proto.api.commons.CallbackContext} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.CallbackContext, 12));
};


/**
 * @param {?proto.api.commons.CallbackContext|undefined} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setVoiceContext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.api.commons.TicketAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearVoiceContext = function() {
  return this.setVoiceContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAction.prototype.hasVoiceContext = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional SmsbackContext sms_context = 13;
 * @return {?proto.api.commons.SmsbackContext}
 */
proto.api.commons.TicketAction.prototype.getSmsContext = function() {
  return /** @type{?proto.api.commons.SmsbackContext} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.SmsbackContext, 13));
};


/**
 * @param {?proto.api.commons.SmsbackContext|undefined} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setSmsContext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.api.commons.TicketAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearSmsContext = function() {
  return this.setSmsContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAction.prototype.hasSmsContext = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional EmailbackContext email_context = 14;
 * @return {?proto.api.commons.EmailbackContext}
 */
proto.api.commons.TicketAction.prototype.getEmailContext = function() {
  return /** @type{?proto.api.commons.EmailbackContext} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.EmailbackContext, 14));
};


/**
 * @param {?proto.api.commons.EmailbackContext|undefined} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setEmailContext = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.api.commons.TicketAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearEmailContext = function() {
  return this.setEmailContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAction.prototype.hasEmailContext = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ActionType action_type = 15;
 * @return {?proto.api.commons.ActionType}
 */
proto.api.commons.TicketAction.prototype.getActionType = function() {
  return /** @type{?proto.api.commons.ActionType} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.ActionType, 15));
};


/**
 * @param {?proto.api.commons.ActionType|undefined} value
 * @return {!proto.api.commons.TicketAction} returns this
*/
proto.api.commons.TicketAction.prototype.setActionType = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAction} returns this
 */
proto.api.commons.TicketAction.prototype.clearActionType = function() {
  return this.setActionType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAction.prototype.hasActionType = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallbackContext.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallbackContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallbackContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallbackContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    callerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phoneNo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    callerName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    callerCountryCode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallbackContext}
 */
proto.api.commons.CallbackContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallbackContext;
  return proto.api.commons.CallbackContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallbackContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallbackContext}
 */
proto.api.commons.CallbackContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallerName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallerCountryCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallbackContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallbackContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallbackContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallbackContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCallerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhoneNo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCallerName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCallerCountryCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string caller_id = 1;
 * @return {string}
 */
proto.api.commons.CallbackContext.prototype.getCallerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CallbackContext} returns this
 */
proto.api.commons.CallbackContext.prototype.setCallerId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string phone_no = 2;
 * @return {string}
 */
proto.api.commons.CallbackContext.prototype.getPhoneNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CallbackContext} returns this
 */
proto.api.commons.CallbackContext.prototype.setPhoneNo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string country_code = 3;
 * @return {string}
 */
proto.api.commons.CallbackContext.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CallbackContext} returns this
 */
proto.api.commons.CallbackContext.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string caller_name = 4;
 * @return {string}
 */
proto.api.commons.CallbackContext.prototype.getCallerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CallbackContext} returns this
 */
proto.api.commons.CallbackContext.prototype.setCallerName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string caller_country_code = 5;
 * @return {string}
 */
proto.api.commons.CallbackContext.prototype.getCallerCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CallbackContext} returns this
 */
proto.api.commons.CallbackContext.prototype.setCallerCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SmsbackContext.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SmsbackContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SmsbackContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmsbackContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toSms: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fromSms: jspb.Message.getFieldWithDefault(msg, 3, ""),
    toCountryCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fromCountryCode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SmsbackContext}
 */
proto.api.commons.SmsbackContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SmsbackContext;
  return proto.api.commons.SmsbackContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SmsbackContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SmsbackContext}
 */
proto.api.commons.SmsbackContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToSms(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromSms(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToCountryCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromCountryCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SmsbackContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SmsbackContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SmsbackContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SmsbackContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToSms();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFromSms();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getToCountryCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFromCountryCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string contact_name = 1;
 * @return {string}
 */
proto.api.commons.SmsbackContext.prototype.getContactName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmsbackContext} returns this
 */
proto.api.commons.SmsbackContext.prototype.setContactName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to_sms = 2;
 * @return {string}
 */
proto.api.commons.SmsbackContext.prototype.getToSms = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmsbackContext} returns this
 */
proto.api.commons.SmsbackContext.prototype.setToSms = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string from_sms = 3;
 * @return {string}
 */
proto.api.commons.SmsbackContext.prototype.getFromSms = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmsbackContext} returns this
 */
proto.api.commons.SmsbackContext.prototype.setFromSms = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string to_country_code = 4;
 * @return {string}
 */
proto.api.commons.SmsbackContext.prototype.getToCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmsbackContext} returns this
 */
proto.api.commons.SmsbackContext.prototype.setToCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string from_country_code = 5;
 * @return {string}
 */
proto.api.commons.SmsbackContext.prototype.getFromCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SmsbackContext} returns this
 */
proto.api.commons.SmsbackContext.prototype.setFromCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ActionType.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ActionType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ActionType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ActionType.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionTypeId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    actionName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ActionType}
 */
proto.api.commons.ActionType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ActionType;
  return proto.api.commons.ActionType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ActionType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ActionType}
 */
proto.api.commons.ActionType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setActionTypeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ActionType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ActionType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ActionType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ActionType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionTypeId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getActionName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 action_type_id = 1;
 * @return {string}
 */
proto.api.commons.ActionType.prototype.getActionTypeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ActionType} returns this
 */
proto.api.commons.ActionType.prototype.setActionTypeId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string action_name = 2;
 * @return {string}
 */
proto.api.commons.ActionType.prototype.getActionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ActionType} returns this
 */
proto.api.commons.ActionType.prototype.setActionName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.EmailbackContext.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.EmailbackContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.EmailbackContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EmailbackContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toEmail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fromEmail: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.EmailbackContext}
 */
proto.api.commons.EmailbackContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.EmailbackContext;
  return proto.api.commons.EmailbackContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.EmailbackContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.EmailbackContext}
 */
proto.api.commons.EmailbackContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.EmailbackContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.EmailbackContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.EmailbackContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EmailbackContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFromEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string contact_name = 1;
 * @return {string}
 */
proto.api.commons.EmailbackContext.prototype.getContactName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EmailbackContext} returns this
 */
proto.api.commons.EmailbackContext.prototype.setContactName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to_email = 2;
 * @return {string}
 */
proto.api.commons.EmailbackContext.prototype.getToEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EmailbackContext} returns this
 */
proto.api.commons.EmailbackContext.prototype.setToEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string from_email = 3;
 * @return {string}
 */
proto.api.commons.EmailbackContext.prototype.getFromEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EmailbackContext} returns this
 */
proto.api.commons.EmailbackContext.prototype.setFromEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Metadata}
 */
proto.api.commons.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Metadata;
  return proto.api.commons.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Metadata}
 */
proto.api.commons.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.api.commons.Metadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Metadata} returns this
 */
proto.api.commons.Metadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api.commons.Metadata.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Metadata} returns this
 */
proto.api.commons.Metadata.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Skills.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Skills.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Skills} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Skills.toObject = function(includeInstance, msg) {
  var f, obj = {
    skillId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isPreferred: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Skills}
 */
proto.api.commons.Skills.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Skills;
  return proto.api.commons.Skills.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Skills} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Skills}
 */
proto.api.commons.Skills.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkillId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPreferred(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Skills.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Skills.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Skills} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Skills.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkillId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsPreferred();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string skill_id = 1;
 * @return {string}
 */
proto.api.commons.Skills.prototype.getSkillId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Skills} returns this
 */
proto.api.commons.Skills.prototype.setSkillId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_preferred = 2;
 * @return {boolean}
 */
proto.api.commons.Skills.prototype.getIsPreferred = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.Skills} returns this
 */
proto.api.commons.Skills.prototype.setIsPreferred = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Sla.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Sla.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Sla} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Sla.toObject = function(includeInstance, msg) {
  var f, obj = {
    conditionSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    slaSid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    slaMin: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    slaDuration: (f = msg.getSlaDuration()) && proto.api.commons.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Sla}
 */
proto.api.commons.Sla.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Sla;
  return proto.api.commons.Sla.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Sla} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Sla}
 */
proto.api.commons.Sla.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setConditionSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setSlaSid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setSlaMin(value);
      break;
    case 4:
      var value = new proto.api.commons.Duration;
      reader.readMessage(value,proto.api.commons.Duration.deserializeBinaryFromReader);
      msg.setSlaDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Sla.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Sla.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Sla} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Sla.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConditionSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getSlaSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getSlaMin();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getSlaDuration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.commons.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 condition_sid = 1;
 * @return {string}
 */
proto.api.commons.Sla.prototype.getConditionSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Sla} returns this
 */
proto.api.commons.Sla.prototype.setConditionSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int64 sla_sid = 2;
 * @return {string}
 */
proto.api.commons.Sla.prototype.getSlaSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Sla} returns this
 */
proto.api.commons.Sla.prototype.setSlaSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional int64 sla_min = 3;
 * @return {string}
 */
proto.api.commons.Sla.prototype.getSlaMin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Sla} returns this
 */
proto.api.commons.Sla.prototype.setSlaMin = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional Duration sla_duration = 4;
 * @return {?proto.api.commons.Duration}
 */
proto.api.commons.Sla.prototype.getSlaDuration = function() {
  return /** @type{?proto.api.commons.Duration} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.Duration, 4));
};


/**
 * @param {?proto.api.commons.Duration|undefined} value
 * @return {!proto.api.commons.Sla} returns this
*/
proto.api.commons.Sla.prototype.setSlaDuration = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Sla} returns this
 */
proto.api.commons.Sla.prototype.clearSlaDuration = function() {
  return this.setSlaDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Sla.prototype.hasSlaDuration = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.Comment.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.Comment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.Comment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Comment.toObject = function(includeInstance, msg) {
  var f, obj = {
    commentSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    ticketSid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    comment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdById: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdByName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdByDate: (f = msg.getCreatedByDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.Comment}
 */
proto.api.commons.Comment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.Comment;
  return proto.api.commons.Comment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.Comment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.Comment}
 */
proto.api.commons.Comment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setCommentSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketSid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedById(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedByName(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedByDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.Comment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.Comment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.Comment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.Comment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommentSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getTicketSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedById();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedByName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedByDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 comment_sid = 1;
 * @return {string}
 */
proto.api.commons.Comment.prototype.getCommentSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Comment} returns this
 */
proto.api.commons.Comment.prototype.setCommentSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int64 ticket_sid = 2;
 * @return {string}
 */
proto.api.commons.Comment.prototype.getTicketSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Comment} returns this
 */
proto.api.commons.Comment.prototype.setTicketSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string comment = 3;
 * @return {string}
 */
proto.api.commons.Comment.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Comment} returns this
 */
proto.api.commons.Comment.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string created_by_id = 4;
 * @return {string}
 */
proto.api.commons.Comment.prototype.getCreatedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Comment} returns this
 */
proto.api.commons.Comment.prototype.setCreatedById = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string created_by_name = 5;
 * @return {string}
 */
proto.api.commons.Comment.prototype.getCreatedByName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.Comment} returns this
 */
proto.api.commons.Comment.prototype.setCreatedByName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp created_by_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.Comment.prototype.getCreatedByDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.Comment} returns this
*/
proto.api.commons.Comment.prototype.setCreatedByDate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.Comment} returns this
 */
proto.api.commons.Comment.prototype.clearCreatedByDate = function() {
  return this.setCreatedByDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.Comment.prototype.hasCreatedByDate = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CloseTicket.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CloseTicket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CloseTicket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CloseTicket.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fromStatus: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdById: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CloseTicket}
 */
proto.api.commons.CloseTicket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CloseTicket;
  return proto.api.commons.CloseTicket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CloseTicket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CloseTicket}
 */
proto.api.commons.CloseTicket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFromStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedById(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CloseTicket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CloseTicket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CloseTicket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CloseTicket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFromStatus();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getCreatedById();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 ticket_sid = 1;
 * @return {string}
 */
proto.api.commons.CloseTicket.prototype.getTicketSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CloseTicket} returns this
 */
proto.api.commons.CloseTicket.prototype.setTicketSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int64 status = 2;
 * @return {number}
 */
proto.api.commons.CloseTicket.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.CloseTicket} returns this
 */
proto.api.commons.CloseTicket.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string comment = 3;
 * @return {string}
 */
proto.api.commons.CloseTicket.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CloseTicket} returns this
 */
proto.api.commons.CloseTicket.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 from_status = 4;
 * @return {number}
 */
proto.api.commons.CloseTicket.prototype.getFromStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.CloseTicket} returns this
 */
proto.api.commons.CloseTicket.prototype.setFromStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string created_by_id = 5;
 * @return {string}
 */
proto.api.commons.CloseTicket.prototype.getCreatedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.CloseTicket} returns this
 */
proto.api.commons.CloseTicket.prototype.setCreatedById = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ConfirmClose.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ConfirmClose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ConfirmClose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ConfirmClose.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ConfirmClose}
 */
proto.api.commons.ConfirmClose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ConfirmClose;
  return proto.api.commons.ConfirmClose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ConfirmClose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ConfirmClose}
 */
proto.api.commons.ConfirmClose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ConfirmClose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ConfirmClose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ConfirmClose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ConfirmClose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 status = 1;
 * @return {number}
 */
proto.api.commons.ConfirmClose.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ConfirmClose} returns this
 */
proto.api.commons.ConfirmClose.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.TicketProject.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TicketProject.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TicketProject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TicketProject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketProject.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketProjectId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    projectSid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    projectCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    projectTitle: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    templateDescList: jspb.Message.toObjectList(msg.getTemplateDescList(),
    proto.api.commons.TemplateDescription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TicketProject}
 */
proto.api.commons.TicketProject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TicketProject;
  return proto.api.commons.TicketProject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TicketProject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TicketProject}
 */
proto.api.commons.TicketProject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectSid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectTitle(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 7:
      var value = new proto.api.commons.TemplateDescription;
      reader.readMessage(value,proto.api.commons.TemplateDescription.deserializeBinaryFromReader);
      msg.addTemplateDesc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TicketProject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TicketProject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TicketProject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketProject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getProjectCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProjectTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTemplateDescList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.api.commons.TemplateDescription.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 ticket_project_id = 1;
 * @return {string}
 */
proto.api.commons.TicketProject.prototype.getTicketProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketProject} returns this
 */
proto.api.commons.TicketProject.prototype.setTicketProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.commons.TicketProject.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketProject} returns this
 */
proto.api.commons.TicketProject.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 project_sid = 3;
 * @return {string}
 */
proto.api.commons.TicketProject.prototype.getProjectSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketProject} returns this
 */
proto.api.commons.TicketProject.prototype.setProjectSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string project_code = 4;
 * @return {string}
 */
proto.api.commons.TicketProject.prototype.getProjectCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketProject} returns this
 */
proto.api.commons.TicketProject.prototype.setProjectCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string project_title = 5;
 * @return {string}
 */
proto.api.commons.TicketProject.prototype.getProjectTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketProject} returns this
 */
proto.api.commons.TicketProject.prototype.setProjectTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.api.commons.TicketProject.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.TicketProject} returns this
 */
proto.api.commons.TicketProject.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * repeated TemplateDescription template_desc = 7;
 * @return {!Array<!proto.api.commons.TemplateDescription>}
 */
proto.api.commons.TicketProject.prototype.getTemplateDescList = function() {
  return /** @type{!Array<!proto.api.commons.TemplateDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.TemplateDescription, 7));
};


/**
 * @param {!Array<!proto.api.commons.TemplateDescription>} value
 * @return {!proto.api.commons.TicketProject} returns this
*/
proto.api.commons.TicketProject.prototype.setTemplateDescList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.api.commons.TemplateDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.TemplateDescription}
 */
proto.api.commons.TicketProject.prototype.addTemplateDesc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.api.commons.TemplateDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.TicketProject} returns this
 */
proto.api.commons.TicketProject.prototype.clearTemplateDescList = function() {
  return this.setTemplateDescList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TemplateDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TemplateDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TemplateDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TemplateDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketTemplateId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    templateName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TemplateDescription}
 */
proto.api.commons.TemplateDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TemplateDescription;
  return proto.api.commons.TemplateDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TemplateDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TemplateDescription}
 */
proto.api.commons.TemplateDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketTemplateId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplateName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TemplateDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TemplateDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TemplateDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TemplateDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketTemplateId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getTemplateName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 ticket_template_id = 1;
 * @return {string}
 */
proto.api.commons.TemplateDescription.prototype.getTicketTemplateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TemplateDescription} returns this
 */
proto.api.commons.TemplateDescription.prototype.setTicketTemplateId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string template_name = 2;
 * @return {string}
 */
proto.api.commons.TemplateDescription.prototype.getTemplateName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TemplateDescription} returns this
 */
proto.api.commons.TemplateDescription.prototype.setTemplateName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TicketSla.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TicketSla.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TicketSla} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketSla.toObject = function(includeInstance, msg) {
  var f, obj = {
    slaSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    interval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isActive: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ticketSlaDuration: (f = msg.getTicketSlaDuration()) && proto.api.commons.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TicketSla}
 */
proto.api.commons.TicketSla.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TicketSla;
  return proto.api.commons.TicketSla.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TicketSla} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TicketSla}
 */
proto.api.commons.TicketSla.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setSlaSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInterval(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIsActive(value);
      break;
    case 6:
      var value = new proto.api.commons.Duration;
      reader.readMessage(value,proto.api.commons.Duration.deserializeBinaryFromReader);
      msg.setTicketSlaDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TicketSla.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TicketSla.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TicketSla} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketSla.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlaSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIsActive();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTicketSlaDuration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.commons.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 sla_sid = 1;
 * @return {string}
 */
proto.api.commons.TicketSla.prototype.getSlaSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketSla} returns this
 */
proto.api.commons.TicketSla.prototype.setSlaSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.commons.TicketSla.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketSla} returns this
 */
proto.api.commons.TicketSla.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.commons.TicketSla.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketSla} returns this
 */
proto.api.commons.TicketSla.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 interval = 4;
 * @return {number}
 */
proto.api.commons.TicketSla.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.TicketSla} returns this
 */
proto.api.commons.TicketSla.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 is_active = 5;
 * @return {number}
 */
proto.api.commons.TicketSla.prototype.getIsActive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.TicketSla} returns this
 */
proto.api.commons.TicketSla.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Duration ticket_sla_duration = 6;
 * @return {?proto.api.commons.Duration}
 */
proto.api.commons.TicketSla.prototype.getTicketSlaDuration = function() {
  return /** @type{?proto.api.commons.Duration} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.Duration, 6));
};


/**
 * @param {?proto.api.commons.Duration|undefined} value
 * @return {!proto.api.commons.TicketSla} returns this
*/
proto.api.commons.TicketSla.prototype.setTicketSlaDuration = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketSla} returns this
 */
proto.api.commons.TicketSla.prototype.clearTicketSlaDuration = function() {
  return this.setTicketSlaDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketSla.prototype.hasTicketSlaDuration = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.SlaConditions.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.SlaConditions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.SlaConditions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SlaConditions.toObject = function(includeInstance, msg) {
  var f, obj = {
    slaConditionSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    slaConditionName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.SlaConditions}
 */
proto.api.commons.SlaConditions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.SlaConditions;
  return proto.api.commons.SlaConditions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.SlaConditions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.SlaConditions}
 */
proto.api.commons.SlaConditions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setSlaConditionSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlaConditionName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.SlaConditions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.SlaConditions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.SlaConditions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.SlaConditions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlaConditionSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getSlaConditionName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 sla_condition_sid = 1;
 * @return {string}
 */
proto.api.commons.SlaConditions.prototype.getSlaConditionSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SlaConditions} returns this
 */
proto.api.commons.SlaConditions.prototype.setSlaConditionSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string sla_condition_name = 2;
 * @return {string}
 */
proto.api.commons.SlaConditions.prototype.getSlaConditionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.SlaConditions} returns this
 */
proto.api.commons.SlaConditions.prototype.setSlaConditionName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ReplyComment.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ReplyComment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ReplyComment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ReplyComment.toObject = function(includeInstance, msg) {
  var f, obj = {
    commentSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    ticketSid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    reply: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdById: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdByDate: (f = msg.getCreatedByDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ReplyComment}
 */
proto.api.commons.ReplyComment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ReplyComment;
  return proto.api.commons.ReplyComment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ReplyComment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ReplyComment}
 */
proto.api.commons.ReplyComment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setCommentSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketSid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReply(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedById(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedByDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ReplyComment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ReplyComment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ReplyComment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ReplyComment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommentSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getTicketSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getReply();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedById();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedByDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 comment_sid = 1;
 * @return {string}
 */
proto.api.commons.ReplyComment.prototype.getCommentSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ReplyComment} returns this
 */
proto.api.commons.ReplyComment.prototype.setCommentSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int64 ticket_sid = 2;
 * @return {string}
 */
proto.api.commons.ReplyComment.prototype.getTicketSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ReplyComment} returns this
 */
proto.api.commons.ReplyComment.prototype.setTicketSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string reply = 3;
 * @return {string}
 */
proto.api.commons.ReplyComment.prototype.getReply = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ReplyComment} returns this
 */
proto.api.commons.ReplyComment.prototype.setReply = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string created_by_id = 4;
 * @return {string}
 */
proto.api.commons.ReplyComment.prototype.getCreatedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ReplyComment} returns this
 */
proto.api.commons.ReplyComment.prototype.setCreatedById = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created_by_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.ReplyComment.prototype.getCreatedByDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.ReplyComment} returns this
*/
proto.api.commons.ReplyComment.prototype.setCreatedByDate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ReplyComment} returns this
 */
proto.api.commons.ReplyComment.prototype.clearCreatedByDate = function() {
  return this.setCreatedByDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ReplyComment.prototype.hasCreatedByDate = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ConfirmReplyComment.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ConfirmReplyComment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ConfirmReplyComment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ConfirmReplyComment.toObject = function(includeInstance, msg) {
  var f, obj = {
    isCreated: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ConfirmReplyComment}
 */
proto.api.commons.ConfirmReplyComment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ConfirmReplyComment;
  return proto.api.commons.ConfirmReplyComment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ConfirmReplyComment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ConfirmReplyComment}
 */
proto.api.commons.ConfirmReplyComment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCreated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ConfirmReplyComment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ConfirmReplyComment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ConfirmReplyComment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ConfirmReplyComment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsCreated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_created = 1;
 * @return {boolean}
 */
proto.api.commons.ConfirmReplyComment.prototype.getIsCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.ConfirmReplyComment} returns this
 */
proto.api.commons.ConfirmReplyComment.prototype.setIsCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.TicketAuditLog.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.TicketAuditLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.TicketAuditLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketAuditLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketAuditEventLogId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    event: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ticketSid: jspb.Message.getFieldWithDefault(msg, 4, "0"),
    eventType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdById: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdByDate: (f = msg.getCreatedByDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.TicketAuditLog}
 */
proto.api.commons.TicketAuditLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.TicketAuditLog;
  return proto.api.commons.TicketAuditLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.TicketAuditLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.TicketAuditLog}
 */
proto.api.commons.TicketAuditLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketAuditEventLogId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketSid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedById(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedByDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.TicketAuditLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.TicketAuditLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.TicketAuditLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.TicketAuditLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketAuditEventLogId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTicketSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      4,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedById();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedByDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ticket_audit_event_log_id = 1;
 * @return {string}
 */
proto.api.commons.TicketAuditLog.prototype.getTicketAuditEventLogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAuditLog} returns this
 */
proto.api.commons.TicketAuditLog.prototype.setTicketAuditEventLogId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.commons.TicketAuditLog.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAuditLog} returns this
 */
proto.api.commons.TicketAuditLog.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string event = 3;
 * @return {string}
 */
proto.api.commons.TicketAuditLog.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAuditLog} returns this
 */
proto.api.commons.TicketAuditLog.prototype.setEvent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 ticket_sid = 4;
 * @return {string}
 */
proto.api.commons.TicketAuditLog.prototype.getTicketSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAuditLog} returns this
 */
proto.api.commons.TicketAuditLog.prototype.setTicketSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 4, value);
};


/**
 * optional string event_type = 5;
 * @return {string}
 */
proto.api.commons.TicketAuditLog.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAuditLog} returns this
 */
proto.api.commons.TicketAuditLog.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_by_id = 6;
 * @return {string}
 */
proto.api.commons.TicketAuditLog.prototype.getCreatedById = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.TicketAuditLog} returns this
 */
proto.api.commons.TicketAuditLog.prototype.setCreatedById = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp created_by_date = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.commons.TicketAuditLog.prototype.getCreatedByDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.commons.TicketAuditLog} returns this
*/
proto.api.commons.TicketAuditLog.prototype.setCreatedByDate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.TicketAuditLog} returns this
 */
proto.api.commons.TicketAuditLog.prototype.clearCreatedByDate = function() {
  return this.setCreatedByDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.TicketAuditLog.prototype.hasCreatedByDate = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.EditTicket.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.EditTicket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.EditTicket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EditTicket.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketSid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    editValue: (f = msg.getEditValue()) && proto.api.commons.EditAttribute.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.EditTicket}
 */
proto.api.commons.EditTicket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.EditTicket;
  return proto.api.commons.EditTicket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.EditTicket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.EditTicket}
 */
proto.api.commons.EditTicket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTicketSid(value);
      break;
    case 2:
      var value = new proto.api.commons.EditAttribute;
      reader.readMessage(value,proto.api.commons.EditAttribute.deserializeBinaryFromReader);
      msg.setEditValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.EditTicket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.EditTicket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.EditTicket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EditTicket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getEditValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.commons.EditAttribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 ticket_sid = 1;
 * @return {string}
 */
proto.api.commons.EditTicket.prototype.getTicketSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EditTicket} returns this
 */
proto.api.commons.EditTicket.prototype.setTicketSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional EditAttribute edit_value = 2;
 * @return {?proto.api.commons.EditAttribute}
 */
proto.api.commons.EditTicket.prototype.getEditValue = function() {
  return /** @type{?proto.api.commons.EditAttribute} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.EditAttribute, 2));
};


/**
 * @param {?proto.api.commons.EditAttribute|undefined} value
 * @return {!proto.api.commons.EditTicket} returns this
*/
proto.api.commons.EditTicket.prototype.setEditValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.EditTicket} returns this
 */
proto.api.commons.EditTicket.prototype.clearEditValue = function() {
  return this.setEditValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.EditTicket.prototype.hasEditValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.EditAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.EditAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.EditAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EditAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    colDesc: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    fromVal: jspb.Message.getFieldWithDefault(msg, 2, ""),
    toVal: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isEdited: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.EditAttribute}
 */
proto.api.commons.EditAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.EditAttribute;
  return proto.api.commons.EditAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.EditAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.EditAttribute}
 */
proto.api.commons.EditAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setColDesc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromVal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToVal(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEdited(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.EditAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.EditAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.EditAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.EditAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColDesc();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getFromVal();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToVal();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsEdited();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int64 col_desc = 1;
 * @return {string}
 */
proto.api.commons.EditAttribute.prototype.getColDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EditAttribute} returns this
 */
proto.api.commons.EditAttribute.prototype.setColDesc = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string from_val = 2;
 * @return {string}
 */
proto.api.commons.EditAttribute.prototype.getFromVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EditAttribute} returns this
 */
proto.api.commons.EditAttribute.prototype.setFromVal = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string to_val = 3;
 * @return {string}
 */
proto.api.commons.EditAttribute.prototype.getToVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.EditAttribute} returns this
 */
proto.api.commons.EditAttribute.prototype.setToVal = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_edited = 4;
 * @return {boolean}
 */
proto.api.commons.EditAttribute.prototype.getIsEdited = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.EditAttribute} returns this
 */
proto.api.commons.EditAttribute.prototype.setIsEdited = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.api.commons.TimeScale = {
  TIME_SCALE_MINUTE: 0,
  TIME_SCALE_HOUR: 1,
  TIME_SCALE_DAY: 2,
  TIME_SCALE_WEEK: 3,
  TIME_SCALE_MONTH: 4,
  TIME_SCALE_YEAR: 5
};

/**
 * @enum {number}
 */
proto.api.commons.TicketStatus = {
  TICKET_STATUS_NEW: 0,
  TICKET_STATUS_OPEN: 1,
  TICKET_STATUS_CLOSE: 2
};

/**
 * @enum {number}
 */
proto.api.commons.PhoneNumberType = {
  MOBILE: 0,
  OTHER: 1,
  INVALID_ERROR: 2
};

goog.object.extend(exports, proto.api.commons);
