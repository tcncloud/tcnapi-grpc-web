// source: api/commons/chat.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.api.commons.ChatCampaignEvent', null, global);
goog.exportSymbol('proto.api.commons.ChatCampaignStatus', null, global);
goog.exportSymbol('proto.api.commons.ChatColorProperties', null, global);
goog.exportSymbol('proto.api.commons.ChatHeader', null, global);
goog.exportSymbol('proto.api.commons.ChatMessageSenderType', null, global);
goog.exportSymbol('proto.api.commons.ChatMessageType', null, global);
goog.exportSymbol('proto.api.commons.HoursOfOperation', null, global);
goog.exportSymbol('proto.api.commons.HoursOfOperationRange', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ChatColorProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ChatColorProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ChatColorProperties.displayName = 'proto.api.commons.ChatColorProperties';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ChatHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ChatHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ChatHeader.displayName = 'proto.api.commons.ChatHeader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.HoursOfOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.commons.HoursOfOperation.repeatedFields_, null);
};
goog.inherits(proto.api.commons.HoursOfOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.HoursOfOperation.displayName = 'proto.api.commons.HoursOfOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.HoursOfOperationRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.HoursOfOperationRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.HoursOfOperationRange.displayName = 'proto.api.commons.HoursOfOperationRange';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ChatColorProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ChatColorProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ChatColorProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ChatColorProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    primaryColor: jspb.Message.getFieldWithDefault(msg, 1, ""),
    headerTextColor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paragraphTextColor: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ChatColorProperties}
 */
proto.api.commons.ChatColorProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ChatColorProperties;
  return proto.api.commons.ChatColorProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ChatColorProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ChatColorProperties}
 */
proto.api.commons.ChatColorProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrimaryColor(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeaderTextColor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParagraphTextColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ChatColorProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ChatColorProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ChatColorProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ChatColorProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrimaryColor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHeaderTextColor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParagraphTextColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string primary_color = 1;
 * @return {string}
 */
proto.api.commons.ChatColorProperties.prototype.getPrimaryColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ChatColorProperties} returns this
 */
proto.api.commons.ChatColorProperties.prototype.setPrimaryColor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string header_text_color = 2;
 * @return {string}
 */
proto.api.commons.ChatColorProperties.prototype.getHeaderTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ChatColorProperties} returns this
 */
proto.api.commons.ChatColorProperties.prototype.setHeaderTextColor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string paragraph_text_color = 3;
 * @return {string}
 */
proto.api.commons.ChatColorProperties.prototype.getParagraphTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ChatColorProperties} returns this
 */
proto.api.commons.ChatColorProperties.prototype.setParagraphTextColor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ChatHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ChatHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ChatHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ChatHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subheader: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ChatHeader}
 */
proto.api.commons.ChatHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ChatHeader;
  return proto.api.commons.ChatHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ChatHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ChatHeader}
 */
proto.api.commons.ChatHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubheader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ChatHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ChatHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ChatHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ChatHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubheader();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string header = 1;
 * @return {string}
 */
proto.api.commons.ChatHeader.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ChatHeader} returns this
 */
proto.api.commons.ChatHeader.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subheader = 2;
 * @return {string}
 */
proto.api.commons.ChatHeader.prototype.getSubheader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ChatHeader} returns this
 */
proto.api.commons.ChatHeader.prototype.setSubheader = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.commons.HoursOfOperation.repeatedFields_ = [1,2,3,4,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.HoursOfOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.HoursOfOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.HoursOfOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HoursOfOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    mondayList: jspb.Message.toObjectList(msg.getMondayList(),
    proto.api.commons.HoursOfOperationRange.toObject, includeInstance),
    tuesdayList: jspb.Message.toObjectList(msg.getTuesdayList(),
    proto.api.commons.HoursOfOperationRange.toObject, includeInstance),
    wednesdayList: jspb.Message.toObjectList(msg.getWednesdayList(),
    proto.api.commons.HoursOfOperationRange.toObject, includeInstance),
    thursdayList: jspb.Message.toObjectList(msg.getThursdayList(),
    proto.api.commons.HoursOfOperationRange.toObject, includeInstance),
    fridayList: jspb.Message.toObjectList(msg.getFridayList(),
    proto.api.commons.HoursOfOperationRange.toObject, includeInstance),
    saturdayList: jspb.Message.toObjectList(msg.getSaturdayList(),
    proto.api.commons.HoursOfOperationRange.toObject, includeInstance),
    sundayList: jspb.Message.toObjectList(msg.getSundayList(),
    proto.api.commons.HoursOfOperationRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.HoursOfOperation}
 */
proto.api.commons.HoursOfOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.HoursOfOperation;
  return proto.api.commons.HoursOfOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.HoursOfOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.HoursOfOperation}
 */
proto.api.commons.HoursOfOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.commons.HoursOfOperationRange;
      reader.readMessage(value,proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader);
      msg.addMonday(value);
      break;
    case 2:
      var value = new proto.api.commons.HoursOfOperationRange;
      reader.readMessage(value,proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader);
      msg.addTuesday(value);
      break;
    case 3:
      var value = new proto.api.commons.HoursOfOperationRange;
      reader.readMessage(value,proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader);
      msg.addWednesday(value);
      break;
    case 4:
      var value = new proto.api.commons.HoursOfOperationRange;
      reader.readMessage(value,proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader);
      msg.addThursday(value);
      break;
    case 5:
      var value = new proto.api.commons.HoursOfOperationRange;
      reader.readMessage(value,proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader);
      msg.addFriday(value);
      break;
    case 6:
      var value = new proto.api.commons.HoursOfOperationRange;
      reader.readMessage(value,proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader);
      msg.addSaturday(value);
      break;
    case 7:
      var value = new proto.api.commons.HoursOfOperationRange;
      reader.readMessage(value,proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader);
      msg.addSunday(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.HoursOfOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.HoursOfOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.HoursOfOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HoursOfOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMondayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter
    );
  }
  f = message.getTuesdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter
    );
  }
  f = message.getWednesdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter
    );
  }
  f = message.getThursdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter
    );
  }
  f = message.getFridayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter
    );
  }
  f = message.getSaturdayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter
    );
  }
  f = message.getSundayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HoursOfOperationRange monday = 1;
 * @return {!Array<!proto.api.commons.HoursOfOperationRange>}
 */
proto.api.commons.HoursOfOperation.prototype.getMondayList = function() {
  return /** @type{!Array<!proto.api.commons.HoursOfOperationRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.HoursOfOperationRange, 1));
};


/**
 * @param {!Array<!proto.api.commons.HoursOfOperationRange>} value
 * @return {!proto.api.commons.HoursOfOperation} returns this
*/
proto.api.commons.HoursOfOperation.prototype.setMondayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.commons.HoursOfOperationRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperation.prototype.addMonday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.commons.HoursOfOperationRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.HoursOfOperation} returns this
 */
proto.api.commons.HoursOfOperation.prototype.clearMondayList = function() {
  return this.setMondayList([]);
};


/**
 * repeated HoursOfOperationRange tuesday = 2;
 * @return {!Array<!proto.api.commons.HoursOfOperationRange>}
 */
proto.api.commons.HoursOfOperation.prototype.getTuesdayList = function() {
  return /** @type{!Array<!proto.api.commons.HoursOfOperationRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.HoursOfOperationRange, 2));
};


/**
 * @param {!Array<!proto.api.commons.HoursOfOperationRange>} value
 * @return {!proto.api.commons.HoursOfOperation} returns this
*/
proto.api.commons.HoursOfOperation.prototype.setTuesdayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.commons.HoursOfOperationRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperation.prototype.addTuesday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.commons.HoursOfOperationRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.HoursOfOperation} returns this
 */
proto.api.commons.HoursOfOperation.prototype.clearTuesdayList = function() {
  return this.setTuesdayList([]);
};


/**
 * repeated HoursOfOperationRange wednesday = 3;
 * @return {!Array<!proto.api.commons.HoursOfOperationRange>}
 */
proto.api.commons.HoursOfOperation.prototype.getWednesdayList = function() {
  return /** @type{!Array<!proto.api.commons.HoursOfOperationRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.HoursOfOperationRange, 3));
};


/**
 * @param {!Array<!proto.api.commons.HoursOfOperationRange>} value
 * @return {!proto.api.commons.HoursOfOperation} returns this
*/
proto.api.commons.HoursOfOperation.prototype.setWednesdayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.api.commons.HoursOfOperationRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperation.prototype.addWednesday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.api.commons.HoursOfOperationRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.HoursOfOperation} returns this
 */
proto.api.commons.HoursOfOperation.prototype.clearWednesdayList = function() {
  return this.setWednesdayList([]);
};


/**
 * repeated HoursOfOperationRange thursday = 4;
 * @return {!Array<!proto.api.commons.HoursOfOperationRange>}
 */
proto.api.commons.HoursOfOperation.prototype.getThursdayList = function() {
  return /** @type{!Array<!proto.api.commons.HoursOfOperationRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.HoursOfOperationRange, 4));
};


/**
 * @param {!Array<!proto.api.commons.HoursOfOperationRange>} value
 * @return {!proto.api.commons.HoursOfOperation} returns this
*/
proto.api.commons.HoursOfOperation.prototype.setThursdayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.commons.HoursOfOperationRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperation.prototype.addThursday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.commons.HoursOfOperationRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.HoursOfOperation} returns this
 */
proto.api.commons.HoursOfOperation.prototype.clearThursdayList = function() {
  return this.setThursdayList([]);
};


/**
 * repeated HoursOfOperationRange friday = 5;
 * @return {!Array<!proto.api.commons.HoursOfOperationRange>}
 */
proto.api.commons.HoursOfOperation.prototype.getFridayList = function() {
  return /** @type{!Array<!proto.api.commons.HoursOfOperationRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.HoursOfOperationRange, 5));
};


/**
 * @param {!Array<!proto.api.commons.HoursOfOperationRange>} value
 * @return {!proto.api.commons.HoursOfOperation} returns this
*/
proto.api.commons.HoursOfOperation.prototype.setFridayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.api.commons.HoursOfOperationRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperation.prototype.addFriday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.api.commons.HoursOfOperationRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.HoursOfOperation} returns this
 */
proto.api.commons.HoursOfOperation.prototype.clearFridayList = function() {
  return this.setFridayList([]);
};


/**
 * repeated HoursOfOperationRange saturday = 6;
 * @return {!Array<!proto.api.commons.HoursOfOperationRange>}
 */
proto.api.commons.HoursOfOperation.prototype.getSaturdayList = function() {
  return /** @type{!Array<!proto.api.commons.HoursOfOperationRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.HoursOfOperationRange, 6));
};


/**
 * @param {!Array<!proto.api.commons.HoursOfOperationRange>} value
 * @return {!proto.api.commons.HoursOfOperation} returns this
*/
proto.api.commons.HoursOfOperation.prototype.setSaturdayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.api.commons.HoursOfOperationRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperation.prototype.addSaturday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.api.commons.HoursOfOperationRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.HoursOfOperation} returns this
 */
proto.api.commons.HoursOfOperation.prototype.clearSaturdayList = function() {
  return this.setSaturdayList([]);
};


/**
 * repeated HoursOfOperationRange sunday = 7;
 * @return {!Array<!proto.api.commons.HoursOfOperationRange>}
 */
proto.api.commons.HoursOfOperation.prototype.getSundayList = function() {
  return /** @type{!Array<!proto.api.commons.HoursOfOperationRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.commons.HoursOfOperationRange, 7));
};


/**
 * @param {!Array<!proto.api.commons.HoursOfOperationRange>} value
 * @return {!proto.api.commons.HoursOfOperation} returns this
*/
proto.api.commons.HoursOfOperation.prototype.setSundayList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.api.commons.HoursOfOperationRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperation.prototype.addSunday = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.api.commons.HoursOfOperationRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.commons.HoursOfOperation} returns this
 */
proto.api.commons.HoursOfOperation.prototype.clearSundayList = function() {
  return this.setSundayList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.HoursOfOperationRange.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.HoursOfOperationRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.HoursOfOperationRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HoursOfOperationRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startHour: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startMinute: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endHour: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endMinute: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperationRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.HoursOfOperationRange;
  return proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.HoursOfOperationRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.HoursOfOperationRange}
 */
proto.api.commons.HoursOfOperationRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartHour(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartMinute(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndHour(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndMinute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.HoursOfOperationRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.HoursOfOperationRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.HoursOfOperationRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartHour();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStartMinute();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEndHour();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEndMinute();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 start_hour = 1;
 * @return {number}
 */
proto.api.commons.HoursOfOperationRange.prototype.getStartHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.HoursOfOperationRange} returns this
 */
proto.api.commons.HoursOfOperationRange.prototype.setStartHour = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 start_minute = 2;
 * @return {number}
 */
proto.api.commons.HoursOfOperationRange.prototype.getStartMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.HoursOfOperationRange} returns this
 */
proto.api.commons.HoursOfOperationRange.prototype.setStartMinute = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 end_hour = 3;
 * @return {number}
 */
proto.api.commons.HoursOfOperationRange.prototype.getEndHour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.HoursOfOperationRange} returns this
 */
proto.api.commons.HoursOfOperationRange.prototype.setEndHour = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 end_minute = 4;
 * @return {number}
 */
proto.api.commons.HoursOfOperationRange.prototype.getEndMinute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.HoursOfOperationRange} returns this
 */
proto.api.commons.HoursOfOperationRange.prototype.setEndMinute = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.api.commons.ChatMessageSenderType = {
  CHAT_MESSAGE_SENDER_TYPE_AGENT: 0,
  CHAT_MESSAGE_SENDER_TYPE_CUSTOMER: 1,
  CHAT_MESSAGE_SENDER_TYPE_MANAGER: 2
};

/**
 * @enum {number}
 */
proto.api.commons.ChatCampaignStatus = {
  CHAT_CAMPAIGN_UNKNOWN: 0,
  CHAT_CAMPAIGN_RUNNING: 15010,
  CHAT_CAMPAIGN_STOPPED: 15050,
  CHAT_CAMPAIGN_ARCHIVED: 15060,
  CHAT_CAMPAIGN_PAUSED: 15070
};

/**
 * @enum {number}
 */
proto.api.commons.ChatCampaignEvent = {
  CHAT_CAMPAIGN_EVENT_UNKNOWN: 0,
  CHAT_CAMPAIGN_EVENT_SCHEDULED: 1,
  CHAT_CAMPAIGN_EVENT_STOPPED: 2,
  CHAT_CAMPAIGN_EVENT_ARCHIVED: 3,
  CHAT_CAMPAIGN_EVENT_PAUSED: 4
};

/**
 * @enum {number}
 */
proto.api.commons.ChatMessageType = {
  CHAT_REPLY_FROM_CUSTOMER: 0,
  CHAT_REPLY_FROM_AGENT: 1
};

goog.object.extend(exports, proto.api.commons);
