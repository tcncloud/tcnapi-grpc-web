// source: api/commons/p3api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var proto = {};

goog.exportSymbol('api.commons.CallHistorySearchScope', null, proto);
goog.exportSymbol('api.commons.CallHistorySearchScope.Enum', null, proto);
goog.exportSymbol('api.commons.CallHistorySearchType', null, proto);
goog.exportSymbol('api.commons.CallHistorySearchType.Enum', null, proto);
goog.exportSymbol('api.commons.ClientInfoDataRow', null, proto);
goog.exportSymbol('api.commons.ClientInfoDisplayTemplateRow', null, proto);
goog.exportSymbol('api.commons.DialedNumberFieldSettings', null, proto);
goog.exportSymbol('api.commons.InterruptedPeeringStatus', null, proto);
goog.exportSymbol('api.commons.ListPhoneBookOrderBy', null, proto);
goog.exportSymbol('api.commons.ListPhoneBookOrderBy.Enum', null, proto);
goog.exportSymbol('api.commons.PhoneBookPhoneNumberType', null, proto);
goog.exportSymbol('api.commons.PhoneBookSIPType', null, proto);
goog.exportSymbol('api.commons.RGBColor', null, proto);
goog.exportSymbol('api.commons.RecalculateBillingMonth', null, proto);
goog.exportSymbol('api.commons.RecalculateBillingType', null, proto);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ClientInfoDataRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ClientInfoDataRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ClientInfoDataRow.displayName = 'proto.api.commons.ClientInfoDataRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.RGBColor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.RGBColor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.RGBColor.displayName = 'proto.api.commons.RGBColor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.DialedNumberFieldSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.DialedNumberFieldSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.DialedNumberFieldSettings.displayName = 'proto.api.commons.DialedNumberFieldSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ClientInfoDisplayTemplateRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ClientInfoDisplayTemplateRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ClientInfoDisplayTemplateRow.displayName = 'proto.api.commons.ClientInfoDisplayTemplateRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallHistorySearchType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallHistorySearchType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallHistorySearchType.displayName = 'proto.api.commons.CallHistorySearchType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.CallHistorySearchScope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.CallHistorySearchScope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.CallHistorySearchScope.displayName = 'proto.api.commons.CallHistorySearchScope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.commons.ListPhoneBookOrderBy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.commons.ListPhoneBookOrderBy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.commons.ListPhoneBookOrderBy.displayName = 'proto.api.commons.ListPhoneBookOrderBy';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ClientInfoDataRow.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ClientInfoDataRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ClientInfoDataRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ClientInfoDataRow.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldLabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
fieldValue: jspb.Message.getFieldWithDefault(msg, 2, ""),
isPhone: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
dialedNumber: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
contactFieldDescriptionSid: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ClientInfoDataRow}
 */
proto.api.commons.ClientInfoDataRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ClientInfoDataRow;
  return proto.api.commons.ClientInfoDataRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ClientInfoDataRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ClientInfoDataRow}
 */
proto.api.commons.ClientInfoDataRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPhone(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDialedNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContactFieldDescriptionSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ClientInfoDataRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ClientInfoDataRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ClientInfoDataRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ClientInfoDataRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsPhone();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDialedNumber();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getContactFieldDescriptionSid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string field_label = 1;
 * @return {string}
 */
proto.api.commons.ClientInfoDataRow.prototype.getFieldLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ClientInfoDataRow} returns this
 */
proto.api.commons.ClientInfoDataRow.prototype.setFieldLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string field_value = 2;
 * @return {string}
 */
proto.api.commons.ClientInfoDataRow.prototype.getFieldValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ClientInfoDataRow} returns this
 */
proto.api.commons.ClientInfoDataRow.prototype.setFieldValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_phone = 3;
 * @return {boolean}
 */
proto.api.commons.ClientInfoDataRow.prototype.getIsPhone = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.ClientInfoDataRow} returns this
 */
proto.api.commons.ClientInfoDataRow.prototype.setIsPhone = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool dialed_number = 4;
 * @return {boolean}
 */
proto.api.commons.ClientInfoDataRow.prototype.getDialedNumber = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.ClientInfoDataRow} returns this
 */
proto.api.commons.ClientInfoDataRow.prototype.setDialedNumber = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int64 contact_field_description_sid = 5;
 * @return {number}
 */
proto.api.commons.ClientInfoDataRow.prototype.getContactFieldDescriptionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ClientInfoDataRow} returns this
 */
proto.api.commons.ClientInfoDataRow.prototype.setContactFieldDescriptionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.RGBColor.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.RGBColor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.RGBColor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.RGBColor.toObject = function(includeInstance, msg) {
  var f, obj = {
red: jspb.Message.getFieldWithDefault(msg, 1, 0),
green: jspb.Message.getFieldWithDefault(msg, 2, 0),
blue: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.RGBColor}
 */
proto.api.commons.RGBColor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.RGBColor;
  return proto.api.commons.RGBColor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.RGBColor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.RGBColor}
 */
proto.api.commons.RGBColor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGreen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.RGBColor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.RGBColor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.RGBColor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.RGBColor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRed();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGreen();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBlue();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 red = 1;
 * @return {number}
 */
proto.api.commons.RGBColor.prototype.getRed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.RGBColor} returns this
 */
proto.api.commons.RGBColor.prototype.setRed = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 green = 2;
 * @return {number}
 */
proto.api.commons.RGBColor.prototype.getGreen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.RGBColor} returns this
 */
proto.api.commons.RGBColor.prototype.setGreen = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 blue = 3;
 * @return {number}
 */
proto.api.commons.RGBColor.prototype.getBlue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.RGBColor} returns this
 */
proto.api.commons.RGBColor.prototype.setBlue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.DialedNumberFieldSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.DialedNumberFieldSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.DialedNumberFieldSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
shouldDisplay: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
color: (f = msg.getColor()) && proto.api.commons.RGBColor.toObject(includeInstance, f),
bgColor: (f = msg.getBgColor()) && proto.api.commons.RGBColor.toObject(includeInstance, f),
allowAgentCopy: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.DialedNumberFieldSettings}
 */
proto.api.commons.DialedNumberFieldSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.DialedNumberFieldSettings;
  return proto.api.commons.DialedNumberFieldSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.DialedNumberFieldSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.DialedNumberFieldSettings}
 */
proto.api.commons.DialedNumberFieldSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShouldDisplay(value);
      break;
    case 2:
      var value = new proto.api.commons.RGBColor;
      reader.readMessage(value,proto.api.commons.RGBColor.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 3:
      var value = new proto.api.commons.RGBColor;
      reader.readMessage(value,proto.api.commons.RGBColor.deserializeBinaryFromReader);
      msg.setBgColor(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowAgentCopy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.DialedNumberFieldSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.DialedNumberFieldSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.DialedNumberFieldSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShouldDisplay();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.commons.RGBColor.serializeBinaryToWriter
    );
  }
  f = message.getBgColor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.RGBColor.serializeBinaryToWriter
    );
  }
  f = message.getAllowAgentCopy();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool should_display = 1;
 * @return {boolean}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.getShouldDisplay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.DialedNumberFieldSettings} returns this
 */
proto.api.commons.DialedNumberFieldSettings.prototype.setShouldDisplay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional RGBColor color = 2;
 * @return {?proto.api.commons.RGBColor}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.getColor = function() {
  return /** @type{?proto.api.commons.RGBColor} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.RGBColor, 2));
};


/**
 * @param {?proto.api.commons.RGBColor|undefined} value
 * @return {!proto.api.commons.DialedNumberFieldSettings} returns this
*/
proto.api.commons.DialedNumberFieldSettings.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DialedNumberFieldSettings} returns this
 */
proto.api.commons.DialedNumberFieldSettings.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.hasColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RGBColor bg_color = 3;
 * @return {?proto.api.commons.RGBColor}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.getBgColor = function() {
  return /** @type{?proto.api.commons.RGBColor} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.RGBColor, 3));
};


/**
 * @param {?proto.api.commons.RGBColor|undefined} value
 * @return {!proto.api.commons.DialedNumberFieldSettings} returns this
*/
proto.api.commons.DialedNumberFieldSettings.prototype.setBgColor = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.DialedNumberFieldSettings} returns this
 */
proto.api.commons.DialedNumberFieldSettings.prototype.clearBgColor = function() {
  return this.setBgColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.hasBgColor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool allow_agent_copy = 4;
 * @return {boolean}
 */
proto.api.commons.DialedNumberFieldSettings.prototype.getAllowAgentCopy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.DialedNumberFieldSettings} returns this
 */
proto.api.commons.DialedNumberFieldSettings.prototype.setAllowAgentCopy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ClientInfoDisplayTemplateRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ClientInfoDisplayTemplateRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ClientInfoDisplayTemplateRow.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldLabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
color: (f = msg.getColor()) && proto.api.commons.RGBColor.toObject(includeInstance, f),
bgColor: (f = msg.getBgColor()) && proto.api.commons.RGBColor.toObject(includeInstance, f),
contactFieldDescriptionSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
allowAgentCopy: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ClientInfoDisplayTemplateRow;
  return proto.api.commons.ClientInfoDisplayTemplateRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ClientInfoDisplayTemplateRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldLabel(value);
      break;
    case 2:
      var value = new proto.api.commons.RGBColor;
      reader.readMessage(value,proto.api.commons.RGBColor.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 3:
      var value = new proto.api.commons.RGBColor;
      reader.readMessage(value,proto.api.commons.RGBColor.deserializeBinaryFromReader);
      msg.setBgColor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContactFieldDescriptionSid(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowAgentCopy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ClientInfoDisplayTemplateRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ClientInfoDisplayTemplateRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ClientInfoDisplayTemplateRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.commons.RGBColor.serializeBinaryToWriter
    );
  }
  f = message.getBgColor();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.commons.RGBColor.serializeBinaryToWriter
    );
  }
  f = message.getContactFieldDescriptionSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAllowAgentCopy();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string field_label = 1;
 * @return {string}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.getFieldLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow} returns this
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.setFieldLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RGBColor color = 2;
 * @return {?proto.api.commons.RGBColor}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.getColor = function() {
  return /** @type{?proto.api.commons.RGBColor} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.RGBColor, 2));
};


/**
 * @param {?proto.api.commons.RGBColor|undefined} value
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow} returns this
*/
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.setColor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow} returns this
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.clearColor = function() {
  return this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.hasColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RGBColor bg_color = 3;
 * @return {?proto.api.commons.RGBColor}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.getBgColor = function() {
  return /** @type{?proto.api.commons.RGBColor} */ (
    jspb.Message.getWrapperField(this, proto.api.commons.RGBColor, 3));
};


/**
 * @param {?proto.api.commons.RGBColor|undefined} value
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow} returns this
*/
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.setBgColor = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow} returns this
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.clearBgColor = function() {
  return this.setBgColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.hasBgColor = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 contact_field_description_sid = 4;
 * @return {number}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.getContactFieldDescriptionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow} returns this
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.setContactFieldDescriptionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool allow_agent_copy = 5;
 * @return {boolean}
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.getAllowAgentCopy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.commons.ClientInfoDisplayTemplateRow} returns this
 */
proto.api.commons.ClientInfoDisplayTemplateRow.prototype.setAllowAgentCopy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallHistorySearchType.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallHistorySearchType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallHistorySearchType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallHistorySearchType.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallHistorySearchType}
 */
proto.api.commons.CallHistorySearchType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallHistorySearchType;
  return proto.api.commons.CallHistorySearchType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallHistorySearchType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallHistorySearchType}
 */
proto.api.commons.CallHistorySearchType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallHistorySearchType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallHistorySearchType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallHistorySearchType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallHistorySearchType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.CallHistorySearchType.Enum = {
  STANDARD: 0,
  BY_ID: 1,
  BY_AGENT: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.CallHistorySearchScope.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.CallHistorySearchScope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.CallHistorySearchScope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallHistorySearchScope.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.CallHistorySearchScope}
 */
proto.api.commons.CallHistorySearchScope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.CallHistorySearchScope;
  return proto.api.commons.CallHistorySearchScope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.CallHistorySearchScope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.CallHistorySearchScope}
 */
proto.api.commons.CallHistorySearchScope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.CallHistorySearchScope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.CallHistorySearchScope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.CallHistorySearchScope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.CallHistorySearchScope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.CallHistorySearchScope.Enum = {
  ALL: 0,
  TWENTY_FOUR_HOURS: 1,
  TWO_DAYS: 2,
  THREE_DAYS: 3,
  FIVE_DAYS: 4,
  SEVEN_DAYS: 5,
  THIRTY_DAYS: 6,
  SIXTY_DAYS: 7,
  NINETY_DAYS: 8,
  ONEHUNDRED_TWENTY_DAYS: 9,
  ONEHUNDRED_FIFTY_DAYS: 10,
  ONEHUNDRED_EIGHTY_DAYS: 11
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.commons.ListPhoneBookOrderBy.prototype.toObject = function(opt_includeInstance) {
  return proto.api.commons.ListPhoneBookOrderBy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.commons.ListPhoneBookOrderBy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ListPhoneBookOrderBy.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.commons.ListPhoneBookOrderBy}
 */
proto.api.commons.ListPhoneBookOrderBy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.commons.ListPhoneBookOrderBy;
  return proto.api.commons.ListPhoneBookOrderBy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.commons.ListPhoneBookOrderBy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.commons.ListPhoneBookOrderBy}
 */
proto.api.commons.ListPhoneBookOrderBy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.commons.ListPhoneBookOrderBy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.commons.ListPhoneBookOrderBy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.commons.ListPhoneBookOrderBy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.commons.ListPhoneBookOrderBy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.api.commons.ListPhoneBookOrderBy.Enum = {
  PHONE_BOOK_SID: 0,
  ENTRY_TYPE: 1,
  ENTRY_NAME: 2,
  CLIENT_SID: 3,
  HUNT_GROUP_SID: 4,
  PHONE_NUMBER: 5,
  PHONE_NUMBER_TYPE: 6,
  PHONE_NUMBER_HIDDEN: 7
};

/**
 * @enum {number}
 */
proto.api.commons.InterruptedPeeringStatus = {
  INTERRUPTPEERINGSTATUS_MANUAL: 0,
  INTERRUPTPEERINGSTATUS_PREVIEW: 1
};

/**
 * @enum {number}
 */
proto.api.commons.RecalculateBillingMonth = {
  RECALCULATE_BILLING_MONTH_CURRENT: 0,
  RECALCULATE_BILLING_MONTH_PREVIOUS: 1
};

/**
 * @enum {number}
 */
proto.api.commons.RecalculateBillingType = {
  RECALCULATE_BILLING_TYPE_OUTBOUND_CALLS: 0,
  RECALCULATE_BILLING_TYPE_INBOUND_CALLS: 1,
  RECALCULATE_BILLING_TYPE_AGENTS: 2,
  RECALCULATE_BILLING_TYPE_SMS: 3,
  RECALCULATE_BILLING_TYPE_EMAIL: 4,
  RECALCULATE_BILLING_TYPE_MANUAL_DIAL_CALLS: 6
};

/**
 * @enum {number}
 */
proto.api.commons.PhoneBookSIPType = {
  PHONE_BOOK_SIP_TYPE_OUTBOUND: 0,
  PHONE_BOOK_SIP_TYPE_TRANSFER: 1
};

/**
 * @enum {number}
 */
proto.api.commons.PhoneBookPhoneNumberType = {
  PHONE_BOOK_PHONE_NUMBER_TYPE_CALLER_ID: 0,
  PHONE_BOOK_PHONE_NUMBER_TYPE_OUTBOUND: 1,
  PHONE_BOOK_PHONE_NUMBER_TYPE_TRANSFER: 2
};

goog.object.extend(exports, proto);
