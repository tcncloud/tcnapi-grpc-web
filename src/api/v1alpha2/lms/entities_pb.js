// source: api/v1alpha2/lms/entities.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_v0alpha_lms_pb = require('../../../api/v0alpha/lms_pb.js');
goog.object.extend(proto, api_v0alpha_lms_pb);
goog.exportSymbol('proto.protos.lms.v2.Field', null, global);
goog.exportSymbol('proto.protos.lms.v2.FileTemplate', null, global);
goog.exportSymbol('proto.protos.lms.v2.FileTemplateV2', null, global);
goog.exportSymbol('proto.protos.lms.v2.FileTemplateV2.TemplateCase', null, global);
goog.exportSymbol('proto.protos.lms.v2.FileTemplates', null, global);
goog.exportSymbol('proto.protos.lms.v2.OptsCsv', null, global);
goog.exportSymbol('proto.protos.lms.v2.OptsFixed', null, global);
goog.exportSymbol('proto.protos.lms.v2.OptsFixed.Field', null, global);
goog.exportSymbol('proto.protos.lms.v2.OptsJson', null, global);
goog.exportSymbol('proto.protos.lms.v2.OptsJsonL', null, global);
goog.exportSymbol('proto.protos.lms.v2.OptsParquet', null, global);
goog.exportSymbol('proto.protos.lms.v2.ParseOpts', null, global);
goog.exportSymbol('proto.protos.lms.v2.ParseOpts.FtypeCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.FileTemplateV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protos.lms.v2.FileTemplateV2.oneofGroups_);
};
goog.inherits(proto.protos.lms.v2.FileTemplateV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.FileTemplateV2.displayName = 'proto.protos.lms.v2.FileTemplateV2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.FileTemplates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.lms.v2.FileTemplates.repeatedFields_, null);
};
goog.inherits(proto.protos.lms.v2.FileTemplates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.FileTemplates.displayName = 'proto.protos.lms.v2.FileTemplates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.FileTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.lms.v2.FileTemplate.repeatedFields_, null);
};
goog.inherits(proto.protos.lms.v2.FileTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.FileTemplate.displayName = 'proto.protos.lms.v2.FileTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.lms.v2.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.Field.displayName = 'proto.protos.lms.v2.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.ParseOpts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.protos.lms.v2.ParseOpts.oneofGroups_);
};
goog.inherits(proto.protos.lms.v2.ParseOpts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.ParseOpts.displayName = 'proto.protos.lms.v2.ParseOpts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.OptsCsv = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.lms.v2.OptsCsv.repeatedFields_, null);
};
goog.inherits(proto.protos.lms.v2.OptsCsv, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.OptsCsv.displayName = 'proto.protos.lms.v2.OptsCsv';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.OptsJson = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.lms.v2.OptsJson, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.OptsJson.displayName = 'proto.protos.lms.v2.OptsJson';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.OptsJsonL = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.lms.v2.OptsJsonL, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.OptsJsonL.displayName = 'proto.protos.lms.v2.OptsJsonL';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.OptsFixed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.lms.v2.OptsFixed.repeatedFields_, null);
};
goog.inherits(proto.protos.lms.v2.OptsFixed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.OptsFixed.displayName = 'proto.protos.lms.v2.OptsFixed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.OptsFixed.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.lms.v2.OptsFixed.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.OptsFixed.Field.displayName = 'proto.protos.lms.v2.OptsFixed.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.lms.v2.OptsParquet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.lms.v2.OptsParquet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.lms.v2.OptsParquet.displayName = 'proto.protos.lms.v2.OptsParquet';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protos.lms.v2.FileTemplateV2.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.protos.lms.v2.FileTemplateV2.TemplateCase = {
  TEMPLATE_NOT_SET: 0,
  LEGACY_TEMPLATE: 1,
  DOCK_TEMPLATE: 2
};

/**
 * @return {proto.protos.lms.v2.FileTemplateV2.TemplateCase}
 */
proto.protos.lms.v2.FileTemplateV2.prototype.getTemplateCase = function() {
  return /** @type {proto.protos.lms.v2.FileTemplateV2.TemplateCase} */(jspb.Message.computeOneofCase(this, proto.protos.lms.v2.FileTemplateV2.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.FileTemplateV2.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.FileTemplateV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.FileTemplateV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.FileTemplateV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    legacyTemplate: (f = msg.getLegacyTemplate()) && api_v0alpha_lms_pb.FileTemplate.toObject(includeInstance, f),
    dockTemplate: (f = msg.getDockTemplate()) && proto.protos.lms.v2.FileTemplate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.FileTemplateV2}
 */
proto.protos.lms.v2.FileTemplateV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.FileTemplateV2;
  return proto.protos.lms.v2.FileTemplateV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.FileTemplateV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.FileTemplateV2}
 */
proto.protos.lms.v2.FileTemplateV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_v0alpha_lms_pb.FileTemplate;
      reader.readMessage(value,api_v0alpha_lms_pb.FileTemplate.deserializeBinaryFromReader);
      msg.setLegacyTemplate(value);
      break;
    case 2:
      var value = new proto.protos.lms.v2.FileTemplate;
      reader.readMessage(value,proto.protos.lms.v2.FileTemplate.deserializeBinaryFromReader);
      msg.setDockTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.FileTemplateV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.FileTemplateV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.FileTemplateV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.FileTemplateV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLegacyTemplate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_v0alpha_lms_pb.FileTemplate.serializeBinaryToWriter
    );
  }
  f = message.getDockTemplate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protos.lms.v2.FileTemplate.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.v0alpha.FileTemplate legacy_template = 1;
 * @return {?proto.api.v0alpha.FileTemplate}
 */
proto.protos.lms.v2.FileTemplateV2.prototype.getLegacyTemplate = function() {
  return /** @type{?proto.api.v0alpha.FileTemplate} */ (
    jspb.Message.getWrapperField(this, api_v0alpha_lms_pb.FileTemplate, 1));
};


/**
 * @param {?proto.api.v0alpha.FileTemplate|undefined} value
 * @return {!proto.protos.lms.v2.FileTemplateV2} returns this
*/
proto.protos.lms.v2.FileTemplateV2.prototype.setLegacyTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.protos.lms.v2.FileTemplateV2.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.FileTemplateV2} returns this
 */
proto.protos.lms.v2.FileTemplateV2.prototype.clearLegacyTemplate = function() {
  return this.setLegacyTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.FileTemplateV2.prototype.hasLegacyTemplate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FileTemplate dock_template = 2;
 * @return {?proto.protos.lms.v2.FileTemplate}
 */
proto.protos.lms.v2.FileTemplateV2.prototype.getDockTemplate = function() {
  return /** @type{?proto.protos.lms.v2.FileTemplate} */ (
    jspb.Message.getWrapperField(this, proto.protos.lms.v2.FileTemplate, 2));
};


/**
 * @param {?proto.protos.lms.v2.FileTemplate|undefined} value
 * @return {!proto.protos.lms.v2.FileTemplateV2} returns this
*/
proto.protos.lms.v2.FileTemplateV2.prototype.setDockTemplate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.protos.lms.v2.FileTemplateV2.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.FileTemplateV2} returns this
 */
proto.protos.lms.v2.FileTemplateV2.prototype.clearDockTemplate = function() {
  return this.setDockTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.FileTemplateV2.prototype.hasDockTemplate = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.lms.v2.FileTemplates.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.FileTemplates.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.FileTemplates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.FileTemplates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.FileTemplates.toObject = function(includeInstance, msg) {
  var f, obj = {
    templatesList: jspb.Message.toObjectList(msg.getTemplatesList(),
    proto.protos.lms.v2.FileTemplateV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.FileTemplates}
 */
proto.protos.lms.v2.FileTemplates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.FileTemplates;
  return proto.protos.lms.v2.FileTemplates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.FileTemplates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.FileTemplates}
 */
proto.protos.lms.v2.FileTemplates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protos.lms.v2.FileTemplateV2;
      reader.readMessage(value,proto.protos.lms.v2.FileTemplateV2.deserializeBinaryFromReader);
      msg.addTemplates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.FileTemplates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.FileTemplates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.FileTemplates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.FileTemplates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTemplatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protos.lms.v2.FileTemplateV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FileTemplateV2 templates = 1;
 * @return {!Array<!proto.protos.lms.v2.FileTemplateV2>}
 */
proto.protos.lms.v2.FileTemplates.prototype.getTemplatesList = function() {
  return /** @type{!Array<!proto.protos.lms.v2.FileTemplateV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protos.lms.v2.FileTemplateV2, 1));
};


/**
 * @param {!Array<!proto.protos.lms.v2.FileTemplateV2>} value
 * @return {!proto.protos.lms.v2.FileTemplates} returns this
*/
proto.protos.lms.v2.FileTemplates.prototype.setTemplatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protos.lms.v2.FileTemplateV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protos.lms.v2.FileTemplateV2}
 */
proto.protos.lms.v2.FileTemplates.prototype.addTemplates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protos.lms.v2.FileTemplateV2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.lms.v2.FileTemplates} returns this
 */
proto.protos.lms.v2.FileTemplates.prototype.clearTemplatesList = function() {
  return this.setTemplatesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.lms.v2.FileTemplate.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.FileTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.FileTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.FileTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.FileTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileTemplateId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.protos.lms.v2.Field.toObject, includeInstance),
    parseOpts: (f = msg.getParseOpts()) && proto.protos.lms.v2.ParseOpts.toObject(includeInstance, f),
    foid: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.FileTemplate}
 */
proto.protos.lms.v2.FileTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.FileTemplate;
  return proto.protos.lms.v2.FileTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.FileTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.FileTemplate}
 */
proto.protos.lms.v2.FileTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileTemplateId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 4:
      var value = new proto.protos.lms.v2.Field;
      reader.readMessage(value,proto.protos.lms.v2.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 5:
      var value = new proto.protos.lms.v2.ParseOpts;
      reader.readMessage(value,proto.protos.lms.v2.ParseOpts.deserializeBinaryFromReader);
      msg.setParseOpts(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFoid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.FileTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.FileTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.FileTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.FileTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileTemplateId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.protos.lms.v2.Field.serializeBinaryToWriter
    );
  }
  f = message.getParseOpts();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protos.lms.v2.ParseOpts.serializeBinaryToWriter
    );
  }
  f = message.getFoid();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.protos.lms.v2.FileTemplate.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
 */
proto.protos.lms.v2.FileTemplate.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string file_template_id = 2;
 * @return {string}
 */
proto.protos.lms.v2.FileTemplate.prototype.getFileTemplateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
 */
proto.protos.lms.v2.FileTemplate.prototype.setFileTemplateId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string filename = 3;
 * @return {string}
 */
proto.protos.lms.v2.FileTemplate.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
 */
proto.protos.lms.v2.FileTemplate.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Field fields = 4;
 * @return {!Array<!proto.protos.lms.v2.Field>}
 */
proto.protos.lms.v2.FileTemplate.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.protos.lms.v2.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protos.lms.v2.Field, 4));
};


/**
 * @param {!Array<!proto.protos.lms.v2.Field>} value
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
*/
proto.protos.lms.v2.FileTemplate.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.protos.lms.v2.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protos.lms.v2.Field}
 */
proto.protos.lms.v2.FileTemplate.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.protos.lms.v2.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
 */
proto.protos.lms.v2.FileTemplate.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional ParseOpts parse_opts = 5;
 * @return {?proto.protos.lms.v2.ParseOpts}
 */
proto.protos.lms.v2.FileTemplate.prototype.getParseOpts = function() {
  return /** @type{?proto.protos.lms.v2.ParseOpts} */ (
    jspb.Message.getWrapperField(this, proto.protos.lms.v2.ParseOpts, 5));
};


/**
 * @param {?proto.protos.lms.v2.ParseOpts|undefined} value
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
*/
proto.protos.lms.v2.FileTemplate.prototype.setParseOpts = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
 */
proto.protos.lms.v2.FileTemplate.prototype.clearParseOpts = function() {
  return this.setParseOpts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.FileTemplate.prototype.hasParseOpts = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 foid = 6;
 * @return {number}
 */
proto.protos.lms.v2.FileTemplate.prototype.getFoid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.lms.v2.FileTemplate} returns this
 */
proto.protos.lms.v2.FileTemplate.prototype.setFoid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    syntaxType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    presiType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    format: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rawValue: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.Field}
 */
proto.protos.lms.v2.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.Field;
  return proto.protos.lms.v2.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.Field}
 */
proto.protos.lms.v2.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSyntaxType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresiType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSyntaxType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPresiType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFormat();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRawValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string syntax_type = 1;
 * @return {string}
 */
proto.protos.lms.v2.Field.prototype.getSyntaxType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.Field} returns this
 */
proto.protos.lms.v2.Field.prototype.setSyntaxType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string presi_type = 2;
 * @return {string}
 */
proto.protos.lms.v2.Field.prototype.getPresiType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.Field} returns this
 */
proto.protos.lms.v2.Field.prototype.setPresiType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.protos.lms.v2.Field.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.Field} returns this
 */
proto.protos.lms.v2.Field.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string format = 4;
 * @return {string}
 */
proto.protos.lms.v2.Field.prototype.getFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.Field} returns this
 */
proto.protos.lms.v2.Field.prototype.setFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string raw_value = 5;
 * @return {string}
 */
proto.protos.lms.v2.Field.prototype.getRawValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.Field} returns this
 */
proto.protos.lms.v2.Field.prototype.setRawValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protos.lms.v2.ParseOpts.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.protos.lms.v2.ParseOpts.FtypeCase = {
  FTYPE_NOT_SET: 0,
  CSV: 1,
  JSON: 2,
  JSONL: 3,
  FIXED: 4,
  PARQUET: 5
};

/**
 * @return {proto.protos.lms.v2.ParseOpts.FtypeCase}
 */
proto.protos.lms.v2.ParseOpts.prototype.getFtypeCase = function() {
  return /** @type {proto.protos.lms.v2.ParseOpts.FtypeCase} */(jspb.Message.computeOneofCase(this, proto.protos.lms.v2.ParseOpts.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.ParseOpts.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.ParseOpts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.ParseOpts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.ParseOpts.toObject = function(includeInstance, msg) {
  var f, obj = {
    csv: (f = msg.getCsv()) && proto.protos.lms.v2.OptsCsv.toObject(includeInstance, f),
    json: (f = msg.getJson()) && proto.protos.lms.v2.OptsJson.toObject(includeInstance, f),
    jsonl: (f = msg.getJsonl()) && proto.protos.lms.v2.OptsJsonL.toObject(includeInstance, f),
    fixed: (f = msg.getFixed()) && proto.protos.lms.v2.OptsFixed.toObject(includeInstance, f),
    parquet: (f = msg.getParquet()) && proto.protos.lms.v2.OptsParquet.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.ParseOpts}
 */
proto.protos.lms.v2.ParseOpts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.ParseOpts;
  return proto.protos.lms.v2.ParseOpts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.ParseOpts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.ParseOpts}
 */
proto.protos.lms.v2.ParseOpts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protos.lms.v2.OptsCsv;
      reader.readMessage(value,proto.protos.lms.v2.OptsCsv.deserializeBinaryFromReader);
      msg.setCsv(value);
      break;
    case 2:
      var value = new proto.protos.lms.v2.OptsJson;
      reader.readMessage(value,proto.protos.lms.v2.OptsJson.deserializeBinaryFromReader);
      msg.setJson(value);
      break;
    case 3:
      var value = new proto.protos.lms.v2.OptsJsonL;
      reader.readMessage(value,proto.protos.lms.v2.OptsJsonL.deserializeBinaryFromReader);
      msg.setJsonl(value);
      break;
    case 4:
      var value = new proto.protos.lms.v2.OptsFixed;
      reader.readMessage(value,proto.protos.lms.v2.OptsFixed.deserializeBinaryFromReader);
      msg.setFixed(value);
      break;
    case 5:
      var value = new proto.protos.lms.v2.OptsParquet;
      reader.readMessage(value,proto.protos.lms.v2.OptsParquet.deserializeBinaryFromReader);
      msg.setParquet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.ParseOpts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.ParseOpts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.ParseOpts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.ParseOpts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCsv();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protos.lms.v2.OptsCsv.serializeBinaryToWriter
    );
  }
  f = message.getJson();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protos.lms.v2.OptsJson.serializeBinaryToWriter
    );
  }
  f = message.getJsonl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protos.lms.v2.OptsJsonL.serializeBinaryToWriter
    );
  }
  f = message.getFixed();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protos.lms.v2.OptsFixed.serializeBinaryToWriter
    );
  }
  f = message.getParquet();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protos.lms.v2.OptsParquet.serializeBinaryToWriter
    );
  }
};


/**
 * optional OptsCsv csv = 1;
 * @return {?proto.protos.lms.v2.OptsCsv}
 */
proto.protos.lms.v2.ParseOpts.prototype.getCsv = function() {
  return /** @type{?proto.protos.lms.v2.OptsCsv} */ (
    jspb.Message.getWrapperField(this, proto.protos.lms.v2.OptsCsv, 1));
};


/**
 * @param {?proto.protos.lms.v2.OptsCsv|undefined} value
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
*/
proto.protos.lms.v2.ParseOpts.prototype.setCsv = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.protos.lms.v2.ParseOpts.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
 */
proto.protos.lms.v2.ParseOpts.prototype.clearCsv = function() {
  return this.setCsv(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.ParseOpts.prototype.hasCsv = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional OptsJson json = 2;
 * @return {?proto.protos.lms.v2.OptsJson}
 */
proto.protos.lms.v2.ParseOpts.prototype.getJson = function() {
  return /** @type{?proto.protos.lms.v2.OptsJson} */ (
    jspb.Message.getWrapperField(this, proto.protos.lms.v2.OptsJson, 2));
};


/**
 * @param {?proto.protos.lms.v2.OptsJson|undefined} value
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
*/
proto.protos.lms.v2.ParseOpts.prototype.setJson = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.protos.lms.v2.ParseOpts.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
 */
proto.protos.lms.v2.ParseOpts.prototype.clearJson = function() {
  return this.setJson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.ParseOpts.prototype.hasJson = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OptsJsonL jsonl = 3;
 * @return {?proto.protos.lms.v2.OptsJsonL}
 */
proto.protos.lms.v2.ParseOpts.prototype.getJsonl = function() {
  return /** @type{?proto.protos.lms.v2.OptsJsonL} */ (
    jspb.Message.getWrapperField(this, proto.protos.lms.v2.OptsJsonL, 3));
};


/**
 * @param {?proto.protos.lms.v2.OptsJsonL|undefined} value
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
*/
proto.protos.lms.v2.ParseOpts.prototype.setJsonl = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.protos.lms.v2.ParseOpts.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
 */
proto.protos.lms.v2.ParseOpts.prototype.clearJsonl = function() {
  return this.setJsonl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.ParseOpts.prototype.hasJsonl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional OptsFixed fixed = 4;
 * @return {?proto.protos.lms.v2.OptsFixed}
 */
proto.protos.lms.v2.ParseOpts.prototype.getFixed = function() {
  return /** @type{?proto.protos.lms.v2.OptsFixed} */ (
    jspb.Message.getWrapperField(this, proto.protos.lms.v2.OptsFixed, 4));
};


/**
 * @param {?proto.protos.lms.v2.OptsFixed|undefined} value
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
*/
proto.protos.lms.v2.ParseOpts.prototype.setFixed = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.protos.lms.v2.ParseOpts.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
 */
proto.protos.lms.v2.ParseOpts.prototype.clearFixed = function() {
  return this.setFixed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.ParseOpts.prototype.hasFixed = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OptsParquet parquet = 5;
 * @return {?proto.protos.lms.v2.OptsParquet}
 */
proto.protos.lms.v2.ParseOpts.prototype.getParquet = function() {
  return /** @type{?proto.protos.lms.v2.OptsParquet} */ (
    jspb.Message.getWrapperField(this, proto.protos.lms.v2.OptsParquet, 5));
};


/**
 * @param {?proto.protos.lms.v2.OptsParquet|undefined} value
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
*/
proto.protos.lms.v2.ParseOpts.prototype.setParquet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.protos.lms.v2.ParseOpts.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.lms.v2.ParseOpts} returns this
 */
proto.protos.lms.v2.ParseOpts.prototype.clearParquet = function() {
  return this.setParquet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.lms.v2.ParseOpts.prototype.hasParquet = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.lms.v2.OptsCsv.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.OptsCsv.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.OptsCsv.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.OptsCsv} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsCsv.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasHeader: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    skipRows: jspb.Message.getFieldWithDefault(msg, 2, 0),
    headerList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    separator: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.OptsCsv}
 */
proto.protos.lms.v2.OptsCsv.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.OptsCsv;
  return proto.protos.lms.v2.OptsCsv.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.OptsCsv} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.OptsCsv}
 */
proto.protos.lms.v2.OptsCsv.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasHeader(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkipRows(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addHeader(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeparator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.OptsCsv.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.OptsCsv.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.OptsCsv} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsCsv.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasHeader();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSkipRows();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getHeaderList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getSeparator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool has_header = 1;
 * @return {boolean}
 */
proto.protos.lms.v2.OptsCsv.prototype.getHasHeader = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.lms.v2.OptsCsv} returns this
 */
proto.protos.lms.v2.OptsCsv.prototype.setHasHeader = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int64 skip_rows = 2;
 * @return {number}
 */
proto.protos.lms.v2.OptsCsv.prototype.getSkipRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.lms.v2.OptsCsv} returns this
 */
proto.protos.lms.v2.OptsCsv.prototype.setSkipRows = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string header = 3;
 * @return {!Array<string>}
 */
proto.protos.lms.v2.OptsCsv.prototype.getHeaderList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.protos.lms.v2.OptsCsv} returns this
 */
proto.protos.lms.v2.OptsCsv.prototype.setHeaderList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.protos.lms.v2.OptsCsv} returns this
 */
proto.protos.lms.v2.OptsCsv.prototype.addHeader = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.lms.v2.OptsCsv} returns this
 */
proto.protos.lms.v2.OptsCsv.prototype.clearHeaderList = function() {
  return this.setHeaderList([]);
};


/**
 * optional string separator = 4;
 * @return {string}
 */
proto.protos.lms.v2.OptsCsv.prototype.getSeparator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.OptsCsv} returns this
 */
proto.protos.lms.v2.OptsCsv.prototype.setSeparator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.OptsJson.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.OptsJson.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.OptsJson} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsJson.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsRoot: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.OptsJson}
 */
proto.protos.lms.v2.OptsJson.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.OptsJson;
  return proto.protos.lms.v2.OptsJson.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.OptsJson} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.OptsJson}
 */
proto.protos.lms.v2.OptsJson.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordsRoot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.OptsJson.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.OptsJson.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.OptsJson} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsJson.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsRoot();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string records_root = 1;
 * @return {string}
 */
proto.protos.lms.v2.OptsJson.prototype.getRecordsRoot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.lms.v2.OptsJson} returns this
 */
proto.protos.lms.v2.OptsJson.prototype.setRecordsRoot = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.OptsJsonL.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.OptsJsonL.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.OptsJsonL} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsJsonL.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.OptsJsonL}
 */
proto.protos.lms.v2.OptsJsonL.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.OptsJsonL;
  return proto.protos.lms.v2.OptsJsonL.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.OptsJsonL} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.OptsJsonL}
 */
proto.protos.lms.v2.OptsJsonL.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.OptsJsonL.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.OptsJsonL.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.OptsJsonL} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsJsonL.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.lms.v2.OptsFixed.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.OptsFixed.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.OptsFixed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.OptsFixed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsFixed.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasHeader: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    headerList: jspb.Message.toObjectList(msg.getHeaderList(),
    proto.protos.lms.v2.OptsFixed.Field.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.OptsFixed}
 */
proto.protos.lms.v2.OptsFixed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.OptsFixed;
  return proto.protos.lms.v2.OptsFixed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.OptsFixed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.OptsFixed}
 */
proto.protos.lms.v2.OptsFixed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasHeader(value);
      break;
    case 2:
      var value = new proto.protos.lms.v2.OptsFixed.Field;
      reader.readMessage(value,proto.protos.lms.v2.OptsFixed.Field.deserializeBinaryFromReader);
      msg.addHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.OptsFixed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.OptsFixed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.OptsFixed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsFixed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasHeader();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getHeaderList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protos.lms.v2.OptsFixed.Field.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.OptsFixed.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.OptsFixed.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.OptsFixed.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsFixed.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    startingPosition: jspb.Message.getFieldWithDefault(msg, 13, 0),
    fieldLength: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.OptsFixed.Field}
 */
proto.protos.lms.v2.OptsFixed.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.OptsFixed.Field;
  return proto.protos.lms.v2.OptsFixed.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.OptsFixed.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.OptsFixed.Field}
 */
proto.protos.lms.v2.OptsFixed.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartingPosition(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.OptsFixed.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.OptsFixed.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.OptsFixed.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsFixed.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartingPosition();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getFieldLength();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional int32 starting_position = 13;
 * @return {number}
 */
proto.protos.lms.v2.OptsFixed.Field.prototype.getStartingPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.lms.v2.OptsFixed.Field} returns this
 */
proto.protos.lms.v2.OptsFixed.Field.prototype.setStartingPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 field_length = 14;
 * @return {number}
 */
proto.protos.lms.v2.OptsFixed.Field.prototype.getFieldLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.lms.v2.OptsFixed.Field} returns this
 */
proto.protos.lms.v2.OptsFixed.Field.prototype.setFieldLength = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bool has_header = 1;
 * @return {boolean}
 */
proto.protos.lms.v2.OptsFixed.prototype.getHasHeader = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.lms.v2.OptsFixed} returns this
 */
proto.protos.lms.v2.OptsFixed.prototype.setHasHeader = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated Field header = 2;
 * @return {!Array<!proto.protos.lms.v2.OptsFixed.Field>}
 */
proto.protos.lms.v2.OptsFixed.prototype.getHeaderList = function() {
  return /** @type{!Array<!proto.protos.lms.v2.OptsFixed.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protos.lms.v2.OptsFixed.Field, 2));
};


/**
 * @param {!Array<!proto.protos.lms.v2.OptsFixed.Field>} value
 * @return {!proto.protos.lms.v2.OptsFixed} returns this
*/
proto.protos.lms.v2.OptsFixed.prototype.setHeaderList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protos.lms.v2.OptsFixed.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protos.lms.v2.OptsFixed.Field}
 */
proto.protos.lms.v2.OptsFixed.prototype.addHeader = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protos.lms.v2.OptsFixed.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.lms.v2.OptsFixed} returns this
 */
proto.protos.lms.v2.OptsFixed.prototype.clearHeaderList = function() {
  return this.setHeaderList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.lms.v2.OptsParquet.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.lms.v2.OptsParquet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.lms.v2.OptsParquet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsParquet.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.lms.v2.OptsParquet}
 */
proto.protos.lms.v2.OptsParquet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.lms.v2.OptsParquet;
  return proto.protos.lms.v2.OptsParquet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.lms.v2.OptsParquet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.lms.v2.OptsParquet}
 */
proto.protos.lms.v2.OptsParquet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.lms.v2.OptsParquet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.lms.v2.OptsParquet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.lms.v2.OptsParquet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.lms.v2.OptsParquet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.protos.lms.v2);
