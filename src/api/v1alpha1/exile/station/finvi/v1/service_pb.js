// source: api/v1alpha1/exile/station/finvi/v1/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var annotations_authz_pb = require('../../../../../../annotations/authz_pb.js');
goog.object.extend(proto, annotations_authz_pb);
var google_api_annotations_pb = require('../../../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.displayName = 'proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.displayName = 'proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.toObject = function(includeInstance, msg) {
  var f, obj = {
recordId: jspb.Message.getFieldWithDefault(msg, 10, ""),
userId: jspb.Message.getFieldWithDefault(msg, 11, ""),
alternateId: jspb.Message.getFieldWithDefault(msg, 12, ""),
callSid: jspb.Message.getFieldWithDefault(msg, 13, 0),
callType: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq;
  return proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlternateId(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCallSid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAlternateId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCallSid();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getCallType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string record_id = 10;
 * @return {string}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.getRecordId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} returns this
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.setRecordId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string user_id = 11;
 * @return {string}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} returns this
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string alternate_id = 12;
 * @return {string}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.getAlternateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} returns this
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.setAlternateId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int64 call_sid = 13;
 * @return {number}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.getCallSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} returns this
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.setCallSid = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string call_type = 14;
 * @return {string}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.getCallType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq} returns this
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountReq.prototype.setCallType = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.toObject = function(includeInstance, msg) {
  var f, obj = {
jobId: jspb.Message.getFieldWithDefault(msg, 1, 0),
async: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes;
  return proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setJobId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsync(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAsync();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 job_id = 1;
 * @return {number}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.prototype.getJobId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes} returns this
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.prototype.setJobId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool async = 2;
 * @return {boolean}
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.prototype.getAsync = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes} returns this
 */
proto.api.v1alpha1.exile.station.finvi.v1.PopAccountRes.prototype.setAsync = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.api.v1alpha1.exile.station.finvi.v1);
