// source: api/v1alpha1/vanalytics/dncl_list.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_compliance_pb = require('../../../api/commons/compliance_pb.js');
goog.object.extend(proto, api_commons_compliance_pb);
goog.exportSymbol('proto.api.v1alpha1.vanalytics.DnclExpirePeriod', null, global);
goog.exportSymbol('proto.api.v1alpha1.vanalytics.DnclList', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.vanalytics.DnclList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.vanalytics.DnclList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.vanalytics.DnclList.displayName = 'proto.api.v1alpha1.vanalytics.DnclList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.vanalytics.DnclList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.vanalytics.DnclList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.vanalytics.DnclList.toObject = function(includeInstance, msg) {
  var f, obj = {
    listId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contentType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    expirePeriod: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expireOffset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    agentResponseKey: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.vanalytics.DnclList}
 */
proto.api.v1alpha1.vanalytics.DnclList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.vanalytics.DnclList;
  return proto.api.v1alpha1.vanalytics.DnclList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.vanalytics.DnclList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.vanalytics.DnclList}
 */
proto.api.v1alpha1.vanalytics.DnclList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setListId(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.ContentType} */ (reader.readEnum());
      msg.setContentType(value);
      break;
    case 4:
      var value = /** @type {!proto.api.v1alpha1.vanalytics.DnclExpirePeriod} */ (reader.readEnum());
      msg.setExpirePeriod(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpireOffset(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentResponseKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.vanalytics.DnclList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.vanalytics.DnclList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.vanalytics.DnclList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContentType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getExpirePeriod();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpireOffset();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAgentResponseKey();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string list_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.getListId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.vanalytics.DnclList} returns this
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.setListId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional api.commons.ContentType content_type = 3;
 * @return {!proto.api.commons.ContentType}
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.getContentType = function() {
  return /** @type {!proto.api.commons.ContentType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.ContentType} value
 * @return {!proto.api.v1alpha1.vanalytics.DnclList} returns this
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.setContentType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional DnclExpirePeriod expire_period = 4;
 * @return {!proto.api.v1alpha1.vanalytics.DnclExpirePeriod}
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.getExpirePeriod = function() {
  return /** @type {!proto.api.v1alpha1.vanalytics.DnclExpirePeriod} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.api.v1alpha1.vanalytics.DnclExpirePeriod} value
 * @return {!proto.api.v1alpha1.vanalytics.DnclList} returns this
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.setExpirePeriod = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expire_offset = 5;
 * @return {number}
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.getExpireOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.vanalytics.DnclList} returns this
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.setExpireOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string agent_response_key = 6;
 * @return {string}
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.getAgentResponseKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.vanalytics.DnclList} returns this
 */
proto.api.v1alpha1.vanalytics.DnclList.prototype.setAgentResponseKey = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.api.v1alpha1.vanalytics.DnclExpirePeriod = {
  DNCL_EXPIRE_PERIOD_HOUR: 0,
  DNCL_EXPIRE_PERIOD_DAY: 1,
  DNCL_EXPIRE_PERIOD_WEEK: 2,
  DNCL_EXPIRE_PERIOD_MONTH: 4
};

goog.object.extend(exports, proto.api.v1alpha1.vanalytics);
