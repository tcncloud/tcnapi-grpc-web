// source: api/v1alpha1/scorecards/scorecard.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_acd_pb = require('../../../api/commons/acd_pb.js');
goog.object.extend(proto, api_commons_acd_pb);
var api_commons_scorecards_pb = require('../../../api/commons/scorecards_pb.js');
goog.object.extend(proto, api_commons_scorecards_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
goog.exportSymbol('proto.api.v1alpha1.scorecards.CreateScorecardRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.CreateScorecardResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.DeleteScorecardRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.DeleteScorecardResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.GetScorecardRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.GetScorecardResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.ListScorecardsRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.ListScorecardsResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.UpdateScorecardRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.scorecards.UpdateScorecardResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.CreateScorecardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.CreateScorecardRequest.displayName = 'proto.api.v1alpha1.scorecards.CreateScorecardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.CreateScorecardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.CreateScorecardResponse.displayName = 'proto.api.v1alpha1.scorecards.CreateScorecardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.scorecards.ListScorecardsRequest.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.ListScorecardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.ListScorecardsRequest.displayName = 'proto.api.v1alpha1.scorecards.ListScorecardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.scorecards.ListScorecardsResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.ListScorecardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.ListScorecardsResponse.displayName = 'proto.api.v1alpha1.scorecards.ListScorecardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.UpdateScorecardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.UpdateScorecardRequest.displayName = 'proto.api.v1alpha1.scorecards.UpdateScorecardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.UpdateScorecardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.UpdateScorecardResponse.displayName = 'proto.api.v1alpha1.scorecards.UpdateScorecardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.DeleteScorecardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.DeleteScorecardRequest.displayName = 'proto.api.v1alpha1.scorecards.DeleteScorecardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.DeleteScorecardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.DeleteScorecardResponse.displayName = 'proto.api.v1alpha1.scorecards.DeleteScorecardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.GetScorecardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.GetScorecardRequest.displayName = 'proto.api.v1alpha1.scorecards.GetScorecardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.scorecards.GetScorecardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.scorecards.GetScorecardResponse.displayName = 'proto.api.v1alpha1.scorecards.GetScorecardResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.CreateScorecardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.CreateScorecardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardRequest}
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.CreateScorecardRequest;
  return proto.api.v1alpha1.scorecards.CreateScorecardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.CreateScorecardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardRequest}
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.CreateScorecardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.CreateScorecardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.Scorecard scorecard = 1;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 1));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardRequest} returns this
*/
proto.api.v1alpha1.scorecards.CreateScorecardRequest.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardRequest} returns this
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.CreateScorecardRequest.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.CreateScorecardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.CreateScorecardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardResponse}
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.CreateScorecardResponse;
  return proto.api.v1alpha1.scorecards.CreateScorecardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.CreateScorecardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardResponse}
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.CreateScorecardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.CreateScorecardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.Scorecard scorecard = 1;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 1));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardResponse} returns this
*/
proto.api.v1alpha1.scorecards.CreateScorecardResponse.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.scorecards.CreateScorecardResponse} returns this
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.CreateScorecardResponse.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.repeatedFields_ = [2,3,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.ListScorecardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    categoryIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    statesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    evaluationTypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    callTypesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.ListScorecardsRequest;
  return proto.api.v1alpha1.scorecards.ListScorecardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAuthorIds(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCategoryIds(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<!proto.api.commons.ScorecardState>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStates(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<!proto.api.commons.EvaluationType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEvaluationTypes(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<!proto.api.commons.CallType.Enum>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCallTypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.ListScorecardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getCategoryIdsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      3,
      f
    );
  }
  f = message.getStatesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getEvaluationTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getCallTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * repeated string author_ids = 2;
 * @return {!Array<string>}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.getAuthorIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.setAuthorIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.addAuthorIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.clearAuthorIdsList = function() {
  return this.setAuthorIdsList([]);
};


/**
 * repeated int64 category_ids = 3;
 * @return {!Array<number>}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.getCategoryIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.setCategoryIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.addCategoryIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.clearCategoryIdsList = function() {
  return this.setCategoryIdsList([]);
};


/**
 * repeated api.commons.ScorecardState states = 4;
 * @return {!Array<!proto.api.commons.ScorecardState>}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.getStatesList = function() {
  return /** @type {!Array<!proto.api.commons.ScorecardState>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.api.commons.ScorecardState>} value
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.setStatesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.api.commons.ScorecardState} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.addStates = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.clearStatesList = function() {
  return this.setStatesList([]);
};


/**
 * repeated api.commons.EvaluationType evaluation_types = 5;
 * @return {!Array<!proto.api.commons.EvaluationType>}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.getEvaluationTypesList = function() {
  return /** @type {!Array<!proto.api.commons.EvaluationType>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.api.commons.EvaluationType>} value
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.setEvaluationTypesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.api.commons.EvaluationType} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.addEvaluationTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.clearEvaluationTypesList = function() {
  return this.setEvaluationTypesList([]);
};


/**
 * repeated api.commons.CallType.Enum call_types = 6;
 * @return {!Array<!proto.api.commons.CallType.Enum>}
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.getCallTypesList = function() {
  return /** @type {!Array<!proto.api.commons.CallType.Enum>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.api.commons.CallType.Enum>} value
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.setCallTypesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.api.commons.CallType.Enum} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.addCallTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsRequest} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsRequest.prototype.clearCallTypesList = function() {
  return this.setCallTypesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.ListScorecardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.ListScorecardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecardsList: jspb.Message.toObjectList(msg.getScorecardsList(),
    api_commons_scorecards_pb.Scorecard.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsResponse}
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.ListScorecardsResponse;
  return proto.api.v1alpha1.scorecards.ListScorecardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.ListScorecardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsResponse}
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.addScorecards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.ListScorecardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.ListScorecardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * repeated api.commons.Scorecard scorecards = 1;
 * @return {!Array<!proto.api.commons.Scorecard>}
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.prototype.getScorecardsList = function() {
  return /** @type{!Array<!proto.api.commons.Scorecard>} */ (
    jspb.Message.getRepeatedWrapperField(this, api_commons_scorecards_pb.Scorecard, 1));
};


/**
 * @param {!Array<!proto.api.commons.Scorecard>} value
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsResponse} returns this
*/
proto.api.v1alpha1.scorecards.ListScorecardsResponse.prototype.setScorecardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.commons.Scorecard=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.Scorecard}
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.prototype.addScorecards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.commons.Scorecard, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.scorecards.ListScorecardsResponse} returns this
 */
proto.api.v1alpha1.scorecards.ListScorecardsResponse.prototype.clearScorecardsList = function() {
  return this.setScorecardsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.UpdateScorecardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.UpdateScorecardRequest;
  return proto.api.v1alpha1.scorecards.UpdateScorecardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.UpdateScorecardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.Scorecard scorecard = 1;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 1));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest} returns this
*/
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest} returns this
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest} returns this
*/
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardRequest} returns this
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.UpdateScorecardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.UpdateScorecardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardResponse}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.UpdateScorecardResponse;
  return proto.api.v1alpha1.scorecards.UpdateScorecardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.UpdateScorecardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardResponse}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.UpdateScorecardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.UpdateScorecardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.Scorecard scorecard = 1;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 1));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardResponse} returns this
*/
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.scorecards.UpdateScorecardResponse} returns this
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.UpdateScorecardResponse.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.DeleteScorecardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.DeleteScorecardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecardId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.DeleteScorecardRequest}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.DeleteScorecardRequest;
  return proto.api.v1alpha1.scorecards.DeleteScorecardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.DeleteScorecardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.DeleteScorecardRequest}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.DeleteScorecardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.DeleteScorecardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 scorecard_id = 2;
 * @return {number}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.scorecards.DeleteScorecardRequest} returns this
 */
proto.api.v1alpha1.scorecards.DeleteScorecardRequest.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.DeleteScorecardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.DeleteScorecardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.DeleteScorecardResponse}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.DeleteScorecardResponse;
  return proto.api.v1alpha1.scorecards.DeleteScorecardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.DeleteScorecardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.DeleteScorecardResponse}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.DeleteScorecardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.DeleteScorecardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.Scorecard scorecard = 1;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 1));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.v1alpha1.scorecards.DeleteScorecardResponse} returns this
*/
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.scorecards.DeleteScorecardResponse} returns this
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.DeleteScorecardResponse.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.GetScorecardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.GetScorecardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecardId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    useDefault: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardRequest}
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.GetScorecardRequest;
  return proto.api.v1alpha1.scorecards.GetScorecardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.GetScorecardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardRequest}
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setScorecardId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseDefault(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.GetScorecardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.GetScorecardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecardId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUseDefault();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 scorecard_id = 2;
 * @return {number}
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.prototype.getScorecardId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardRequest} returns this
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.prototype.setScorecardId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool use_default = 3;
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.prototype.getUseDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardRequest} returns this
 */
proto.api.v1alpha1.scorecards.GetScorecardRequest.prototype.setUseDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.scorecards.GetScorecardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.scorecards.GetScorecardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scorecard: (f = msg.getScorecard()) && api_commons_scorecards_pb.Scorecard.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardResponse}
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.scorecards.GetScorecardResponse;
  return proto.api.v1alpha1.scorecards.GetScorecardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.scorecards.GetScorecardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardResponse}
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_scorecards_pb.Scorecard;
      reader.readMessage(value,api_commons_scorecards_pb.Scorecard.deserializeBinaryFromReader);
      msg.setScorecard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.scorecards.GetScorecardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.scorecards.GetScorecardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScorecard();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_scorecards_pb.Scorecard.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.Scorecard scorecard = 1;
 * @return {?proto.api.commons.Scorecard}
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.prototype.getScorecard = function() {
  return /** @type{?proto.api.commons.Scorecard} */ (
    jspb.Message.getWrapperField(this, api_commons_scorecards_pb.Scorecard, 1));
};


/**
 * @param {?proto.api.commons.Scorecard|undefined} value
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardResponse} returns this
*/
proto.api.v1alpha1.scorecards.GetScorecardResponse.prototype.setScorecard = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.scorecards.GetScorecardResponse} returns this
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.prototype.clearScorecard = function() {
  return this.setScorecard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.scorecards.GetScorecardResponse.prototype.hasScorecard = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.api.v1alpha1.scorecards);
