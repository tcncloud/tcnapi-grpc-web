// source: api/v1alpha1/contactmanager/contactmanager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_contactmanager_pb = require('../../../api/commons/contactmanager_pb.js');
goog.object.extend(proto, api_commons_contactmanager_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetContactListRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetContactListResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactEntryListRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactEntryListResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetContactListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetContactListRequest.displayName = 'proto.api.v1alpha1.contactmanager.GetContactListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.GetContactListResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetContactListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetContactListResponse.displayName = 'proto.api.v1alpha1.contactmanager.GetContactListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactEntryListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.displayName = 'proto.api.v1alpha1.contactmanager.ListContactEntryListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactEntryListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.displayName = 'proto.api.v1alpha1.contactmanager.ListContactEntryListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.displayName = 'proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.displayName = 'proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetContactListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestMask: (f = msg.getRequestMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetContactListRequest;
  return proto.api.v1alpha1.contactmanager.GetContactListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setRequestMask(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetContactListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestMask();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.FieldMask request_mask = 1;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.getRequestMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 1));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
*/
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.setRequestMask = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.clearRequestMask = function() {
  return this.setRequestMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.hasRequestMask = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 project_id = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetContactListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactListList: jspb.Message.toObjectList(msg.getContactListList(),
    api_commons_contactmanager_pb.ContactManagerList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetContactListResponse;
  return proto.api.v1alpha1.contactmanager.GetContactListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_contactmanager_pb.ContactManagerList;
      reader.readMessage(value,api_commons_contactmanager_pb.ContactManagerList.deserializeBinaryFromReader);
      msg.addContactList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetContactListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      api_commons_contactmanager_pb.ContactManagerList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated api.commons.ContactManagerList contact_list = 1;
 * @return {!Array<!proto.api.commons.ContactManagerList>}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.getContactListList = function() {
  return /** @type{!Array<!proto.api.commons.ContactManagerList>} */ (
    jspb.Message.getRepeatedWrapperField(this, api_commons_contactmanager_pb.ContactManagerList, 1));
};


/**
 * @param {!Array<!proto.api.commons.ContactManagerList>} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse} returns this
*/
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.setContactListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.commons.ContactManagerList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ContactManagerList}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.addContactList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.commons.ContactManagerList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.clearContactListList = function() {
  return this.setContactListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactManagerListId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactEntryListRequest;
  return proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerListId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerListId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 contact_manager_list_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getContactManagerListId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setContactManagerListId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string project_id = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactEntryList: jspb.Message.toObjectList(msg.getContactEntryList(),
    api_commons_contactmanager_pb.ContactManagerEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactEntryListResponse;
  return proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_contactmanager_pb.ContactManagerEntry;
      reader.readMessage(value,api_commons_contactmanager_pb.ContactManagerEntry.deserializeBinaryFromReader);
      msg.addContactEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      api_commons_contactmanager_pb.ContactManagerEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated api.commons.ContactManagerEntry contact_entry = 1;
 * @return {!Array<!proto.api.commons.ContactManagerEntry>}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.getContactEntryList = function() {
  return /** @type{!Array<!proto.api.commons.ContactManagerEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, api_commons_contactmanager_pb.ContactManagerEntry, 1));
};


/**
 * @param {!Array<!proto.api.commons.ContactManagerEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} returns this
*/
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.setContactEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.commons.ContactManagerEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.addContactEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.commons.ContactManagerEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.clearContactEntryList = function() {
  return this.setContactEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactManagerEntryId: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest;
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerEntryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerEntryId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 contact_manager_entry_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.getContactManagerEntryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.setContactManagerEntryId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactEntryList: jspb.Message.toObjectList(msg.getContactEntryList(),
    api_commons_contactmanager_pb.ContactManagerEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse;
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_contactmanager_pb.ContactManagerEntry;
      reader.readMessage(value,api_commons_contactmanager_pb.ContactManagerEntry.deserializeBinaryFromReader);
      msg.addContactEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      api_commons_contactmanager_pb.ContactManagerEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated api.commons.ContactManagerEntry contact_entry = 1;
 * @return {!Array<!proto.api.commons.ContactManagerEntry>}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.getContactEntryList = function() {
  return /** @type{!Array<!proto.api.commons.ContactManagerEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, api_commons_contactmanager_pb.ContactManagerEntry, 1));
};


/**
 * @param {!Array<!proto.api.commons.ContactManagerEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} returns this
*/
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.setContactEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.commons.ContactManagerEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.commons.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.addContactEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.commons.ContactManagerEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.clearContactEntryList = function() {
  return this.setContactEntryList([]);
};


goog.object.extend(exports, proto.api.v1alpha1.contactmanager);
