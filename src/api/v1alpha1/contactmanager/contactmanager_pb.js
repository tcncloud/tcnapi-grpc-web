// source: api/v1alpha1/contactmanager/contactmanager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var localGlobalThis = require("../../../global.js");
var proto = localGlobalThis.proto;
var goog = jspb;
var global = localGlobalThis || 
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var api_commons_audit_audit_pb = require('../../../api/commons/audit/audit_pb.js');
goog.object.extend(proto, api_commons_audit_audit_pb);
var api_commons_classifier_pb = require('../../../api/commons/classifier_pb.js');
goog.object.extend(proto, api_commons_classifier_pb);
var api_commons_contactmanager_pb = require('../../../api/commons/contactmanager_pb.js');
goog.object.extend(proto, api_commons_contactmanager_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.AddContactEntryRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.AddContactEntryResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ContactActivityLog', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ContactField', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ContactManagerEntry', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ContactManagerEntryVal', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ContactManagerList', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.EditContactEntryRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.EditContactEntryResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.EditedEntry', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.Entry', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetContactListRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetContactListResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetKYCKeysRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.GetKYCKeysResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactEntryListRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactEntryListResponse', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest', null, global);
goog.exportSymbol('proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetContactListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetContactListRequest.displayName = 'proto.api.v1alpha1.contactmanager.GetContactListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.GetContactListResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetContactListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetContactListResponse.displayName = 'proto.api.v1alpha1.contactmanager.GetContactListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactEntryListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.displayName = 'proto.api.v1alpha1.contactmanager.ListContactEntryListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactEntryListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.displayName = 'proto.api.v1alpha1.contactmanager.ListContactEntryListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.displayName = 'proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.displayName = 'proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.displayName = 'proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.displayName = 'proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetKYCKeysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.displayName = 'proto.api.v1alpha1.contactmanager.GetKYCKeysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetKYCKeysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.displayName = 'proto.api.v1alpha1.contactmanager.GetKYCKeysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.ContactManagerEntry.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ContactManagerEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ContactManagerEntry.displayName = 'proto.api.v1alpha1.contactmanager.ContactManagerEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ContactManagerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.ContactManagerList.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ContactManagerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ContactManagerList.displayName = 'proto.api.v1alpha1.contactmanager.ContactManagerList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ContactManagerEntryVal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.displayName = 'proto.api.v1alpha1.contactmanager.ContactManagerEntryVal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.AddContactEntryRequest.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.AddContactEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.AddContactEntryRequest.displayName = 'proto.api.v1alpha1.contactmanager.AddContactEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.Entry.displayName = 'proto.api.v1alpha1.contactmanager.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.AddContactEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.AddContactEntryResponse.displayName = 'proto.api.v1alpha1.contactmanager.AddContactEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.EditContactEntryRequest.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.EditContactEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.EditContactEntryRequest.displayName = 'proto.api.v1alpha1.contactmanager.EditContactEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.EditedEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.EditedEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.EditedEntry.displayName = 'proto.api.v1alpha1.contactmanager.EditedEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ContactField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ContactField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ContactField.displayName = 'proto.api.v1alpha1.contactmanager.ContactField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.EditContactEntryResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.EditContactEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.EditContactEntryResponse.displayName = 'proto.api.v1alpha1.contactmanager.EditContactEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.displayName = 'proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.displayName = 'proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.displayName = 'proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.displayName = 'proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.displayName = 'proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.repeatedFields_, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.displayName = 'proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.contactmanager.ContactActivityLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.contactmanager.ContactActivityLog.displayName = 'proto.api.v1alpha1.contactmanager.ContactActivityLog';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetContactListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
requestMask: (f = msg.getRequestMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
projectId: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetContactListRequest;
  return proto.api.v1alpha1.contactmanager.GetContactListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setRequestMask(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetContactListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestMask();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.FieldMask request_mask = 1;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.getRequestMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 1));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
*/
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.setRequestMask = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.clearRequestMask = function() {
  return this.setRequestMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.hasRequestMask = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 project_id = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetContactListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerListList: jspb.Message.toObjectList(msg.getContactManagerListList(),
    proto.api.v1alpha1.contactmanager.ContactManagerList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetContactListResponse;
  return proto.api.v1alpha1.contactmanager.GetContactListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.api.v1alpha1.contactmanager.ContactManagerList;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactManagerList.deserializeBinaryFromReader);
      msg.addContactManagerList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetContactListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.v1alpha1.contactmanager.ContactManagerList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContactManagerList contact_manager_list = 2;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerList>}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.getContactManagerListList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactManagerList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactManagerList, 2));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerList>} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse} returns this
*/
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.setContactManagerListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList}
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.addContactManagerList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.v1alpha1.contactmanager.ContactManagerList, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactListResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactListResponse.prototype.clearContactManagerListList = function() {
  return this.setContactManagerListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerListId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
projectId: jspb.Message.getFieldWithDefault(msg, 3, ""),
pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
pageToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactEntryListRequest;
  return proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerListId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 contact_manager_list_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getContactManagerListId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setContactManagerListId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.clearContactManagerListId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.hasContactManagerListId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string project_id = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerEntryList: jspb.Message.toObjectList(msg.getContactManagerEntryList(),
    proto.api.v1alpha1.contactmanager.ContactManagerEntry.toObject, includeInstance),
nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
cmEntryList: jspb.Message.toObjectList(msg.getCmEntryList(),
    proto.api.v1alpha1.contactmanager.ContactManagerEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactEntryListResponse;
  return proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.api.v1alpha1.contactmanager.ContactManagerEntry;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinaryFromReader);
      msg.addContactManagerEntry(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 4:
      var value = new proto.api.v1alpha1.contactmanager.ContactManagerEntry;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinaryFromReader);
      msg.addCmEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.v1alpha1.contactmanager.ContactManagerEntry.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCmEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api.v1alpha1.contactmanager.ContactManagerEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContactManagerEntry contact_manager_entry = 2;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.getContactManagerEntryList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactManagerEntry, 2));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} returns this
*/
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.setContactManagerEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.addContactManagerEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.v1alpha1.contactmanager.ContactManagerEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.clearContactManagerEntryList = function() {
  return this.setContactManagerEntryList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated ContactManagerEntry cm_entry = 4;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.getCmEntryList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactManagerEntry, 4));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} returns this
*/
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.setCmEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.addCmEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.v1alpha1.contactmanager.ContactManagerEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactEntryListResponse} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactEntryListResponse.prototype.clearCmEntryList = function() {
  return this.setCmEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerEntryId: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest;
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerEntryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerEntryId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 contact_manager_entry_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.getContactManagerEntryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryRequest.prototype.setContactManagerEntryId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerEntryList: jspb.Message.toObjectList(msg.getContactManagerEntryList(),
    proto.api.v1alpha1.contactmanager.ContactManagerEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse;
  return proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.api.v1alpha1.contactmanager.ContactManagerEntry;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinaryFromReader);
      msg.addContactManagerEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.v1alpha1.contactmanager.ContactManagerEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContactManagerEntry contact_manager_entry = 2;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.getContactManagerEntryList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactManagerEntry, 2));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} returns this
*/
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.setContactManagerEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.addContactManagerEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.v1alpha1.contactmanager.ContactManagerEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetEncContactEntryResponse.prototype.clearContactManagerEntryList = function() {
  return this.setContactManagerEntryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
projectId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
kycResponseList: jspb.Message.toObjectList(msg.getKycResponseList(),
    proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest;
  return proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    case 4:
      var value = new proto.api.v1alpha1.contactmanager.ContactManagerEntryVal;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.deserializeBinaryFromReader);
      msg.addKycResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getKycResponseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 project_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * repeated ContactManagerEntryVal kyc_response = 4;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal>}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.getKycResponseList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactManagerEntryVal, 4));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal>} value
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest} returns this
*/
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.setKycResponseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.addKycResponse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.v1alpha1.contactmanager.ContactManagerEntryVal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryRequest.prototype.clearKycResponseList = function() {
  return this.setKycResponseList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
verified: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
contactEntryList: jspb.Message.toObjectList(msg.getContactEntryList(),
    proto.api.v1alpha1.contactmanager.ContactManagerEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse;
  return proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerified(value);
      break;
    case 2:
      var value = new proto.api.v1alpha1.contactmanager.ContactManagerEntry;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinaryFromReader);
      msg.addContactEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerified();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getContactEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.v1alpha1.contactmanager.ContactManagerEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool verified = 1;
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.getVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.setVerified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated ContactManagerEntry contact_entry = 2;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.getContactEntryList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactManagerEntry, 2));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse} returns this
*/
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.setContactEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.addContactEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.v1alpha1.contactmanager.ContactManagerEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCEncContactEntryResponse.prototype.clearContactEntryList = function() {
  return this.setContactEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCKeysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
projectSid: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysRequest}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetKYCKeysRequest;
  return proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCKeysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysRequest}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCKeysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 project_sid = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.prototype.getProjectSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysRequest.prototype.setProjectSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
entryTypeList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetKYCKeysResponse;
  return proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntryType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntryTypeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string entry_type = 1;
 * @return {!Array<string>}
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.prototype.getEntryTypeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.prototype.setEntryTypeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.prototype.addEntryType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.GetKYCKeysResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetKYCKeysResponse.prototype.clearEntryTypeList = function() {
  return this.setEntryTypeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.repeatedFields_ = [10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ContactManagerEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerEntryId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
contactManagerEntryListId: jspb.Message.getFieldWithDefault(msg, 2, "0"),
key: jspb.Message.getFieldWithDefault(msg, 3, ""),
value: jspb.Message.getFieldWithDefault(msg, 4, ""),
type: jspb.Message.getFieldWithDefault(msg, 5, ""),
dateCreated: (f = msg.getDateCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
status: jspb.Message.getFieldWithDefault(msg, 7, 0),
dateModified: (f = msg.getDateModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
ttl: jspb.Message.getFieldWithDefault(msg, 9, 0),
fileNameList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.api.v1alpha1.contactmanager.ContactField.toObject, includeInstance),
expiryDate: (f = msg.getExpiryDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ContactManagerEntry;
  return proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerEntryId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerEntryListId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateCreated(value);
      break;
    case 7:
      var value = /** @type {!proto.api.commons.ContactEntryStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateModified(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTtl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addFileName(value);
      break;
    case 11:
      var value = new proto.api.v1alpha1.contactmanager.ContactField;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactField.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiryDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ContactManagerEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerEntryId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getContactManagerEntryListId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDateCreated();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getDateModified();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTtl();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getFileNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.api.v1alpha1.contactmanager.ContactField.serializeBinaryToWriter
    );
  }
  f = message.getExpiryDate();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 contact_manager_entry_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getContactManagerEntryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setContactManagerEntryId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int64 contact_manager_entry_list_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getContactManagerEntryListId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setContactManagerEntryListId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string value = 4;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp date_created = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getDateCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
*/
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setDateCreated = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.clearDateCreated = function() {
  return this.setDateCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.hasDateCreated = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional api.commons.ContactEntryStatus status = 7;
 * @return {!proto.api.commons.ContactEntryStatus}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getStatus = function() {
  return /** @type {!proto.api.commons.ContactEntryStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.api.commons.ContactEntryStatus} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp date_modified = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getDateModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
*/
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setDateModified = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.clearDateModified = function() {
  return this.setDateModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.hasDateModified = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 ttl = 9;
 * @return {number}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setTtl = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string file_name = 10;
 * @return {!Array<string>}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getFileNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setFileNameList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.addFileName = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.clearFileNameList = function() {
  return this.setFileNameList([]);
};


/**
 * repeated ContactField field = 11;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactField>}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactField, 11));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactField>} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
*/
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactField}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.api.v1alpha1.contactmanager.ContactField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};


/**
 * optional google.protobuf.Timestamp expiry_date = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.getExpiryDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
*/
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.setExpiryDate = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.clearExpiryDate = function() {
  return this.setExpiryDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntry.prototype.hasExpiryDate = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ContactManagerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerListId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
orgId: jspb.Message.getFieldWithDefault(msg, 2, ""),
projectId: jspb.Message.getFieldWithDefault(msg, 3, "0"),
fileName: jspb.Message.getFieldWithDefault(msg, 4, ""),
description: jspb.Message.getFieldWithDefault(msg, 5, ""),
listDetailsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
ttl: jspb.Message.getFieldWithDefault(msg, 7, "0"),
dateCreated: (f = msg.getDateCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
isDeleted: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
status: jspb.Message.getFieldWithDefault(msg, 10, 0),
contactManagerListName: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ContactManagerList;
  return proto.api.v1alpha1.contactmanager.ContactManagerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerListId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addListDetails(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTtl(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDateCreated(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeleted(value);
      break;
    case 10:
      var value = /** @type {!proto.api.commons.ContactListStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactManagerListName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ContactManagerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerListId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getListDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getTtl();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      7,
      f
    );
  }
  f = message.getDateCreated();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsDeleted();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getContactManagerListName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional int64 contact_manager_list_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getContactManagerListId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setContactManagerListId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string org_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 project_id = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string file_name = 4;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string list_details = 6;
 * @return {!Array<string>}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getListDetailsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setListDetailsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.addListDetails = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.clearListDetailsList = function() {
  return this.setListDetailsList([]);
};


/**
 * optional int64 ttl = 7;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getTtl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setTtl = function(value) {
  return jspb.Message.setProto3StringIntField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp date_created = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getDateCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
*/
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setDateCreated = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.clearDateCreated = function() {
  return this.setDateCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.hasDateCreated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool is_deleted = 9;
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getIsDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setIsDeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional api.commons.ContactListStatus status = 10;
 * @return {!proto.api.commons.ContactListStatus}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getStatus = function() {
  return /** @type {!proto.api.commons.ContactListStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.api.commons.ContactListStatus} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional string contact_manager_list_name = 11;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.getContactManagerListName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerList} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerList.prototype.setContactManagerListName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.toObject = function(includeInstance, msg) {
  var f, obj = {
type: jspb.Message.getFieldWithDefault(msg, 1, ""),
value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ContactManagerEntryVal;
  return proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntryVal} returns this
 */
proto.api.v1alpha1.contactmanager.ContactManagerEntryVal.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.AddContactEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerListId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
entryList: jspb.Message.toObjectList(msg.getEntryList(),
    proto.api.v1alpha1.contactmanager.Entry.toObject, includeInstance),
projectSid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.api.v1alpha1.contactmanager.ContactField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.AddContactEntryRequest;
  return proto.api.v1alpha1.contactmanager.AddContactEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerListId(value);
      break;
    case 2:
      var value = new proto.api.v1alpha1.contactmanager.Entry;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.Entry.deserializeBinaryFromReader);
      msg.addEntry(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectSid(value);
      break;
    case 4:
      var value = new proto.api.v1alpha1.contactmanager.ContactField;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactField.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.AddContactEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.v1alpha1.contactmanager.Entry.serializeBinaryToWriter
    );
  }
  f = message.getProjectSid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api.v1alpha1.contactmanager.ContactField.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 contact_manager_list_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.getContactManagerListId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.setContactManagerListId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.clearContactManagerListId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.hasContactManagerListId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Entry entry = 2;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.Entry>}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.getEntryList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.Entry, 2));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.Entry>} value
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} returns this
*/
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.setEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.Entry}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.addEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.v1alpha1.contactmanager.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.clearEntryList = function() {
  return this.setEntryList([]);
};


/**
 * optional int64 project_sid = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.getProjectSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.setProjectSid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * repeated ContactField field = 4;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactField>}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactField, 4));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactField>} value
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} returns this
*/
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactField}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.v1alpha1.contactmanager.ContactField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.AddContactEntryRequest.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
value: jspb.Message.getFieldWithDefault(msg, 2, ""),
type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.Entry}
 */
proto.api.v1alpha1.contactmanager.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.Entry;
  return proto.api.v1alpha1.contactmanager.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.Entry}
 */
proto.api.v1alpha1.contactmanager.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.Entry} returns this
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.Entry} returns this
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.Entry} returns this
 */
proto.api.v1alpha1.contactmanager.Entry.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.AddContactEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.AddContactEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
contactId: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.AddContactEntryResponse;
  return proto.api.v1alpha1.contactmanager.AddContactEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.AddContactEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.AddContactEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.AddContactEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 contact_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.prototype.getContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.AddContactEntryResponse} returns this
 */
proto.api.v1alpha1.contactmanager.AddContactEntryResponse.prototype.setContactId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.EditContactEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerListId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
contactManagerEntryId: jspb.Message.getFieldWithDefault(msg, 2, 0),
editedEntryList: jspb.Message.toObjectList(msg.getEditedEntryList(),
    proto.api.v1alpha1.contactmanager.EditedEntry.toObject, includeInstance),
fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.api.v1alpha1.contactmanager.ContactField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.EditContactEntryRequest;
  return proto.api.v1alpha1.contactmanager.EditContactEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContactManagerListId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContactManagerEntryId(value);
      break;
    case 3:
      var value = new proto.api.v1alpha1.contactmanager.EditedEntry;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.EditedEntry.deserializeBinaryFromReader);
      msg.addEditedEntry(value);
      break;
    case 4:
      var value = new proto.api.v1alpha1.contactmanager.ContactField;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactField.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.EditContactEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getContactManagerEntryId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEditedEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api.v1alpha1.contactmanager.EditedEntry.serializeBinaryToWriter
    );
  }
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api.v1alpha1.contactmanager.ContactField.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 contact_manager_list_id = 1;
 * @return {number}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.getContactManagerListId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.setContactManagerListId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.clearContactManagerListId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.hasContactManagerListId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 contact_manager_entry_id = 2;
 * @return {number}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.getContactManagerEntryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.setContactManagerEntryId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated EditedEntry edited_entry = 3;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.EditedEntry>}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.getEditedEntryList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.EditedEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.EditedEntry, 3));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.EditedEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} returns this
*/
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.setEditedEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.EditedEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.EditedEntry}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.addEditedEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.api.v1alpha1.contactmanager.EditedEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.clearEditedEntryList = function() {
  return this.setEditedEntryList([]);
};


/**
 * repeated ContactField field = 4;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactField>}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactField, 4));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactField>} value
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} returns this
*/
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactField}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.v1alpha1.contactmanager.ContactField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryRequest} returns this
 */
proto.api.v1alpha1.contactmanager.EditContactEntryRequest.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.EditedEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.EditedEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.EditedEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerEntryListId: jspb.Message.getFieldWithDefault(msg, 1, 0),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
value: jspb.Message.getFieldWithDefault(msg, 3, ""),
type: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.EditedEntry}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.EditedEntry;
  return proto.api.v1alpha1.contactmanager.EditedEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.EditedEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.EditedEntry}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContactManagerEntryListId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.EditedEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.EditedEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.EditedEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerEntryListId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 contact_manager_entry_list_id = 1;
 * @return {number}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.getContactManagerEntryListId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.contactmanager.EditedEntry} returns this
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.setContactManagerEntryListId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.EditedEntry} returns this
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.EditedEntry} returns this
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.EditedEntry} returns this
 */
proto.api.v1alpha1.contactmanager.EditedEntry.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ContactField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ContactField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactField.toObject = function(includeInstance, msg) {
  var f, obj = {
name: jspb.Message.getFieldWithDefault(msg, 1, ""),
value: jspb.Message.getFieldWithDefault(msg, 2, ""),
type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ContactField}
 */
proto.api.v1alpha1.contactmanager.ContactField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ContactField;
  return proto.api.v1alpha1.contactmanager.ContactField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ContactField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ContactField}
 */
proto.api.v1alpha1.contactmanager.ContactField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ContactField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ContactField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactField} returns this
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactField} returns this
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactField} returns this
 */
proto.api.v1alpha1.contactmanager.ContactField.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.EditContactEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.EditContactEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.api.v1alpha1.contactmanager.ContactField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.EditContactEntryResponse;
  return proto.api.v1alpha1.contactmanager.EditContactEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.EditContactEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryResponse}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.v1alpha1.contactmanager.ContactField;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactField.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.EditContactEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.EditContactEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.v1alpha1.contactmanager.ContactField.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContactField field = 1;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactField>}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactField, 1));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactField>} value
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryResponse} returns this
*/
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactField}
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.v1alpha1.contactmanager.ContactField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.EditContactEntryResponse} returns this
 */
proto.api.v1alpha1.contactmanager.EditContactEntryResponse.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
projectId: jspb.Message.getFieldWithDefault(msg, 1, "0"),
entityId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest;
  return proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 project_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string entity_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityRequest.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
contactManagerEntryList: jspb.Message.toObjectList(msg.getContactManagerEntryList(),
    proto.api.v1alpha1.contactmanager.ContactManagerEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse;
  return proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.v1alpha1.contactmanager.ContactManagerEntry;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactManagerEntry.deserializeBinaryFromReader);
      msg.addContactManagerEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactManagerEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.v1alpha1.contactmanager.ContactManagerEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContactManagerEntry contact_manager_entry = 1;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.prototype.getContactManagerEntryList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactManagerEntry, 1));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactManagerEntry>} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse} returns this
*/
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.prototype.setContactManagerEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactManagerEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactManagerEntry}
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.prototype.addContactManagerEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.v1alpha1.contactmanager.ContactManagerEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactsByEntityResponse.prototype.clearContactManagerEntryList = function() {
  return this.setContactManagerEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldName: jspb.Message.getFieldWithDefault(msg, 1, ""),
fieldValue: jspb.Message.getFieldWithDefault(msg, 2, ""),
fieldType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest;
  return proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldValue(value);
      break;
    case 3:
      var value = /** @type {!proto.api.commons.ClassifierEntityType} */ (reader.readEnum());
      msg.setFieldType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.api.commons.ClassifierEntityType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string field_name = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.getFieldName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.setFieldName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string field_value = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.getFieldValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.setFieldValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional api.commons.ClassifierEntityType field_type = 3;
 * @return {!proto.api.commons.ClassifierEntityType}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.getFieldType = function() {
  return /** @type {!proto.api.commons.ClassifierEntityType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.api.commons.ClassifierEntityType} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.setFieldType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.clearFieldType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeRequest.prototype.hasFieldType = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
fieldType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse;
  return proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.commons.ClassifierEntityType} */ (reader.readEnum());
      msg.setFieldType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional api.commons.ClassifierEntityType field_type = 1;
 * @return {!proto.api.commons.ClassifierEntityType}
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.prototype.getFieldType = function() {
  return /** @type {!proto.api.commons.ClassifierEntityType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api.commons.ClassifierEntityType} value
 * @return {!proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse} returns this
 */
proto.api.v1alpha1.contactmanager.GetContactFieldTypeResponse.prototype.setFieldType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
projectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
contactManagerEntryId: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest;
  return proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerEntryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContactManagerEntryId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 contact_manager_entry_id = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.getContactManagerEntryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogRequest.prototype.setContactManagerEntryId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
contactActivityLogList: jspb.Message.toObjectList(msg.getContactActivityLogList(),
    proto.api.v1alpha1.contactmanager.ContactActivityLog.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse;
  return proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.v1alpha1.contactmanager.ContactActivityLog;
      reader.readMessage(value,proto.api.v1alpha1.contactmanager.ContactActivityLog.deserializeBinaryFromReader);
      msg.addContactActivityLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactActivityLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.v1alpha1.contactmanager.ContactActivityLog.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContactActivityLog contact_activity_log = 1;
 * @return {!Array<!proto.api.v1alpha1.contactmanager.ContactActivityLog>}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.prototype.getContactActivityLogList = function() {
  return /** @type{!Array<!proto.api.v1alpha1.contactmanager.ContactActivityLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.v1alpha1.contactmanager.ContactActivityLog, 1));
};


/**
 * @param {!Array<!proto.api.v1alpha1.contactmanager.ContactActivityLog>} value
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse} returns this
*/
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.prototype.setContactActivityLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.v1alpha1.contactmanager.ContactActivityLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog}
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.prototype.addContactActivityLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.v1alpha1.contactmanager.ContactActivityLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse} returns this
 */
proto.api.v1alpha1.contactmanager.ListContactActivityLogResponse.prototype.clearContactActivityLogList = function() {
  return this.setContactActivityLogList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.contactmanager.ContactActivityLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.contactmanager.ContactActivityLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.toObject = function(includeInstance, msg) {
  var f, obj = {
orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
projectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
contactManagerEntryId: jspb.Message.getFieldWithDefault(msg, 3, "0"),
eventUser: jspb.Message.getFieldWithDefault(msg, 4, ""),
event: (f = msg.getEvent()) && api_commons_audit_audit_pb.AuditEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.contactmanager.ContactActivityLog;
  return proto.api.v1alpha1.contactmanager.ContactActivityLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.contactmanager.ContactActivityLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setContactManagerEntryId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventUser(value);
      break;
    case 5:
      var value = new api_commons_audit_audit_pb.AuditEvent;
      reader.readMessage(value,api_commons_audit_audit_pb.AuditEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.contactmanager.ContactActivityLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.contactmanager.ContactActivityLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContactManagerEntryId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getEventUser();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      api_commons_audit_audit_pb.AuditEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog} returns this
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.setOrgId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog} returns this
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 contact_manager_entry_id = 3;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.getContactManagerEntryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog} returns this
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.setContactManagerEntryId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string event_user = 4;
 * @return {string}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.getEventUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog} returns this
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.setEventUser = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional api.commons.audit.AuditEvent event = 5;
 * @return {?proto.api.commons.audit.AuditEvent}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.getEvent = function() {
  return /** @type{?proto.api.commons.audit.AuditEvent} */ (
    jspb.Message.getWrapperField(this, api_commons_audit_audit_pb.AuditEvent, 5));
};


/**
 * @param {?proto.api.commons.audit.AuditEvent|undefined} value
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog} returns this
*/
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.contactmanager.ContactActivityLog} returns this
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.contactmanager.ContactActivityLog.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.api.v1alpha1.contactmanager);
