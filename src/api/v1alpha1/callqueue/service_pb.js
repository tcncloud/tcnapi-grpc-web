// source: api/v1alpha1/callqueue/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var globalThis = require("../../../global.js");
var proto = globalThis.proto;
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var annotations_authz_pb = require('../../../annotations/authz_pb.js');
goog.object.extend(proto, annotations_authz_pb);
var api_commons_call_pb = require('../../../api/commons/call_pb.js');
goog.object.extend(proto, api_commons_call_pb);
var api_commons_sms_pb = require('../../../api/commons/sms_pb.js');
goog.object.extend(proto, api_commons_sms_pb);
var api_v0alpha_p3api_pb = require('../../../api/v0alpha/p3api_pb.js');
goog.object.extend(proto, api_v0alpha_p3api_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.api.v1alpha1.callqueue.ClearManualDialQueueReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.ClearManualDialQueueRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.ProcessManualDialCallReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.ProcessManualDialCallRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq', null, global);
goog.exportSymbol('proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.displayName = 'proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.displayName = 'proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.displayName = 'proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.displayName = 'proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.displayName = 'proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.displayName = 'proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.displayName = 'proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.displayName = 'proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.displayName = 'proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.displayName = 'proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.ClearManualDialQueueReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.displayName = 'proto.api.v1alpha1.callqueue.ClearManualDialQueueReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.ClearManualDialQueueRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.displayName = 'proto.api.v1alpha1.callqueue.ClearManualDialQueueRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.ProcessManualDialCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.displayName = 'proto.api.v1alpha1.callqueue.ProcessManualDialCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.ProcessManualDialCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.displayName = 'proto.api.v1alpha1.callqueue.ProcessManualDialCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.displayName = 'proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.displayName = 'proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.displayName = 'proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.displayName = 'proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.displayName = 'proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.displayName = 'proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.displayName = 'proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.displayName = 'proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.displayName = 'proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeoutMinutes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    agentSessionSid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq;
  return proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeoutMinutes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSessionSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeoutMinutes();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAgentSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 timeout_minutes = 1;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.prototype.getTimeoutMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.prototype.setTimeoutMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 agent_session_sid = 2;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.prototype.getAgentSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallReq.prototype.setAgentSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    queueName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
    record: (f = msg.getRecord()) && api_commons_call_pb.SimpleRecordData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes;
  return proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    case 2:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 3:
      var value = new api_commons_call_pb.SimpleRecordData;
      reader.readMessage(value,api_commons_call_pb.SimpleRecordData.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      api_commons_call_pb.SimpleRecordData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string queue_name = 1;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional api.commons.SimpleCallData call = 2;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 2));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} returns this
*/
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.hasCall = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional api.commons.SimpleRecordData record = 3;
 * @return {?proto.api.commons.SimpleRecordData}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.getRecord = function() {
  return /** @type{?proto.api.commons.SimpleRecordData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleRecordData, 3));
};


/**
 * @param {?proto.api.commons.SimpleRecordData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} returns this
*/
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.setRecord = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.DequeuePreviewRecordOrCallRes.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    record: (f = msg.getRecord()) && api_commons_call_pb.SimpleRecordData.toObject(includeInstance, f),
    queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq;
  return proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleRecordData;
      reader.readMessage(value,api_commons_call_pb.SimpleRecordData.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleRecordData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleRecordData record = 1;
 * @return {?proto.api.commons.SimpleRecordData}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.getRecord = function() {
  return /** @type{?proto.api.commons.SimpleRecordData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleRecordData, 1));
};


/**
 * @param {?proto.api.commons.SimpleRecordData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq} returns this
*/
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.setRecord = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes;
  return proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewRecordRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    huntGroupSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phoneNumIndex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    taskGroupSid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    taskSid: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq;
  return proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhoneNumIndex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskGroupSid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTaskSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhoneNumIndex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTaskGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTaskSid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int64 hunt_group_sid = 1;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string phone_number = 2;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 phone_num_index = 3;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.getPhoneNumIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.setPhoneNumIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 task_group_sid = 4;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.getTaskGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.setTaskGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 task_sid = 5;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.getTaskSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordReq.prototype.setTaskSid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes;
  return proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes} returns this
*/
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.DequeueScrubbedCallForPreviewRecordRes.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq;
  return proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes;
  return proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearPreviewRecordReturnQueueRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
    queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq;
  return proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq} returns this
*/
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes;
  return proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueuePreviewDialCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.ClearManualDialQueueReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.ClearManualDialQueueReq}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.ClearManualDialQueueReq;
  return proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.ClearManualDialQueueReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.ClearManualDialQueueReq}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.ClearManualDialQueueReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.ClearManualDialQueueRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.ClearManualDialQueueRes}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.ClearManualDialQueueRes;
  return proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.ClearManualDialQueueRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.ClearManualDialQueueRes}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.ClearManualDialQueueRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ClearManualDialQueueRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.ProcessManualDialCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallReq}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.ProcessManualDialCallReq;
  return proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.ProcessManualDialCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallReq}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.ProcessManualDialCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallReq} returns this
*/
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallReq} returns this
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.ProcessManualDialCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    scrubbedCall: (f = msg.getScrubbedCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallRes}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.ProcessManualDialCallRes;
  return proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.ProcessManualDialCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallRes}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setScrubbedCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.ProcessManualDialCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScrubbedCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData scrubbed_call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.prototype.getScrubbedCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallRes} returns this
*/
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.prototype.setScrubbedCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.ProcessManualDialCallRes} returns this
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.prototype.clearScrubbedCall = function() {
  return this.setScrubbedCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.ProcessManualDialCallRes.prototype.hasScrubbedCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    huntGroupSid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    agentSessionSid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timeoutMinutes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq;
  return proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAgentSessionSid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeoutMinutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAgentSessionSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTimeoutMinutes();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 hunt_group_sid = 1;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 agent_session_sid = 2;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.getAgentSessionSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.setAgentSessionSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 timeout_minutes = 3;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.getTimeoutMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalReq.prototype.setTimeoutMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
    queue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    clientInfo: (f = msg.getClientInfo()) && api_v0alpha_p3api_pb.GetClientInfoDataRes.toObject(includeInstance, f),
    clientInfoTemplate: (f = msg.getClientInfoTemplate()) && api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes;
  return proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    case 3:
      var value = new api_v0alpha_p3api_pb.GetClientInfoDataRes;
      reader.readMessage(value,api_v0alpha_p3api_pb.GetClientInfoDataRes.deserializeBinaryFromReader);
      msg.setClientInfo(value);
      break;
    case 4:
      var value = new api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes;
      reader.readMessage(value,api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes.deserializeBinaryFromReader);
      msg.setClientInfoTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getQueue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClientInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      api_v0alpha_p3api_pb.GetClientInfoDataRes.serializeBinaryToWriter
    );
  }
  f = message.getClientInfoTemplate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} returns this
*/
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue = 2;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.setQueue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional api.v0alpha.GetClientInfoDataRes client_info = 3;
 * @return {?proto.api.v0alpha.GetClientInfoDataRes}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.getClientInfo = function() {
  return /** @type{?proto.api.v0alpha.GetClientInfoDataRes} */ (
    jspb.Message.getWrapperField(this, api_v0alpha_p3api_pb.GetClientInfoDataRes, 3));
};


/**
 * @param {?proto.api.v0alpha.GetClientInfoDataRes|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} returns this
*/
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.setClientInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.clearClientInfo = function() {
  return this.setClientInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.hasClientInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional api.v0alpha.GetClientInfoDisplayTemplateRes client_info_template = 4;
 * @return {?proto.api.v0alpha.GetClientInfoDisplayTemplateRes}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.getClientInfoTemplate = function() {
  return /** @type{?proto.api.v0alpha.GetClientInfoDisplayTemplateRes} */ (
    jspb.Message.getWrapperField(this, api_v0alpha_p3api_pb.GetClientInfoDisplayTemplateRes, 4));
};


/**
 * @param {?proto.api.v0alpha.GetClientInfoDisplayTemplateRes|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} returns this
*/
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.setClientInfoTemplate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.clearClientInfoTemplate = function() {
  return this.setClientInfoTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.DequeueCallForManualApprovalRes.prototype.hasClientInfoTemplate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq} returns this
*/
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq} returns this
*/
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    call: (f = msg.getCall()) && api_commons_call_pb.SimpleCallData.toObject(includeInstance, f),
    queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq;
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_call_pb.SimpleCallData;
      reader.readMessage(value,api_commons_call_pb.SimpleCallData.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_call_pb.SimpleCallData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleCallData call = 1;
 * @return {?proto.api.commons.SimpleCallData}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.getCall = function() {
  return /** @type{?proto.api.commons.SimpleCallData} */ (
    jspb.Message.getWrapperField(this, api_commons_call_pb.SimpleCallData, 1));
};


/**
 * @param {?proto.api.commons.SimpleCallData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq} returns this
*/
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.setCall = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq} returns this
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.hasCall = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq} returns this
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes;
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedCallRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq} returns this
*/
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsReq.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyApprovedSmsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq} returns this
*/
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq} returns this
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsReq.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes;
  return proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.EnqueueManuallyRejectedSmsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f),
    queueName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq;
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
  f = message.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq} returns this
*/
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq} returns this
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue_name = 2;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq} returns this
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsReq.prototype.setQueueName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes;
  return proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.RequeueManuallyApprovedSmsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    huntGroupSid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq;
  return proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHuntGroupSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHuntGroupSid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 hunt_group_sid = 2;
 * @return {number}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.prototype.getHuntGroupSid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq} returns this
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalReq.prototype.setHuntGroupSid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.toObject = function(opt_includeInstance) {
  return proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    sms: (f = msg.getSms()) && api_commons_sms_pb.SimpleSmsMamData.toObject(includeInstance, f),
    queue: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes;
  return proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new api_commons_sms_pb.SimpleSmsMamData;
      reader.readMessage(value,api_commons_sms_pb.SimpleSmsMamData.deserializeBinaryFromReader);
      msg.setSms(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSms();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      api_commons_sms_pb.SimpleSmsMamData.serializeBinaryToWriter
    );
  }
  f = message.getQueue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional api.commons.SimpleSmsMamData sms = 1;
 * @return {?proto.api.commons.SimpleSmsMamData}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.getSms = function() {
  return /** @type{?proto.api.commons.SimpleSmsMamData} */ (
    jspb.Message.getWrapperField(this, api_commons_sms_pb.SimpleSmsMamData, 1));
};


/**
 * @param {?proto.api.commons.SimpleSmsMamData|undefined} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes} returns this
*/
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.setSms = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.clearSms = function() {
  return this.setSms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.hasSms = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string queue = 2;
 * @return {string}
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.getQueue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes} returns this
 */
proto.api.v1alpha1.callqueue.DequeueSmsMamForManualApprovalRes.prototype.setQueue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.api.v1alpha1.callqueue);
